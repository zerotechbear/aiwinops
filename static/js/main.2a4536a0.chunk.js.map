{"version":3,"sources":["styles/Panel/Title.module.scss","styles/Panel/Projects/NewProject.module.scss","styles/UI/Layout/Header.module.scss","styles/Panel/User/Settings.module.scss","styles/Login/LoginForm.module.scss","styles/Login/ResetForm.module.scss","styles/Panel/User/NewUser.module.scss","components/Login/ReCaptcha.js","store/auth-context.js","components/Login/LoginForm.js","components/Login/ResetForm.js","assets/icons/avatar.ico","components/UI/Layout/Header.js","components/UI/Layout/Sidebar.js","components/UI/Layout/PanelLayout.js","components/Panel/Projects/ProjectList.js","components/Panel/Projects/ProjectContent.js","components/Panel/Projects/ProjectPanel.js","components/Panel/Projects/NewProject.js","pages/ProjectPage.js","components/Panel/Users/UserList.js","components/Panel/Users/UserContent.js","components/Panel/Users/UserPanel.js","components/Panel/Users/NewUser.js","components/Panel/Users/Settings.js","pages/UserPage.js","components/Panel/Quota/QuotaList.js","components/Panel/Quota/QuotaContent.js","components/Panel/Quota/QuotaPanel.js","components/Panel/Quota/QuotaUpgrade.js","pages/QuotaPage.js","components/Panel/Dashboard/ModelPie.js","components/Panel/Dashboard/DashboardGraph.js","components/Panel/Dashboard/DashboardContent.js","components/Panel/Dashboard/DashboardPanel.js","pages/DashboardPage.js","components/Panel/Report/ReportGraph.js","components/Panel/Report/ReportContent.js","components/Panel/Report/ReportPanel.js","pages/ReportPage.js","pages/AboutPage.js","pages/TutorialsPage.js","pages/HelpPage.js","pages/LoginPage.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","_IP","AuthContext","React","createContext","token","isLoggedIn","login","logout","userInfo","email","level","userInfoHandler","AuthContextProvider","props","tokenData","localStorage","getItem","useState","setToken","setUserInfo","contextValue","setItem","removeItem","e","l","Provider","value","children","ReCaptcha","recaptchaRef","useRef","onCatchIP","useCallback","fetch","then","res","json","data","IPv4","useEffect","ref","stlye","display","sitekey","theme","size","onChange","console","log","method","body","JSON","stringify","secret","response","remoteip","SIGN_IN_API","LoginForm","Form","useForm","form","history","useHistory","authCtx","useContext","showDrawer","setShowDrawer","onNotShowDrawer","hoverable","style","width","height","margin","className","classes","logo","name","onFinish","values","password","returnSecureToken","headers","ok","Promise","reject","message","error","idToken","success","replace","catch","left","padding","backgroundColor","Item","rules","type","required","prefix","MailOutlined","placeholder","min","Password","LockOutlined","target","checked","onClick","title","onClose","visible","headerStyle","fontWeight","bodyStyle","footer","danger","marginRight","htmlType","borderRadius","Link","href","rel","border","to","RESET_API","ResetForm","isExist","setIsExist","headStyle","textAlign","fontSize","onValuesChange","requestType","setTimeout","push","Error","validator","_","a","send","color","ArrowLeftOutlined","navLinks","path","Header","Layout","Search","Input","menu","key","icon","SettingOutlined","LogoutOutlined","position","justifyContent","zIndex","GlobalOutlined","nav","onSearch","search","activeClassName","active","map","link","index","avatar","overlay","placement","src","tempAvatar","shape","alt","Sidebar","Sider","collapsed","setCollapsed","trigger","collapsedWidth","MenuUnfoldOutlined","MenuFoldOutlined","mode","PieChartOutlined","DesktopOutlined","LineChartOutlined","ContainerOutlined","UserOutlined","PanelLayout","Content","Footer","top","maxHeight","boxSizing","maxWidth","bottom","ProjectList","isLoading","setIsLoading","projectData","setProjectData","confirm","Modal","TABLE_COLUMN","dataIndex","sorter","compare","b","length","multiple","render","text","record","editable","filters","onFilter","status","includes","EditOutlined","showEditModal","DeleteOutlined","showDeleteModal","CheckCircleOutlined","content","okText","okType","onOk","resolve","Math","random","onCancel","CloseCircleOutlined","fetchProjectData","storeData","manager","build_time","modify_time","loading","scroll","y","columns","dataSource","pagination","document","getElementsByClassName","visibilityHeight","breadcrumbMap","ProjectContent","withRouter","url","useRouteMatch","location","locationPath","pathname","split","filter","i","dynamicBreadcrumbItems","breadUrl","slice","join","Panel","NewProject","TextArea","projectColor","setProjectColor","project","Date","toISOString","toString","project_name","project_manager","project_color","hex","description","project_description","agreement","project_agreement","warning","scrollToFirstError","info","allowClear","onChangeComplete","rows","maxLength","showCount","marginBottom","valuePropName","protocol","btn","borderColor","marginLeft","ProjectPage","exact","ProjectPanel","UserList","members","setMembers","fetchMemberData","memberData","id","username","time","register_time","defaultChecked","UserContent","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","NewUser","uid","useParams","label","hasFeedback","autoComplete","dependencies","getFieldValue","UPDATE_API","Settings","settings","displayName","photoUrl","getValueFromEvent","fileList","action","listType","maxCount","UploadOutlined","main","UserPage","UserPanel","QuotaList","layout","bordered","percent","QuotaContent","overflowY","QuotaPanel","QuotaUpgrade","QuotaPage","ModelPie","config","appendPadding","angleField","colorField","radius","innerRadius","interactions","statistic","whiteSpace","overflow","textOverflow","formatter","DashboardGraph","gutter","DashboardContent","DashboardPage","DashboardPanel","md","ReportGraph","model","start","end","take","toFixed","column","ReportContent","defaultValue","options","ReportPanel","ReportPage","AboutPage","TutorialsPage","HelpPage","LoginPage","basename","process","subTitle","extra","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.2a4536a0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__BzxRK\",\"table\":\"Title_table__20OjX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"project\":\"NewProject_project__1E2VF\",\"info\":\"NewProject_info__357BF\",\"protocol\":\"NewProject_protocol__1J3Xo\",\"btn\":\"NewProject_btn__1zQq4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Header_logo__1GmgW\",\"search\":\"Header_search__3DQfr\",\"nav\":\"Header_nav__km9qB\",\"active\":\"Header_active__1PiTM\",\"avatar\":\"Header_avatar__19MkK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__8igxf\",\"avatar\":\"Settings_avatar__1MB52\",\"main\":\"Settings_main__O2p0Q\",\"password\":\"Settings_password__1eiLX\",\"btn\":\"Settings_btn__3ohuf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"LoginForm_logo__1cRB1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"send\":\"ResetForm_send__1PB2W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewUser_form__2jSby\",\"control\":\"NewUser_control__B5m_x\",\"action\":\"NewUser_action__F3Er_\"};","import ReCAPTCHA from \"react-google-recaptcha\";\r\nimport { useEffect, useCallback, useRef } from \"react\";\r\n\r\nconst GEO_IP = \"https://geolocation-db.com/json/\";\r\nconst GOOGLE_RECAPTCHA = \"https://www.google.com/recaptcha/api/siteverify\";\r\nlet _IP;\r\n\r\nconst ReCaptcha = () => {\r\n  const recaptchaRef = useRef();\r\n\r\n  // TODO: 獲取使用者IP位址需要在後端實作\r\n  const onCatchIP = useCallback(() => {\r\n    fetch(GEO_IP)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        _IP = data.IPv4;\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    onCatchIP();\r\n  }, [onCatchIP]);\r\n\r\n  // TODO: 提交表單驗證ReCaptcha需要在後端實作(Cross-Origin-Resource-Strict)\r\n  const onRecapcha = (value) => {\r\n    console.log(\"Captcha: \", value);\r\n    fetch(GOOGLE_RECAPTCHA, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        secret: \"6LdhtHcbAAAAAEri7N7sN84Yqk68jBqBPdSW6bC0\",\r\n        response: value,\r\n        remoteip: _IP\r\n      }),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ReCAPTCHA\r\n      ref={recaptchaRef}\r\n      stlye={{ display: \"inline-block\" }}\r\n      sitekey=\"6LdhtHcbAAAAAHDJsSvNZY1foj0BdpIo4CofBPib\"\r\n      theme=\"light\"\r\n      size=\"normal\"\r\n      onChange={onRecapcha}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ReCaptcha;\r\n","import React, { useState } from 'react';\r\n\r\nconst AuthContext = React.createContext({\r\n  token: null,\r\n  isLoggedIn: false,\r\n  login: (token) => {},\r\n  logout: () => {},\r\n  userInfo: {email: '', level: ''},\r\n  userInfoHandler: (email, level) => {}\r\n});\r\n\r\nconst retrieveToken = () => {\r\n  const storedToken = localStorage.getItem('token');\r\n\r\n  return {\r\n    token: storedToken,\r\n  };\r\n};\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const tokenData = retrieveToken();\r\n  const [token, setToken] = useState(tokenData.token);\r\n  const [userInfo, setUserInfo] = useState({email: '', level: ''});\r\n\r\n  // !!物件永遠回傳true\r\n  const userIsLoggedIn = !!token;\r\n\r\n  const loginHandler = (token) => {\r\n    setToken(token);\r\n    localStorage.setItem('token', token);\r\n  };\r\n\r\n  const logoutHandler = () => {\r\n    setToken(null);\r\n    setUserInfo({email: '', level: ''});\r\n    localStorage.removeItem('uid');\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('level');\r\n  };\r\n\r\n  const userInfoHandler = (e, l) => {\r\n    setUserInfo({email: e, level: l});\r\n    localStorage.setItem('level', l);\r\n    localStorage.setItem('uid', e);\r\n  };\r\n\r\n  const contextValue = {\r\n    token: token,\r\n    isLoggedIn: userIsLoggedIn,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n    userInfo: userInfo,\r\n    userInfoHandler: userInfoHandler,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n","import { useState, useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport classes from \"../../styles/Login/LoginForm.module.scss\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Checkbox,\r\n  Drawer,\r\n  Form,\r\n  Input,\r\n  Space,\r\n  Typography,\r\n  message,\r\n} from \"antd\";\r\nimport { MailOutlined, LockOutlined } from \"@ant-design/icons\";\r\n\r\nimport AuthContext from \"../../store/auth-context\";\r\n\r\nimport ReCaptcha from \"./ReCaptcha\";\r\n\r\n// 目前使用 Firebase Authentication模擬登入\r\nconst FIREBASE_KEY = \"AIzaSyAaf6guV8zB9_4R5xwuDDiQM0zaNzQWuWA\";\r\nconst SIGN_IN_API = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${FIREBASE_KEY}`;\r\n\r\nconst LoginForm = () => {\r\n  const [form] = Form.useForm();\r\n  const history = useHistory();\r\n\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  const [showDrawer, setShowDrawer] = useState(false);\r\n\r\n  // TODO: 驗證USER登入 -> POST/auth/login\r\n  const onLoginAuth = (values) => {\r\n    // Google ReCaptcha人機驗證\r\n    // recaptchaRef.current.execute();\r\n    fetch(SIGN_IN_API, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        email: values.email,\r\n        password: values.password,\r\n        returnSecureToken: true,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n        return Promise.reject(\r\n          message.error(\"The email is invalid or password is incorrect!\")\r\n        );\r\n      })\r\n      .then((data) => {\r\n        authCtx.login(data.idToken);\r\n        message.success(\"Login!\");\r\n        authCtx.userInfoHandler(data.email, \"\");\r\n        if (data.email === \"owner@owner.com\") {\r\n          authCtx.userInfoHandler(data.email, \"owner\");\r\n          message.success(\"You are logged in as Owner!\");\r\n        }\r\n        history.replace('/projects/');\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  // Todo: 連線到Session後儲存使用者資訊到Cookies中，再由Cookies取得登入Email\r\n  const onCheckSaveEmail = (e) => {\r\n    console.log(\"Remember: \", e.target.checked);\r\n  };\r\n\r\n  const onShowDrawer = () => {\r\n    setShowDrawer(true);\r\n  };\r\n\r\n  const onNotShowDrawer = () => {\r\n    setShowDrawer(false);\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      size=\"small\"\r\n      hoverable\r\n      style={{ width: \"50rem\", height: \"100%\", margin: \"14rem auto\" }}\r\n    >\r\n      <span className={classes.logo} />\r\n      <Form\r\n        name=\"login\"\r\n        form={form}\r\n        onFinish={onLoginAuth}\r\n        style={{\r\n          width: \"50%\",\r\n          left: \"50%\",\r\n          margin: \"2rem 0 1rem 0\",\r\n          padding: \"0.5rem\",\r\n          backgroundColor: \"#fff\",\r\n        }}\r\n      >\r\n        <Form.Item\r\n          name=\"email\"\r\n          rules={[\r\n            {\r\n              type: \"email\",\r\n              message: \"The email is invalid!\",\r\n            },\r\n            {\r\n              required: true,\r\n              message: \"The email field should not be empty!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input prefix={<MailOutlined />} placeholder=\"Email@domain.com\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"The password field shoud not be empty!\",\r\n            },\r\n            {\r\n              min: 6,\r\n              message: \"The password should at least contain 6 characters!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input.Password placeholder=\"Password\" prefix={<LockOutlined />} />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <ReCaptcha />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Checkbox onChange={onCheckSaveEmail}>記住我</Checkbox>\r\n          <Button type=\"link\" onClick={onShowDrawer}>\r\n            隱私權政策\r\n          </Button>\r\n          <Drawer\r\n            title=\"隱私權條款\"\r\n            width={720}\r\n            onClose={onNotShowDrawer}\r\n            visible={showDrawer}\r\n            headerStyle={{ fontWeight: 700 }}\r\n            bodyStyle={{ padding: 20 }}\r\n            footer={\r\n              <div style={{ margin: \"1rem\" }}>\r\n                <Button\r\n                  danger\r\n                  onClick={onNotShowDrawer}\r\n                  style={{ marginRight: \"2rem\" }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button type=\"primary\" onClick={onNotShowDrawer}>\r\n                  Confirm\r\n                </Button>\r\n              </div>\r\n            }\r\n          >\r\n            <h3>\r\n              非常歡迎您光臨「AIWinOps」（以下簡稱本網站），為了讓您能夠安心的使用本網站的各項服務與資訊，特此向您說明本網站的隱私權保護政策，以保障您的權益，請您詳閱下列內容：\r\n            </h3>\r\n            <h3>一、隱私權保護政策的適用範圍</h3>\r\n            <p>\r\n              隱私權保護政策內容，包括本網站如何處理在您使用網站服務時收集到的個人識別資料。隱私權保護政策不適用於本網站以外的相關連結網站，也不適用於非本網站所委託或參與管理的人員。\r\n            </p>\r\n            <h3>二、個人資料的蒐集、處理及利用方式</h3>\r\n            <ul>\r\n              <li>\r\n                當您造訪本網站或使用本網站所提供之功能服務時，我們將視該服務功能性質，請您提供必要的個人資料，並在該特定目的範圍內處理及利用您的個人資料；非經您書面同意，本網站不會將個人資料用於其他用途。\r\n              </li>\r\n              <li>\r\n                於一般瀏覽時，伺服器會自行記錄相關行徑，包括您使用連線設備的IP位址、使用時間、使用的瀏覽器、瀏覽及點選資料記錄等，做為我們增進網站服務的參考依據，此記錄為內部應用，決不對外公佈。\r\n              </li>\r\n              <li>\r\n                為提供精確的服務，我們會將收集的問卷調查內容進行統計與分析，分析結果之統計數據或說明文字呈現，除供內部研究外，我們會視需要公佈統計數據及說明文字，但不涉及特定個人之資料。\r\n              </li>\r\n            </ul>\r\n            <h3>三、資料之保護</h3>\r\n            <ul>\r\n              <li>\r\n                本網站主機均設有防火牆、防毒系統等相關的各項資訊安全設備及必要的安全防護措施，加以保護網站及您的個人資料採用嚴格的保護措施，只由經過授權的人員才能接觸您的個人資料，相關處理人員皆簽有保密合約，如有違反保密義務者，將會受到相關的法律處分。\r\n              </li>\r\n              <li>\r\n                如因業務需要有必要委託其他單位提供服務時，本網站亦會嚴格要求其遵守保密義務，並且採取必要檢查程序以確定其將確實遵守。\r\n              </li>\r\n            </ul>\r\n            <h3>四、Cookie之使用</h3>\r\n            <p>\r\n              為了提供您最佳的服務，本網站會在您的電腦中放置並取用我們的Cookie，若您不願接受Cookie的寫入，您可在您使用的瀏覽器功能項中設定隱私權等級為高，即可拒絕Cookie的寫入，但可能會導致網站某些功能無法正常執行\r\n              。\r\n            </p>\r\n            <h3>五、隱私權保護政策之修正</h3>\r\n            <p>\r\n              本網站隱私權保護政策將因應需求隨時進行修正，修正後的條款將刊登於網站上。\r\n            </p>\r\n          </Drawer>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            style={{\r\n              width: \"100%\",\r\n              fontWeight: \"600\",\r\n              borderRadius: \"5px\",\r\n            }}\r\n          >\r\n            LOGIN\r\n          </Button>\r\n        </Form.Item>\r\n        <Space size={155}>\r\n          <Typography.Link\r\n            href=\"https://www.zerodimension.com.tw/default.aspx#contact\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            <Button\r\n              type=\"link\"\r\n              style={{\r\n                width: \"100%\",\r\n                border: \"1px solid #03a9f4\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n            >\r\n              HELP\r\n            </Button>\r\n          </Typography.Link>\r\n          <Link to=\"/reset\">\r\n            <Button\r\n              type=\"link\"\r\n              style={{\r\n                width: \"100%\",\r\n                border: \"1px solid #03a9f4\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n            >\r\n              Forgot Password?\r\n            </Button>\r\n          </Link>\r\n        </Space>\r\n      </Form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport { Button, Card, Form, Input, message } from 'antd';\r\nimport { MailOutlined, ArrowLeftOutlined } from '@ant-design/icons';\r\nimport classes from '../../styles/Login/ResetForm.module.scss';\r\n\r\nconst FIREBASE_KEY = 'AIzaSyAaf6guV8zB9_4R5xwuDDiQM0zaNzQWuWA';\r\nconst RESET_API = `https://identitytoolkit.googleapis.com/v1/accounts:sendOobCode?key=${FIREBASE_KEY}`;\r\n\r\nconst ResetForm = (props) => {\r\n  const [form] = Form.useForm();\r\n  const history = useHistory();\r\n\r\n  const [isExist, setIsExist] = useState(true);\r\n\r\n  // TODO: 驗證USER登入 -> POST/auth/reset -> 發送重設密碼信件給已註冊的使用者\r\n  const resetPasswordHandler = (values) => {\r\n    fetch(RESET_API, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        email: values.email,\r\n        requestType: 'PASSWORD_RESET',\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          message.success('Reset email is sent, please check your email.');\r\n          setTimeout(() => {\r\n            history.push('/');\r\n          }, 2000);\r\n        } else {\r\n          message.error('Email account does not exist!');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n  };\r\n\r\n  const emailEnter = () => {\r\n    setIsExist(true);\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      title='Forgot Password'\r\n      hoverable\r\n      headStyle={{\r\n        textAlign: 'center',\r\n        fontSize: '1.25rem',\r\n      }}\r\n      style={{\r\n        width: '25rem',\r\n        margin: '10rem auto',\r\n      }}>\r\n      <Form\r\n        form={form}\r\n        onValuesChange={emailEnter}\r\n        onFinish={resetPasswordHandler}\r\n        style={{\r\n          width: '80%',\r\n          margin: 'auto',\r\n        }}>\r\n\r\n        <Form.Item\r\n          name='email'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please enter your email to reset!',\r\n            },\r\n            {\r\n              type: 'email',\r\n              message: 'The email format is invalid!',\r\n            },\r\n            {\r\n              validator: async (_, value) => {\r\n                if (!isExist) {\r\n                  throw new Error('Email does not exist!');\r\n                }\r\n              },\r\n            },\r\n          ]}>\r\n          <Input prefix={<MailOutlined />} placeholder='Email@domain.com' />\r\n        </Form.Item>\r\n        <div className={classes.send}>\r\n          <Form.Item>\r\n            <Link to='/'>\r\n              <Button type='default' style={{ color: '#000' }}>\r\n                <ArrowLeftOutlined />\r\n                LOGIN\r\n              </Button>\r\n            </Link>\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button type='primary' htmlType='submit'>\r\n              SEND\r\n            </Button>\r\n          </Form.Item>\r\n        </div>\r\n      </Form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ResetForm;\r\n","export default __webpack_public_path__ + \"static/media/avatar.5676a918.ico\";","import { useContext } from 'react';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\n\r\nimport tempAvatar from '../../../assets/icons/avatar.ico';\r\n\r\nimport { Avatar, Dropdown, Input, Layout, Menu } from 'antd';\r\nimport {\r\n  SettingOutlined,\r\n  LogoutOutlined,\r\n  GlobalOutlined\r\n} from '@ant-design/icons';\r\nimport classes from '../../../styles/UI/Layout/Header.module.scss';\r\n\r\n\r\nimport AuthContext from '../../../store/auth-context';\r\n\r\nconst navLinks = [\r\n  {\r\n    title: 'About',\r\n    path: '/about',\r\n  },\r\n  {\r\n    title: 'Tutorials',\r\n    path: '/tutorials',\r\n  },\r\n  {\r\n    title: 'Help',\r\n    path: '/help',\r\n  },\r\n];\r\n\r\nconst Header = () => {\r\n  const { Header } = Layout;\r\n  const { Search } = Input;\r\n  const history = useHistory();\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  // 搜尋專案 -> 可能透過Antd Table Column Filter\r\n  const searchProjectHandler = (value) => {\r\n    console.log(value);\r\n  };\r\n\r\n  const userMenu = (e) => {\r\n    if (e.key === 'settings') {\r\n      history.push('/settings');\r\n    }\r\n    if (e.key === 'logout') {\r\n      authCtx.logout();\r\n      history.replace('/');\r\n    }\r\n  };\r\n\r\n  const menu = (\r\n    <Menu theme='dark' onClick={userMenu}>\r\n      <Menu.Item key='settings' icon={<SettingOutlined />}>\r\n        {/* 導向個人資訊頁面 */}\r\n        Setting\r\n      </Menu.Item>\r\n      <Menu.Item key='logout' icon={<LogoutOutlined />}>\r\n        Logout\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Header\r\n      className=\"header\"\r\n      style={{\r\n        position: 'fixed',\r\n        width: '100%',\r\n        height: '5rem',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        zIndex: '5',\r\n      }}>\r\n      <div className={classes.logo}>\r\n        <NavLink to={`/projects`}>\r\n          <GlobalOutlined style={{ fontSize: '20px', marginRight: '5px' }} />\r\n          AIWinOps\r\n        </NavLink>\r\n      </div>\r\n      <nav className={classes.nav}>\r\n        <div>\r\n          <ul>\r\n            <Search\r\n              placeholder='Search Project'\r\n              onSearch={searchProjectHandler}\r\n              className={classes.search}\r\n            />\r\n            <li>\r\n              <NavLink to={`/projects`} activeClassName={classes.active}>\r\n                Home\r\n              </NavLink>\r\n            </li>\r\n            {navLinks.map((link, index) => (\r\n              <li key={index}>\r\n                <NavLink\r\n                  to={`${link.path}`}\r\n                  activeClassName={classes.active}>\r\n                  {link.title}\r\n                </NavLink>\r\n              </li>\r\n            ))}\r\n            <span className={classes.avatar}>\r\n              <Dropdown overlay={menu} placement='bottomRight'>\r\n                <Avatar src={tempAvatar} shape=\"square\" size={45} alt=\"avatar\"></Avatar>\r\n              </Dropdown>\r\n            </span>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Layout, Menu, Button } from \"antd\";\r\nimport {\r\n  PieChartOutlined,\r\n  DesktopOutlined,\r\n  ContainerOutlined,\r\n  LineChartOutlined,\r\n  UserOutlined,\r\n  MenuFoldOutlined,\r\n  MenuUnfoldOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nconst Sidebar = () => {\r\n  const { Sider } = Layout;\r\n  const history = useHistory();\r\n\r\n  const [collapsed, setCollapsed] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    setCollapsed((collapsed) => !collapsed);\r\n  };\r\n\r\n  const panelInfoRouter = (e) => {\r\n    history.push(`/${e.key}`);\r\n  };\r\n\r\n  return (\r\n    <Sider\r\n      className=\"site-layout-background\"\r\n      trigger={null}\r\n      width={200}\r\n      collapsedWidth={80}\r\n      collapsed={collapsed}\r\n      style={{\r\n        position: \"relative\",\r\n        height: \"auto\",\r\n        zIndex: \"30\",\r\n      }}\r\n    >\r\n      <Button\r\n        type=\"dashed\"\r\n        onClick={toggleMenu}\r\n        style={{ display: \"flex\", width: \"60px\", border: \"none\" }}\r\n      >\r\n        {collapsed ? (\r\n          <MenuUnfoldOutlined style={{ fontSize: \"20px\" }} />\r\n        ) : (\r\n          <MenuFoldOutlined style={{ fontSize: \"20px\" }} />\r\n        )}\r\n      </Button>\r\n      <Menu mode=\"inline\" theme=\"dark\" onClick={panelInfoRouter}>\r\n        <Menu.Item key=\"projects\" icon={<PieChartOutlined />}>\r\n          Project\r\n        </Menu.Item>\r\n        <Menu.Item key=\"dashboard\" icon={<DesktopOutlined />}>\r\n          Dashboard\r\n        </Menu.Item>\r\n        <Menu.Item key=\"report\" icon={<LineChartOutlined />}>\r\n          Report\r\n        </Menu.Item>\r\n        <Menu.Item key=\"quota\" icon={<ContainerOutlined />}>\r\n          Quota\r\n        </Menu.Item>\r\n        <Menu.Item key=\"users\" icon={<UserOutlined />}>\r\n          Users\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Sider>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import { Layout } from 'antd';\r\n\r\nimport Header from './Header';\r\nimport Sidebar from './Sidebar';\r\n\r\nconst PanelLayout = (props) => {\r\n  const { Content, Footer } = Layout;\r\n\r\n  const footerStyle = {\r\n    textAlign: 'center',\r\n    position: 'fixed',\r\n    height: '2rem',\r\n    left: '50px',\r\n    width: '100%',\r\n    bottom: '0',\r\n    padding: '5px',\r\n    backgroundColor: '#fafafa',\r\n    color: '#000',\r\n    zIndex: '20',\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <Header />\r\n      <Layout style={{ top: '5rem' }}>\r\n        {localStorage.getItem('level') === 'owner' ? <Sidebar /> : ''}\r\n        <Layout style={{ width: '100%', height: '100vh', margin: '20px' }}>\r\n          <Content\r\n            style={{\r\n              maxHeight: '100vh',\r\n              boxSizing: 'border-box',\r\n              maxWidth: '98%'\r\n            }}>\r\n            {props.children}\r\n          </Content>\r\n          <Footer style={footerStyle}>\r\n            Copyright @ 2021 AIWinOps. All Rights Reserved\r\n          </Footer>\r\n        </Layout>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default PanelLayout;\r\n","import { useState, useEffect, useCallback, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { BackTop, Table, Space, Modal } from 'antd';\r\nimport {\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  CloseCircleOutlined,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport AuthContext from '../../../store/auth-context';\r\n\r\nconst PROJECT_URL =\r\n'https://aiwinops-default-rtdb.firebaseio.com/projects.json';\r\n\r\nconst ProjectList = (props) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [projectData, setProjectData] = useState(null);\r\n  const { confirm } = Modal;\r\n\r\n  const authCtx = useContext(AuthContext);\r\n  const level = authCtx.userInfo.level;\r\n  const actions =\r\n    level === 'owner'\r\n      ? {\r\n          title: '其他操作',\r\n          key: 'editable',\r\n          dataIndex: 'editable',\r\n          render: () => {\r\n            return (\r\n              <Space>\r\n                {/* 連結Icon到各自專案的編輯畫面 */}\r\n                <EditOutlined\r\n                  style={{ fontSize: '150%', color: '#096dd9' }}\r\n                  onClick={showEditModal}\r\n                />\r\n                <DeleteOutlined\r\n                  style={{\r\n                    fontSize: '150%',\r\n                    margin: '0 1rem',\r\n                    color: '#ff4d4f',\r\n                  }}\r\n                  onClick={showDeleteModal}\r\n                />\r\n              </Space>\r\n            );\r\n          },\r\n        }\r\n      : {\r\n          title: '其他操作',\r\n          key: 'editable',\r\n          dataIndex: 'editable',\r\n        };\r\n\r\n  const TABLE_COLUMN = [\r\n    {\r\n      title: '專案名稱',\r\n      key: 'name',\r\n      dataIndex: 'name',\r\n      sorter: {\r\n        compare: (a, b) => a.name.length > b.name.length,\r\n        multiple: 10\r\n      },\r\n      render: (text, record) => {\r\n        return <Link to={`/projects/${text}`}>{text}</Link>;\r\n      },\r\n    },\r\n    {\r\n      title: '狀態',\r\n      key: 'status',\r\n      dataIndex: 'status',\r\n      editable: true,\r\n      filters: [\r\n        { text: 'Completed', value: 'Completed'},\r\n        { text: 'In Progress', value: 'In Progress'}\r\n      ],\r\n      onFilter: (value, record) => record.status.includes(value)\r\n    },\r\n    {\r\n      title: '管理者',\r\n      key: 'manager',\r\n      dataIndex: 'manager',\r\n    },\r\n    {\r\n      title: '建立日期',\r\n      key: 'build_time',\r\n      dataIndex: 'build_time',\r\n    },\r\n    {\r\n      title: '修改日期',\r\n      key: 'modify_time',\r\n      dataIndex: 'modify_time',\r\n    },\r\n    actions,\r\n  ];\r\n\r\n  // TODO: 取得後端資料庫的專案資料\r\n  const showEditModal = () => {\r\n    confirm({\r\n      title: 'CHECK',\r\n      icon: <CheckCircleOutlined style={{ color: '#096dd9' }} />,\r\n      content: 'Would you like to edit this project?',\r\n      okText: 'Confirm',\r\n      okType: 'primary',\r\n      onOk() {\r\n        return new Promise((resolve, reject) => {\r\n          setTimeout(Math.random > 0.5 ? resolve : reject, 1000);\r\n        })\r\n          .then(() => {\r\n            // GET method: 取得資料庫專案資料\r\n          })\r\n          .catch(() => {\r\n            // GET method failed\r\n          });\r\n      },\r\n      onCancel() {},\r\n    });\r\n  };\r\n\r\n  // TODO: 刪除後端資料庫的專案資料\r\n  const showDeleteModal = () => {\r\n    confirm({\r\n      title: 'DANGER',\r\n      icon: <CloseCircleOutlined style={{ color: '#ff4d4f' }} />,\r\n      content: 'Are you sure to delete this project?',\r\n      okText: 'Delete',\r\n      okType: 'danger',\r\n      onOk() {\r\n        return new Promise((resolve, reject) => {\r\n          setTimeout(Math.random > 0.5 ? resolve : reject, 2000);\r\n        })\r\n          .then(() => {\r\n            // POST method: 刪除資料庫專案資料\r\n          })\r\n          .catch(() => {\r\n            // POST method failed\r\n          });\r\n      },\r\n      onCancel() {},\r\n    });\r\n  };\r\n\r\n  // 抓取使用者專案的資料 -> GET/ProjectData\r\n  const fetchProjectData = useCallback(() => {\r\n    setIsLoading(true);\r\n    fetch(PROJECT_URL)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        const storeData = [];\r\n        for (const key in data) {\r\n          storeData.push({\r\n            key: key,\r\n            name: data[key].name,\r\n            status: data[key].status,\r\n            manager: data[key].manager,\r\n            build_time: data[key].build_time,\r\n            modify_time: data[key].modify_time,\r\n          });\r\n        }\r\n        setIsLoading(false);\r\n        setProjectData(storeData);\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchProjectData();\r\n  }, [fetchProjectData]);\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        loading={isLoading}\r\n        scroll={{ y: '65vh' }}\r\n        columns={TABLE_COLUMN}\r\n        dataSource={projectData}\r\n        pagination={false}\r\n      />\r\n      <BackTop\r\n        target={() => document.getElementsByClassName('ant-table-body')[0]}\r\n        visibilityHeight={300}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import { withRouter } from \"react-router\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\n\r\nimport { Button, Breadcrumb } from \"antd\";\r\nimport { PieChartOutlined } from \"@ant-design/icons\";\r\nimport classes from \"../../../styles/Panel/Title.module.scss\";\r\n\r\nimport ProjectList from \"./ProjectList\";\r\n\r\nconst breadcrumbMap = {\r\n  \"/projects\": \"專案\",\r\n  \"/projects/Theta\": \"專案內容\",\r\n  \"/projects/new-project:\": \"新增專案\",\r\n};\r\n\r\nconst ProjectContent = withRouter((props) => {\r\n  const { url } = useRouteMatch();\r\n\r\n  const { location, history } = props;\r\n  const locationPath = location.pathname.split(\"/\").filter((i) => i);\r\n  const dynamicBreadcrumbItems = locationPath.map((_, index) => {\r\n    const breadUrl = `/${locationPath.slice(0, index + 1).join(\"/\")}`;\r\n    return (\r\n      <Breadcrumb.Item key={breadUrl}>\r\n        <Link to={breadUrl}>{breadcrumbMap[breadUrl]}</Link>\r\n      </Breadcrumb.Item>\r\n    );\r\n  });\r\n\r\n  // const BreadcrumbItems = [].concat(dynamicBreadcrumbItems)\r\n\r\n  const onNewProject = () => {\r\n    history.push(`${url}/create`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Breadcrumb><PieChartOutlined style={{fontSize: '120%'}} />  {dynamicBreadcrumbItems}</Breadcrumb>\r\n      <div className={classes.title}>\r\n        <h3>專案</h3>\r\n        {localStorage.getItem(\"level\") === \"owner\" ? (\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={onNewProject}\r\n            style={{ fontWeight: \"700\" }}\r\n          >\r\n            +新專案\r\n          </Button>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n      <ProjectList />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default ProjectContent;\r\n","import PanelLayout from '../../UI/Layout/PanelLayout';\r\nimport ProjectContent from './ProjectContent';\r\n\r\nconst Panel = () => {\r\n  return (\r\n    <PanelLayout>\r\n      <ProjectContent />\r\n    </PanelLayout>\r\n  );\r\n}\r\n\r\nexport default Panel;","import { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { CirclePicker } from 'react-color';\r\n\r\nimport { Button, Checkbox, Form, Input, message } from 'antd';\r\nimport classes from '../../../styles/Panel/Projects/NewProject.module.scss';\r\n\r\nimport PanelLayout from '../../UI/Layout/PanelLayout';\r\n\r\nconst PROJECT_URL =\r\n  'https://aiwinops-default-rtdb.firebaseio.com/projects.json';\r\n\r\nconst NewProject = () => {\r\n  const [form] = Form.useForm();\r\n  const { TextArea } = Input;\r\n  const history = useHistory();\r\n\r\n  const [projectColor, setProjectColor] = useState('#fff');\r\n\r\n  const getColor = (color) => {\r\n    setProjectColor(color.hex);\r\n  };\r\n\r\n  // TODO: 將新專案新增至資料庫 /PUSH/New-Project\r\n  const onNewProject = (values) => {\r\n    fetch(PROJECT_URL, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        build_time: new Date().toISOString().toString().slice(0, -5),\r\n        name: values.project_name,\r\n        manager: values.project_manager,\r\n        color: values.project_color.hex,\r\n        description: values.project_description,\r\n        agreement: values.project_agreement,\r\n        status: 'In Progress',\r\n        editable: true,\r\n      }),\r\n      headers: { 'Content-Type': 'application/json' },\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          message.success('You have created a new project!');\r\n          return response.json();\r\n        } else {\r\n          return message.warning('Failed to create new project!');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n\r\n    setTimeout(() => {\r\n      history.push(`/projects`);\r\n    }, 1000);\r\n  };\r\n\r\n  const onCancelProject = () => {\r\n    history.push(`/projects`);\r\n  };\r\n\r\n  return (\r\n    <PanelLayout>\r\n      <section className={classes.project}>\r\n        <h2>新專案</h2>\r\n        <Form\r\n          form={form}\r\n          name='project'\r\n          onFinish={onNewProject}\r\n          scrollToFirstError>\r\n          <div className={classes.info}>\r\n            <h4>專案名稱</h4>\r\n            <Form.Item\r\n              name='project_name'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Project name should not be empty!',\r\n                },\r\n              ]}>\r\n              <Input placeholder='Project Name' allowClear />\r\n            </Form.Item>\r\n            <h4>管理者</h4>\r\n            <Form.Item\r\n              name='project_manager'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Project manager should be provided!',\r\n                },\r\n              ]}>\r\n              <Input placeholder='Project Manager' allowClear />\r\n            </Form.Item>\r\n            <h4>專案顏色</h4>\r\n            <Form.Item\r\n              name='project_color'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Choose color for new project!',\r\n                },\r\n              ]}>\r\n              <CirclePicker\r\n                width={300}\r\n                color={projectColor}\r\n                onChangeComplete={getColor}\r\n              />\r\n            </Form.Item>\r\n            <h4>專案描述(Optional)</h4>\r\n            <Form.Item name='project_description'>\r\n              <TextArea\r\n                placeholder='Project Description'\r\n                rows={5}\r\n                maxLength={300}\r\n                showCount\r\n                allowClear\r\n                style={{ marginBottom: '2.5rem' }}\r\n              />\r\n            </Form.Item>\r\n          </div>\r\n          <Form.Item\r\n            name='project_agreement'\r\n            valuePropName='checked'\r\n            rules={[\r\n              {\r\n                validator: (_, value) =>\r\n                  value\r\n                    ? Promise.resolve()\r\n                    : Promise.reject(new Error('使用服務前請先閱讀說明')),\r\n              },\r\n            ]}>\r\n            <div className={classes.protocol}>\r\n              <h1>資料協議</h1>\r\n              <section>\r\n                請您在開始使用AIWin系列產品(以下簡稱\"本產品\")前，務必仔細閱讀並同意《用戶協議》(以下簡稱\"本協議\")\r\n                中規定的所有權利和限制。\r\n              </section>\r\n              <Checkbox>Accept</Checkbox>\r\n            </div>\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <div className={classes.btn}>\r\n              <Button\r\n                type='primary'\r\n                htmlType='submit'\r\n                style={{\r\n                  fontWeight: '550',\r\n                  backgroundColor: '#096dd9',\r\n                  borderColor: '#096dd9',\r\n                }}>\r\n                建立專案\r\n              </Button>\r\n              <Button\r\n                type='default'\r\n                danger\r\n                onClick={onCancelProject}\r\n                style={{ marginLeft: '1rem' }}>\r\n                取消\r\n              </Button>\r\n            </div>\r\n          </Form.Item>\r\n        </Form>\r\n      </section>\r\n    </PanelLayout>\r\n  );\r\n};\r\n\r\nexport default NewProject;\r\n","import { Route, Switch, useRouteMatch } from \"react-router-dom\";\r\n\r\nimport ProjectPanel from \"../components/Panel/Projects/ProjectPanel\";\r\nimport NewProject from \"../components/Panel/Projects/NewProject\";\r\n\r\nconst ProjectPage = () => {\r\n  const { path } = useRouteMatch();\r\n  return (\r\n    <Switch>\r\n      {/* 根據路徑渲染 exact 不能在父組件使用exact，會造成路徑條件不同 */}\r\n      <Route path={`${path}`} exact>\r\n        <ProjectPanel />\r\n      </Route>\r\n      <Route path={`${path}/create`}>\r\n        <NewProject />\r\n      </Route>\r\n      <Route path={`${path}/:projectId`}>\r\n        <ProjectPanel />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default ProjectPage;\r\n","import { useState, useEffect, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { BackTop, Table, Switch, Space } from 'antd';\r\n\r\n// 目前使用 Firebase Realtime Database 模擬會員資料\r\nconst MEMBER_URL = 'https://aiwinops-default-rtdb.firebaseio.com/members.json';\r\n\r\n// Firebase Authentication模擬GET會員API串接\r\n// const FIREBASE_KEY = 'AIzaSyAaf6guV8zB9_4R5xwuDDiQM0zaNzQWuWA';\r\n// const MEMBER_LIST_API = `https://identitytoolkit.googleapis.com/v1/accounts:lookup?key=${FIREBASE_KEY}`;\r\n\r\nconst UserList = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [members, setMembers] = useState();\r\n\r\n  // TODO: 抓取會員的資料 -> GET/MemberData\r\n  const fetchMemberData = useCallback(() => {\r\n    setIsLoading(true);\r\n    fetch(MEMBER_URL)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        const memberData = [];\r\n        for (const key in data) {\r\n          memberData.push({\r\n            key: key,\r\n            id: data[key].name,\r\n            name: data[key].username,\r\n            level: data[key].level,\r\n            time: data[key].register_time,\r\n            status: data[key].status,\r\n            email: data[key].email,\r\n          });\r\n        }\r\n        setIsLoading(false);\r\n        setMembers(memberData);\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n  }, [setMembers]);\r\n\r\n  useEffect(() => {\r\n    fetchMemberData();\r\n  }, [fetchMemberData]);\r\n\r\n  const TABLE_COLUMN = [\r\n    {\r\n      title: '名稱',\r\n      key: 'name',\r\n      dataIndex: 'name',\r\n      width: '10%',\r\n    },\r\n    {\r\n      title: '權限',\r\n      key: 'level',\r\n      dataIndex: 'level',\r\n      width: '10%',\r\n    },\r\n    {\r\n      title: '註冊時間',\r\n      key: 'time',\r\n      dataIndex: 'time',\r\n      width: '20%',\r\n    },\r\n    {\r\n      title: '信箱',\r\n      key: 'email',\r\n      dataIndex: 'email',\r\n      render: (text) => {\r\n        return <Link to='/users/checking'>{text}</Link>;\r\n      },\r\n    },\r\n    {\r\n      title: '狀態',\r\n      key: 'status',\r\n      dataIndex: 'status',\r\n      render: (status) => {\r\n        // -> 更新資料庫會員的狀態\r\n        const onToggle = (checked) => {\r\n          status = checked;\r\n        };\r\n        return (\r\n          <Space>\r\n            <Switch defaultChecked onChange={onToggle} />\r\n          </Space>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        loading={isLoading}\r\n        scroll={{ y: '65vh' }}\r\n        columns={TABLE_COLUMN}\r\n        dataSource={members}\r\n        pagination={false}\r\n      />\r\n      <BackTop\r\n        target={() => document.getElementsByClassName('ant-table-body')[0]}\r\n        visibilityHeight={300}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import { useHistory, useRouteMatch } from 'react-router-dom';\r\n\r\nimport { Button } from 'antd';\r\nimport classes from '../../../styles/Panel/Title.module.scss';\r\n\r\nimport UserList from './UserList';\r\n\r\nconst UserContent = () => {\r\n  const { url } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  const onNewUser = () => {\r\n    history.push(`${url}/create`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.title}>\r\n        <h3>成員</h3>\r\n        <Button\r\n          type='primary'\r\n          style={{ fontWeight: '700' }}\r\n          onClick={onNewUser}>\r\n          +新成員\r\n        </Button>\r\n      </div>\r\n      <UserList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserContent;\r\n","import PanelLayout from '../../UI/Layout/PanelLayout';\r\nimport UserContent from './UserContent';\r\n\r\nconst Panel = () => {\r\n  return (\r\n    <PanelLayout>\r\n      <UserContent />\r\n    </PanelLayout>\r\n  );\r\n};\r\n\r\nexport default Panel;\r\n","import { useHistory, useParams } from 'react-router-dom';\r\n\r\nimport { Button, Checkbox, Form, Input, message } from 'antd';\r\nimport classes from '../../../styles/Panel/User/NewUser.module.scss';\r\n\r\nimport PanelLayout from '../../UI/Layout/PanelLayout';\r\n\r\n// 目前使用 Firebase Realtime Database 模擬會員資料\r\nconst MEMBER_URL = 'https://aiwinops-default-rtdb.firebaseio.com/members.json';\r\n\r\n// const FIREBASE_KEY = 'AIzaSyAaf6guV8zB9_4R5xwuDDiQM0zaNzQWuWA';\r\n// const SIGN_UP_API = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${FIREBASE_KEY}`;\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 16,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n    },\r\n  },\r\n};\r\n\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nconst NewUser = () => {\r\n  const [form] = Form.useForm();\r\n  const { uid } = useParams();\r\n  const history = useHistory();\r\n\r\n  // const { Option } = Select;\r\n\r\n  // TODO: 新增會員資料 -> POST/MemberData\r\n  const registerNewMember = (values) => {\r\n    console.log('Received values of form: ', values);\r\n    fetch(MEMBER_URL, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        register_time: new Date().toISOString().toString().slice(0, -5),\r\n        email: values.email,\r\n        password: values.password,\r\n        username: values.username,\r\n        level: values.level,\r\n        status: true,\r\n        agreement: values.agreement,\r\n        returnSecureToken: true,\r\n      }),\r\n      headers: { 'Content-Type': 'application/json' },\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          message.success('You have created a new member!');\r\n          return response.json();\r\n        } else {\r\n          return message.warning('Failed to create new member!');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n\r\n    setTimeout(() => {\r\n      history.replace(`/users/${uid}`);\r\n    }, 1000);\r\n  };\r\n\r\n  const onCancelUser = () => {\r\n    history.push(`/users`);\r\n  }\r\n\r\n  return (\r\n    <PanelLayout>\r\n      <section className={classes.form}>\r\n        <h2>新增成員</h2>\r\n        <Form\r\n          {...formItemLayout}\r\n          form={form}\r\n          name='register'\r\n          onFinish={registerNewMember}\r\n          scrollToFirstError>\r\n          <Form.Item\r\n            name='username'\r\n            label='Username'\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please enter username!',\r\n              },\r\n            ]}>\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name='email'\r\n            label='E-mail'\r\n            rules={[\r\n              {\r\n                type: 'email',\r\n                message: 'The email format is invalid!',\r\n              },\r\n              {\r\n                required: true,\r\n                message: 'Please enter email!',\r\n              },\r\n            ]}>\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name='password'\r\n            label='Password'\r\n            hasFeedback\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your password!',\r\n              },\r\n            ]}>\r\n            <Input.Password autoComplete='password' />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name='confirm'\r\n            label='Confirm Password'\r\n            dependencies={['password']}\r\n            hasFeedback\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your password!',\r\n              },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (!value || getFieldValue('password') === value) {\r\n                    return Promise.resolve();\r\n                  }\r\n                  return Promise.reject(new Error('Passwords are not match!'));\r\n                },\r\n              }),\r\n            ]}>\r\n            <Input.Password autoComplete='confirm' />\r\n          </Form.Item>\r\n          {/* <Form.Item\r\n            name='level'\r\n            label='Level'\r\n            initialValue='Owner'\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please provide authorization to the member!',\r\n              },\r\n            ]}>\r\n            <Select>\r\n              <Option value='Owner'>Owner</Option>\r\n              <Option value='Manager'>Manager</Option>\r\n              其他的權限設定\r\n            </Select>\r\n          </Form.Item> */}\r\n          <Form.Item\r\n            {...tailFormItemLayout}\r\n            name='agreement'\r\n            valuePropName='checked'\r\n            rules={[\r\n              {\r\n                validator: (_, value) =>\r\n                  value\r\n                    ? Promise.resolve()\r\n                    : Promise.reject(new Error('Please read the agreement!')),\r\n              },\r\n            ]}>\r\n            <Checkbox>\r\n              我已經閱讀\r\n              <a\r\n                href='https://www.zerodimension.com.tw/html/HDUT%20PBL%20PRIVACY.htm'\r\n                target='_blank'\r\n                rel='noreferrer'>\r\n                相關聲明\r\n              </a>\r\n            </Checkbox>\r\n          </Form.Item>\r\n          <Form.Item {...tailFormItemLayout}>\r\n            <Button\r\n              type='default'\r\n              danger\r\n              onClick={onCancelUser}\r\n              style={{ marginRight: '7rem' }}>\r\n              取消\r\n            </Button>\r\n            <Button type='primary' htmlType='submit'>\r\n              新增會員\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </section>\r\n    </PanelLayout>\r\n  );\r\n};\r\n\r\nexport default NewUser;\r\n","import { useContext } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport classes from '../../../styles/Panel/User/Settings.module.scss';\r\nimport { Avatar, Button, Form, Input, Upload, message } from 'antd';\r\nimport {\r\n  ArrowLeftOutlined,\r\n  UploadOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport tempAvatar from '../../../assets/icons/avatar.ico';\r\n\r\nimport PanelLayout from '../../UI/Layout/PanelLayout';\r\n\r\nimport AuthContext from '../../../store/auth-context';\r\n\r\n// 目前使用 Firebase Authentication模擬修改使用者資訊\r\nconst FIREBASE_KEY = 'AIzaSyAaf6guV8zB9_4R5xwuDDiQM0zaNzQWuWA';\r\nconst UPDATE_API = `https://identitytoolkit.googleapis.com/v1/accounts:update?key=${FIREBASE_KEY}`;\r\n\r\nconst Settings = () => {\r\n  const [form] = Form.useForm();\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  const avatarFile = (e) => {\r\n    return e && e.fileList;\r\n  };\r\n\r\n  // TODO: 更新使用者資訊 POST/uid/uinfo\r\n  const updateProfile = (values) => {\r\n    fetch(UPDATE_API, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        idToken: authCtx.token,\r\n        displayName: values.username,\r\n        photoUrl: values.avatar,\r\n        email: values.email,\r\n      }),\r\n      headers: { 'Content-Type': 'application/json' },\r\n    }).then((response) => {\r\n      if (response.ok) {\r\n        message.success('成功更新個人資訊!');\r\n      } else {\r\n        message.error('無法更新個人資訊!');\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <PanelLayout>\r\n      <section className={classes.settings}>\r\n        <h2>個人設定</h2>\r\n        <Form\r\n          form={form}\r\n          name='settings'\r\n          onFinish={updateProfile}\r\n          scrollToFirstError>\r\n          <div className={classes.avatar}>\r\n            <section className='left'>\r\n              <h3>大頭照</h3>\r\n              <p>上傳新的照片或移除當前的照片</p>\r\n            </section>\r\n            <section className='right'>\r\n              <Avatar\r\n                src={tempAvatar}\r\n                size={60}\r\n                style={{ marginBottom: '1rem' }}\r\n              />\r\n              <Form.Item\r\n                name='upload'\r\n                valuePropName='fileList'\r\n                getValueFromEvent={avatarFile}>\r\n                <Upload\r\n                  name='avatar'\r\n                  label='大頭貼: '\r\n                  action='/upload.do'\r\n                  listType='picture'\r\n                  maxCount={1}>\r\n                  <Button icon={<UploadOutlined />}>上傳</Button>\r\n                </Upload>\r\n              </Form.Item>\r\n            </section>\r\n          </div>\r\n          <div className={classes.main}>\r\n            <section className='left'>\r\n              <h3>主設定</h3>\r\n              <p>資訊將會顯示在人物簡介中</p>\r\n            </section>\r\n            <section className='right'>\r\n              <Form.Item name='username' label='Username'>\r\n                <Input />\r\n              </Form.Item>\r\n              <Form.Item name='email' label='E-mail'>\r\n                <Input />\r\n              </Form.Item>\r\n            </section>\r\n          </div>\r\n          <div className={classes.password}>\r\n            <section className='left'>\r\n              <h3>更換密碼</h3>\r\n              <p>成功更新密碼後將返回登入頁面</p>\r\n            </section>\r\n            <section className='right'>\r\n              <Form.Item name='current_password' label='Current Password'>\r\n                <Input.Password />\r\n              </Form.Item>\r\n              <Form.Item name='password' label='New Password'>\r\n                <Input.Password />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name='confirm'\r\n                label='Confirm Password'\r\n                dependencies={['password']}\r\n                hasFeedback\r\n                rules={[\r\n                  ({ getFieldValue }) => ({\r\n                    validator(_, value) {\r\n                      if (!value || getFieldValue('password') === value) {\r\n                        return Promise.resolve();\r\n                      }\r\n                      return Promise.reject(\r\n                        new Error('New Passwords are not match!'),\r\n                      );\r\n                    },\r\n                  }),\r\n                ]}>\r\n                <Input.Password />\r\n              </Form.Item>\r\n            </section>\r\n          </div>\r\n          <section className={classes.btn}>\r\n            <Form.Item>\r\n              <Link to={`/project/${authCtx.userInfo.email}`}>\r\n                <Button\r\n                  type='link'\r\n                  style={{ color: '#000', border: '1px solid #ccc' }}>\r\n                  <ArrowLeftOutlined />\r\n                  返回專案\r\n                </Button>\r\n              </Link>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button\r\n                type='primary'\r\n                htmlType='submit'\r\n                style={{ fontWeight: '600' }}>\r\n                更新個人資料\r\n              </Button>\r\n            </Form.Item>\r\n          </section>\r\n        </Form>\r\n      </section>\r\n    </PanelLayout>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import { Route, Switch, useRouteMatch } from 'react-router-dom';\r\n\r\nimport UserPanel from '../components/Panel/Users/UserPanel';\r\nimport NewUser from '../components/Panel/Users/NewUser';\r\nimport Settings from '../components/Panel/Users/Settings';\r\n\r\nconst UserPage = () => {\r\n  const { path } = useRouteMatch();\r\n  return (\r\n    <Switch>\r\n      <Route path={`${path}`} exact>\r\n        <UserPanel />\r\n      </Route>\r\n      <Route path={`${path}/create`}>\r\n        <NewUser />\r\n      </Route>\r\n      <Route path={`${path}/settings`}>\r\n        <Settings />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default UserPage;\r\n","import { Descriptions, Card, Badge, Progress, Tooltip } from 'antd';\r\n\r\nconst QuotaList = () => {\r\n  return (\r\n    <Card>\r\n      <Descriptions title='您的方案' layout='vertical' bordered>\r\n        <Descriptions.Item label='Product'>Cloud Database</Descriptions.Item>\r\n        <Descriptions.Item label='Billing Mode'>Paid</Descriptions.Item>\r\n        <Descriptions.Item label='Automatic Renewal'>YES</Descriptions.Item>\r\n        <Descriptions.Item label='Build time' span={1}>\r\n          2018-04-24 18:00:00\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Status' span={2}>\r\n          <Badge status='processing' text='Running' />\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Member' span={3}>\r\n          <Tooltip title='專案成員額度'>\r\n            <span>In used: 4</span>\r\n          </Tooltip>\r\n          <Progress percent={40} />\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Disk' span={3}>\r\n          <Tooltip title='專案硬碟使用率'>\r\n            <span>In used: 6GB</span>\r\n          </Tooltip>\r\n          <Progress percent={60} />\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='GPU' span={3}>\r\n          <Tooltip title='專案GPU使用率'>\r\n            <span>Average Usage: 82%</span>\r\n          </Tooltip>\r\n          <Progress percent={82} />\r\n        </Descriptions.Item>\r\n      </Descriptions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default QuotaList;\r\n","import { useRouteMatch, useHistory } from 'react-router-dom';\r\n\r\nimport classes from '../../../styles/Panel/Title.module.scss';\r\nimport { Button } from 'antd';\r\n\r\nimport QuotaList from './QuotaList';\r\n\r\nconst QuotaContent = () => {\r\n  const { url } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  const quotaUpgrade = () => {\r\n    history.push(`${url}/quota-upgrade`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.title}>\r\n        <h3>Quota</h3>\r\n        <Button\r\n          type='primary'\r\n          onClick={quotaUpgrade}\r\n          style={{ fontWeight: '700' }}>\r\n          升級額度\r\n        </Button>\r\n      </div>\r\n      <div style={{ width: '100%', height: '70vh', overflowY: 'scroll' }}>\r\n        <QuotaList />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuotaContent;\r\n","import PanelLayout from '../../UI/Layout/PanelLayout';\r\nimport QuotaContent from './QuotaContent';\r\n\r\nconst QuotaPanel = () => {\r\n  return (\r\n    <PanelLayout>\r\n      <QuotaContent />\r\n    </PanelLayout>\r\n  );\r\n};\r\n\r\nexport default QuotaPanel;\r\n","// import { useHistory } from 'react-router-dom';\r\n\r\nimport classes from '../../../styles/Panel/Projects/NewProject.module.scss';\r\n\r\nimport PanelLayout from '../../UI/Layout/PanelLayout';\r\n\r\nconst QuotaUpgrade = () => {\r\n  // const history = useHistory();\r\n  \r\n  return (\r\n    <PanelLayout>\r\n      <section className={classes.project}>\r\n        <h2>調整專案額度</h2>\r\n      </section>\r\n    </PanelLayout>\r\n  );\r\n};\r\n\r\nexport default QuotaUpgrade;\r\n","import { Route, Switch, useRouteMatch } from 'react-router-dom';\r\n\r\nimport QuotaPanel from '../components/Panel/Quota/QuotaPanel';\r\nimport QuotaUpgrade from '../components/Panel/Quota/QuotaUpgrade';\r\n\r\nconst QuotaPage = () => {\r\n  const { path } = useRouteMatch();\r\n  return (\r\n    <Switch>\r\n      <Route path={`${path}`} exact>\r\n        <QuotaPanel />\r\n      </Route>\r\n      <Route path={`${path}/quota-upgrade`}>\r\n        <QuotaUpgrade />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default QuotaPage;\r\n","import { Pie } from '@ant-design/charts';\r\n\r\nconst ModelPie = () => {\r\n    // 資料數據比例\r\n    let data = [\r\n    {\r\n      type: 'Data',\r\n      value: 60,\r\n    },\r\n    {\r\n      type: 'Model',\r\n      value: 30,\r\n    },\r\n    {\r\n      type: '限度邏輯',\r\n      value: 10,\r\n    },\r\n  ];\r\n\r\n  let config = {\r\n    appendPadding: 2,\r\n    data: data,\r\n    angleField: 'value',\r\n    colorField: 'type',\r\n    radius: 1,\r\n    innerRadius: 0.4,\r\n    label: {\r\n      type: 'inner',\r\n      offset: '-50%',\r\n      content: '{value}%',\r\n      style: {\r\n        textAlign: 'center',\r\n        fontSize: 12,\r\n        zIndex: '-10'\r\n      },\r\n    },\r\n    interactions: [{ type: 'element-selected' }, { type: 'element-active' }],\r\n    statistic: {\r\n      title: false,\r\n      content: {\r\n        style: {\r\n          whiteSpace: 'pre-wrap',\r\n          overflow: 'hidden',\r\n          textOverflow: 'ellipsis',\r\n        },\r\n        formatter: function formatter() {\r\n          return '';\r\n        },\r\n      },\r\n    },\r\n  };\r\n  return <Pie {...config} />;\r\n};\r\n\r\nexport default ModelPie;","import { Row, Col, Card, Descriptions, Tooltip, Progress, } from 'antd';\r\nimport ModelPie from './ModelPie';\r\n\r\nconst DashboardGraph = () => {\r\n  return (\r\n    <>\r\n      <Descriptions\r\n        title='訓練進度'\r\n        layout='horizontal'\r\n        bordered\r\n        style={{ marginBottom: '1rem' }}>\r\n        <Descriptions.Item\r\n          label='Data'\r\n          span={1}\r\n          style={{ textAlign: 'center' }}>\r\n          <Tooltip title='已訓練資料集'>\r\n            <Progress type='circle' percent={60} />\r\n          </Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item\r\n          label='Model'\r\n          span={1}\r\n          style={{ textAlign: 'center' }}>\r\n          <Tooltip title='模型訓練進度'>\r\n            <Progress type='circle' percent={70} />\r\n          </Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item\r\n          label='Logic'\r\n          span={1}\r\n          style={{ textAlign: 'center' }}>\r\n          <Tooltip title='限度邏輯'>\r\n            <Progress type='circle' percent={15} />\r\n          </Tooltip>\r\n        </Descriptions.Item>\r\n      </Descriptions>\r\n\r\n      <div className='site-card-wrapper'>\r\n        <Row gutter={16}>\r\n          <Col span={8}>\r\n            <Card title='Traning Model' bordered={true}>\r\n              <ModelPie />\r\n            </Card>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Card title='Complete Model' bordered={true}>\r\n              <ModelPie />\r\n            </Card>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Card title='Untrained title' bordered={true}>\r\n              <ModelPie />\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashboardGraph;\r\n","import classes from '../../../styles/Panel/Title.module.scss';\r\n\r\nimport DashboardGraph from './DashboardGraph';\r\n\r\nconst DashboardContent = () => {\r\n  return (\r\n    <>\r\n      <div className={classes.title}>\r\n        <h3>儀錶板</h3>\r\n      </div>\r\n      <div\r\n        style={{\r\n          width: '100%',\r\n          height: '72vh',\r\n          overflowY: 'scroll',\r\n          padding: '20px',\r\n          backgroundColor: '#fff',\r\n        }}>\r\n        <DashboardGraph />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashboardContent;\r\n","import PanelLayout from '../../UI/Layout/PanelLayout';\r\nimport DashboardContent from './DashboardContent';\r\n\r\nconst QuotaPanel = () => {\r\n  return (\r\n    <PanelLayout>\r\n      <DashboardContent />\r\n    </PanelLayout>\r\n  );\r\n};\r\n\r\nexport default QuotaPanel;\r\n","import { Route, Switch, useRouteMatch } from 'react-router-dom';\r\nimport DashboardPanel from '../components/Panel/Dashboard/DashboardPanel';\r\n\r\nconst DashboardPage = () => {\r\n  const { path } = useRouteMatch();\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path={`${path}`} exact>\r\n        <DashboardPanel />;\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;\r\n","import { Card, Descriptions, Tooltip } from 'antd';\r\n\r\n\r\nconst columns = { xs: 8, sm: 12, md: 12};\r\n\r\nconst ReportGraph = () => {\r\n  // Dummy Data\r\n  const data = {\r\n    batch: 3,\r\n    label: 750,\r\n    reviewed: 0,\r\n    total: 900,\r\n    unlabel: 150,\r\n    unreviewed: 900,\r\n    completed: 300,\r\n  };\r\n\r\n  const model = {\r\n    name: 'Model001',\r\n    state: 'Training',\r\n    task: 'Object Detection',\r\n    data_source: 'Weld1',\r\n    model_type: 'RefineDet',\r\n    manager: 'Chris',\r\n    metrics: '0.7',\r\n    training_time: {\r\n      start: '2020-12-11 08:10:23',\r\n      end: '2020-12-11 11:20:23',\r\n      take: '03:10:00'\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      style={{\r\n        width: '100%',\r\n        height: '72vh',\r\n        overflowY: 'scroll',\r\n      }}>\r\n      {/* 傳入專案數據 */}\r\n      <Descriptions\r\n        title='Data'\r\n        layout='vertical'\r\n        bordered\r\n        style={{ marginBottom: '1rem' }}>\r\n        <Descriptions.Item label='#Batch' span={1}>\r\n          <Tooltip title='資料批次量'>{data.batch}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='#Label' span={1}>\r\n          <Tooltip title='資料標籤量'>{data.label}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='#UnLabled' span={1}>\r\n          <Tooltip title='資料未標籤量'>{data.unlabel}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='#Total' span={1}>\r\n          <Tooltip title='資料總量'>{data.total}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='#Reviewed' span={1}>\r\n          <Tooltip title='資料審核量'>{data.reviewed}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='#Unreviewed' span={1}>\r\n          <Tooltip title='資料未審核量'>{data.unreviewed}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='#Complete' span={1}>\r\n          <Tooltip title='資料完成量'>{data.completed}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='#Completed Ratio' span={1}>\r\n          <Tooltip title='資料完成比'>\r\n            {((data.completed / data.total) * 100).toFixed(2)}\r\n          </Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='#Label Ratio' span={1}>\r\n          <Tooltip title='資料標籤比'>\r\n            {((data.unlabel / data.label) * 100).toFixed(2)}\r\n          </Tooltip>\r\n        </Descriptions.Item>\r\n      </Descriptions>\r\n      {/* 需要再另外寫成一個組件 */}\r\n      <Descriptions column={columns} title='Model' layout='vertical' bordered>\r\n        <Descriptions.Item label='Models' span={1}>\r\n          <Tooltip title='模型名稱'>{model.name}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='State' span={1}>\r\n          <Tooltip title='模型狀態'>{model.state}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Task' span={1}>\r\n          <Tooltip title='模型任務'>{model.task}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Data Source' span={1}>\r\n          <Tooltip title='模型資料源'>{model.data_source}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Model Type' span={1}>\r\n          <Tooltip title='模型類型'>{model.model_type}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Manager' span={1}>\r\n          <Tooltip title='模型管理者'>{model.manager}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Metrics' span={1}>\r\n          <Tooltip title='模型測量'>{model.metrics}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Start Time' span={2}>\r\n          <Tooltip title='開始時間'>{model.training_time.start}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='End Time' span={2}>\r\n          <Tooltip title='結束時間'>{model.training_time.end}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Take' span={1}>\r\n          <Tooltip title='訓練時間'>{model.training_time.take}</Tooltip>\r\n        </Descriptions.Item>\r\n      </Descriptions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ReportGraph;\r\n","import classes from '../../../styles/Panel/Title.module.scss';\r\n\r\nimport { Cascader } from 'antd';\r\n\r\nimport ReportGraph from './ReportGraph';\r\n\r\nconst ReportContent = () => {\r\n  // 各專案名稱 -> 需傳入專案名\r\n  const options = [\r\n    {\r\n      value: 'project1',\r\n      label: 'Project1',\r\n    },\r\n    {\r\n      value: 'project2',\r\n      label: 'Project2',\r\n    },\r\n    {\r\n      value: 'project3',\r\n      label: 'Project3',\r\n    },\r\n    {\r\n      value: 'project4',\r\n      label: 'Project4',\r\n    },\r\n    {\r\n      value: 'project5',\r\n      label: 'Project5',\r\n    },\r\n    {\r\n      value: 'project6',\r\n      label: 'Project6',\r\n    },\r\n  ];\r\n\r\n  // 更改專案\r\n  const chooseProject = (value) => {\r\n    // ...\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.title}>\r\n        <h3>報表</h3>\r\n        <Cascader\r\n          defaultValue={['project1']}\r\n          options={options}\r\n          onChange={chooseProject}\r\n          allowClear={false}\r\n          bordered={false}\r\n          style={{\r\n            border: '1px solid #999',\r\n            margin: '5px 0',\r\n          }}\r\n        />\r\n      </div>\r\n      <ReportGraph />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReportContent;\r\n","import PanelLayout from '../../UI/Layout/PanelLayout';\r\nimport ReportContent from './ReportContent';\r\n\r\nconst ReportPanel = () => {\r\n  return (\r\n    <PanelLayout>\r\n      <ReportContent />\r\n    </PanelLayout>\r\n  );\r\n};\r\n\r\nexport default ReportPanel;\r\n","import { Route, Switch, useRouteMatch } from 'react-router-dom';\r\n\r\nimport ReportPanel from '../components/Panel/Report/ReportPanel';\r\n\r\nconst ReportPage = () => {\r\n  const { path } = useRouteMatch();\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path={`${path}`} exact>\r\n        <ReportPanel />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default ReportPage;\r\n","import { Card, Col, Row } from 'antd';\r\n\r\nimport PanelLayout from '../components/UI/Layout/PanelLayout';\r\n\r\nconst AboutPage = () => {\r\n  return (\r\n    <PanelLayout>\r\n      <div className='site-card-wrapper'>\r\n        <Row gutter={16}>\r\n          <Col span={8}>\r\n            <Card title='AI' bordered={true}>\r\n              AI\r\n            </Card>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Card title='Win' bordered={true}>\r\n              IS\r\n            </Card>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Card title='Ops' bordered={true}>\r\n              COOL!\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <div className='site-card-wrapper'>\r\n        <Row gutter={16}>\r\n          <Col span={8}>\r\n            <Card title='AI' bordered={true}>\r\n              AI\r\n            </Card>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Card title='Win' bordered={true}>\r\n              IS\r\n            </Card>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Card title='Ops' bordered={true}>\r\n              COOL!\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <div className='site-card-wrapper'>\r\n        <Row gutter={16}>\r\n          <Col span={8}>\r\n            <Card title='AI' bordered={true}>\r\n              AI\r\n            </Card>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Card title='Win' bordered={true}>\r\n              IS\r\n            </Card>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Card title='Ops' bordered={true}>\r\n              COOL!\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </PanelLayout>\r\n  );\r\n};\r\n\r\nexport default AboutPage;\r\n","import { Card, Col, Row } from 'antd';\r\nimport PanelLayout from '../components/UI/Layout/PanelLayout';\r\n\r\nconst TutorialsPage = () => {\r\n  return (\r\n    <PanelLayout>\r\n      <div className='site-card-wrapper'>\r\n        <Row gutter={16}>\r\n          <Col span={8}>\r\n            <Card title='Follow' bordered={true}>\r\n              LETS\r\n            </Card>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Card title='This' bordered={true}>\r\n              Start\r\n            </Card>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Card title='Guide' bordered={true}>\r\n              to Play!\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <div className='site-card-wrapper'>\r\n        <Row gutter={16}>\r\n          <Col span={8}>\r\n            <Card title='Follow' bordered={true}>\r\n              LETS\r\n            </Card>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Card title='This' bordered={true}>\r\n              Start\r\n            </Card>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Card title='Guide' bordered={true}>\r\n              to Play!\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <div className='site-card-wrapper'>\r\n        <Row gutter={16}>\r\n          <Col span={8}>\r\n            <Card title='Follow' bordered={true}>\r\n              LETS\r\n            </Card>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Card title='This' bordered={true}>\r\n              Start\r\n            </Card>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Card title='Guide' bordered={true}>\r\n              to Play!\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </PanelLayout>\r\n  );\r\n};\r\n\r\nexport default TutorialsPage;\r\n","import { Card, Col, Row } from 'antd';\r\n\r\nimport PanelLayout from '../components/UI/Layout/PanelLayout';\r\n\r\n\r\nconst HelpPage = () => {\r\n  return (\r\n    <PanelLayout>\r\n      <div className='site-card-wrapper'>\r\n        <Row gutter={16}>\r\n          <Col span={8}>\r\n            <Card title='Zero' bordered={true}>\r\n              Hi\r\n            </Card>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Card title='Dimension' bordered={true}>\r\n              Need\r\n            </Card>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Card title='Cool' bordered={true}>\r\n              Help?\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <div className='site-card-wrapper'>\r\n        <Row gutter={16}>\r\n          <Col span={8}>\r\n            <Card title='Zero' bordered={true}>\r\n              Hi\r\n            </Card>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Card title='Dimension' bordered={true}>\r\n              Need\r\n            </Card>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Card title='Cool' bordered={true}>\r\n              Help?\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <div className='site-card-wrapper'>\r\n        <Row gutter={16}>\r\n          <Col span={8}>\r\n            <Card title='Zero' bordered={true}>\r\n              Hi\r\n            </Card>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Card title='Dimension' bordered={true}>\r\n              Need\r\n            </Card>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Card title='Cool' bordered={true}>\r\n              Help?\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </PanelLayout>\r\n  );\r\n};\r\n\r\nexport default HelpPage;\r\n","// import { useContext } from 'react';\r\nimport { Link, Route, Switch, BrowserRouter, Redirect } from \"react-router-dom\";\r\n\r\nimport { Button, Result } from \"antd\";\r\n\r\nimport LoginForm from \"../components/Login/LoginForm\";\r\nimport ResetForm from \"../components/Login/ResetForm\";\r\n\r\nimport ProjectPage from \"./ProjectPage\";\r\nimport UserPage from \"./UserPage\";\r\nimport QuotaPage from \"./QuotaPage\";\r\nimport DashboardPage from \"./DashboardPage\";\r\nimport ReportPage from \"./ReportPage\";\r\nimport AboutPage from \"./AboutPage\";\r\nimport TutorialsPage from \"./TutorialsPage\";\r\nimport HelpPage from \"./HelpPage\";\r\n\r\nconst LoginPage = () => {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <LoginForm />\r\n        </Route>\r\n        <Route path=\"/reset\">\r\n          <ResetForm />\r\n        </Route>\r\n        {/* TODO: 透過後端驗證使用者idToken */}\r\n        <Route path=\"/projects\">\r\n          {localStorage.getItem(\"uid\") !== \"\" ? (\r\n            <ProjectPage />\r\n          ) : (\r\n            <Result\r\n              status=\"403\"\r\n              title=\"403\"\r\n              subTitle=\"Sorry, the page does not exist.\"\r\n              extra={\r\n                // <Link to={`/project/${authCtx.userInfo.email}`}>\r\n                <Link to=\"/\">\r\n                  <Button type=\"primary\">Back</Button>\r\n                </Link>\r\n              }\r\n            />\r\n          )}\r\n        </Route>\r\n        <Route path=\"/users\">\r\n          {localStorage.getItem(\"uid\") !== \"\" ? (\r\n            <UserPage />\r\n          ) : (\r\n            <Redirect to=\"/\" />\r\n          )}\r\n        </Route>\r\n        <Route path=\"/quota\">\r\n          {localStorage.getItem(\"uid\") !== \"\" ? (\r\n            <QuotaPage />\r\n          ) : (\r\n            <Redirect to=\"/\" />\r\n          )}\r\n        </Route>\r\n        <Route path=\"/dashboard\">\r\n          {localStorage.getItem(\"uid\") !== \"\" ? (\r\n            <DashboardPage />\r\n          ) : (\r\n            <Redirect to=\"/\" />\r\n          )}\r\n        </Route>\r\n        <Route path=\"/report\">\r\n          {localStorage.getItem(\"uid\") !== \"\" ? (\r\n            <ReportPage />\r\n          ) : (\r\n            <Redirect to=\"/\" />\r\n          )}\r\n        </Route>\r\n        <Route path=\"/about\">\r\n          {localStorage.getItem(\"uid\") !== \"\" ? (\r\n            <AboutPage />\r\n          ) : (\r\n            <Redirect to=\"/\" />\r\n          )}\r\n        </Route>\r\n        <Route path=\"/tutorials\">\r\n          {localStorage.getItem(\"uid\") !== \"\" ? (\r\n            <TutorialsPage />\r\n          ) : (\r\n            <Redirect to=\"/\" />\r\n          )}\r\n        </Route>\r\n        <Route path=\"/help\">\r\n          {localStorage.getItem(\"uid\") !== \"\" ? (\r\n            <HelpPage />\r\n          ) : (\r\n            <Redirect to=\"/\" />\r\n          )}\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import LoginPage from './pages/LoginPage';\r\n\r\nfunction App() {\r\n  return <LoginPage />\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.scss';\r\n\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport {AuthContextProvider} from './store/auth-context';\r\n\r\nReactDOM.render(\r\n  <AuthContextProvider>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </AuthContextProvider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
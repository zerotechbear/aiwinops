{"version":3,"sources":["styles/Panel/Projects/ProjectContent.module.css","styles/UI/Layout/Header.module.css","styles/Panel/Projects/NewProject.module.css","styles/Login/LoginForm.module.css","styles/Panel/Member/Settings.module.css","styles/Login/ResetForm.module.css","styles/UI/Modal/Error.module.css","styles/UI/Layout/Card.module.css","styles/UI/Modal/Backdrop.module.css","styles/UI/Layout/Sidebar.module.css","styles/Panel/Member/NewMember.module.css","components/UI/Layout/Card.js","store/auth-context.js","components/Login/LoginForm.js","components/Login/ResetForm.js","components/UI/Layout/Header.js","components/Panel/Projects/NewProject.js","components/UI/Layout/Sidebar.js","components/UI/Layout/PanelLayout.js","components/Panel/Projects/ProjectList.js","components/Panel/Projects/ProjectContent.js","components/Panel/Projects/ProjectPanel.js","pages/ProjectPage.js","components/Panel/Members/MemberList.js","components/Panel/Members/MemberContent.js","components/Panel/Members/MemberPanel.js","components/Panel/Members/NewMember.js","components/Panel/Members/Settings.js","pages/MemberPage.js","components/Panel/Quota/QuotaList.js","components/Panel/Quota/QuotaContent.js","components/Panel/Quota/QuotaPanel.js","components/Panel/Quota/QuotaUpgrade.js","pages/QuotaPage.js","components/Panel/Dashboard/ModelPie.js","components/Panel/Dashboard/DashboardGraph.js","components/Panel/Dashboard/DashboardContent.js","components/Panel/Dashboard/DashboardPanel.js","pages/DashboardPage.js","components/Panel/Report/ReportGraph.js","components/Panel/Report/ReportContent.js","components/Panel/Report/ReportPanel.js","pages/ReportPage.js","pages/AboutPage.js","pages/TutorialsPage.js","pages/HelpPage.js","pages/LoginPage.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Card","props","className","classes","card","children","AuthContext","React","createContext","token","isLoggedIn","userId","login","logout","AuthContextProvider","tokenData","localStorage","getItem","useState","setToken","setUserid","contextValue","setItem","removeItem","userInfo","email","Provider","value","SIGN_IN_API","LoginForm","Form","useForm","form","authCtx","useContext","history","useHistory","logo","name","onFinish","values","fetch","method","body","JSON","stringify","password","returnSecureToken","headers","then","response","ok","json","message","error","data","idToken","success","replace","catch","scrollToFirstError","Item","rules","type","required","prefix","MailOutlined","placeholder","Password","autoComplete","LockOutlined","submit","htmlType","help","href","target","rel","to","RESET_API","ResetForm","isExist","setIsExist","reset","onValuesChange","requestType","setTimeout","push","Error","validator","_","a","send","style","color","ArrowLeftOutlined","navLinks","title","path","Header","uid","useParams","Search","Input","menu","theme","onClick","e","key","icon","SettingOutlined","LogoutOutlined","header","nav","onSearch","console","log","search","activeClassName","active","map","link","index","avatar","overlay","placement","size","UserOutlined","NewProject","TextArea","projectColor","setProjectColor","project","build_time","Date","toISOString","toString","slice","project_name","manager","project_manager","project_color","hex","description","project_description","agreement","project_agreement","status","editable","info","allowClear","width","onChangeComplete","rows","maxLength","showCount","marginBottom","valuePropName","Promise","resolve","reject","protocol","btn","fontWeight","backgroundColor","borderColor","danger","marginLeft","Sidebar","Sider","Layout","collapsed","setCollapsed","foldBtn","MenuUnfoldOutlined","MenuFoldOutlined","mode","defaultSelectedKeys","height","borderRight","PieChartOutlined","DesktopOutlined","LineChartOutlined","ContainerOutlined","PanelLayout","Footer","position","top","textAlign","padding","zIndex","ProjectList","projectData","setProjectData","confirm","Modal","showEditModal","CheckCircleOutlined","content","okText","okType","onOk","Math","random","onCancel","showDeleteModal","CloseCircleOutlined","TABLE_COLUMN","dataIndex","render","text","record","EditOutlined","fontSize","DeleteOutlined","margin","fetchProjectData","useCallback","storeData","modify_time","useEffect","scroll","x","y","pagination","columns","dataSource","ProjectContent","Content","url","useRouteMatch","Panel","ProjectPage","exact","ProjectPanel","MemberList","members","setMembers","fetchMemberData","memberData","id","username","level","time","register_time","defaultChecked","onChange","checked","MemberContent","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","NewMember","Option","Select","label","hasFeedback","dependencies","getFieldValue","initialValue","UPDATE_API","Settings","settings","displayName","photoUrl","getValueFromEvent","fileList","action","listType","UploadOutlined","main","update","MemberPage","MemberPanel","QuotaList","overflowY","marginTop","layout","bordered","percent","QuotaContent","QuotaPanel","QuotaUpgrade","QuotaPage","ModelPie","config","appendPadding","angleField","colorField","radius","innerRadius","interactions","statistic","whiteSpace","overflow","textOverflow","formatter","DashboardGraph","DashboardContent","DashboardPage","DashboardPanel","md","ReportGraph","model","start","end","take","toFixed","column","ReportContent","defaultValue","options","border","ReportPanel","ReportPage","AboutPage","TutorialsPage","HelpPage","LoginPage","basename","process","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4df3968b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ProjectContent_title__2Gz6P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__5yFbd\",\"logo\":\"Header_logo__2c0cK\",\"search\":\"Header_search__1_QZM\",\"nav\":\"Header_nav__2qdsB\",\"active\":\"Header_active__1GP9E\",\"avatar\":\"Header_avatar__12YV_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"project\":\"NewProject_project__2EKR6\",\"info\":\"NewProject_info__1s6vk\",\"protocol\":\"NewProject_protocol__m2Teu\",\"btn\":\"NewProject_btn__32Iey\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"LoginForm_login__2ISZM\",\"logo\":\"LoginForm_logo__1Go5w\",\"form\":\"LoginForm_form__3RZXX\",\"submit\":\"LoginForm_submit__Lzs9_\",\"help\":\"LoginForm_help__450w0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__1RYqX\",\"avatar\":\"Settings_avatar__1isyR\",\"main\":\"Settings_main__184S5\",\"password\":\"Settings_password__17Abx\",\"update\":\"Settings_update__1Cbw-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reset\":\"ResetForm_reset__8lEB-\",\"form\":\"ResetForm_form__8S0V3\",\"send\":\"ResetForm_send__1AgrR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Error_main__izgaW\",\"btn\":\"Error_btn__1D755\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3BB1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Backdrop_backdrop__ls6ah\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"foldBtn\":\"Sidebar_foldBtn__CB8qk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewMember_form__3mmfV\",\"control\":\"NewMember_control__2lYui\",\"action\":\"NewMember_action__1XRnq\"};","import classes from '../../../styles/UI/Layout/Card.module.css';\r\n\r\nconst Card = (props) => {\r\n  return <div className={classes.card}>{props.children}</div>\r\n}\r\n\r\nexport default Card;","import React, { useState } from 'react';\r\n\r\nconst AuthContext = React.createContext({\r\n  token: null,\r\n  isLoggedIn: false,\r\n  userId: '',\r\n  login: (token) => {},\r\n  logout: () => {},\r\n});\r\n\r\nconst retrieveToken = () => {\r\n  const storedToken = localStorage.getItem('token');\r\n\r\n  return {\r\n    token: storedToken,\r\n  };\r\n};\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const tokenData = retrieveToken();\r\n  const [token, setToken] = useState(tokenData);\r\n  const [userid, setUserid] = useState('');\r\n\r\n  // !!物件永遠回傳true\r\n  const userIsLoggedIn = !!token;\r\n\r\n  const loginHandler = (token) => {\r\n    setToken(token);\r\n    localStorage.setItem('token', token);\r\n  };\r\n\r\n  const logoutHandler = () => {\r\n    setToken(null);\r\n    localStorage.removeItem('token');\r\n  };\r\n\r\n  const userInfoHandler = (email) => {\r\n    setUserid(email);\r\n  };\r\n\r\n  const contextValue = {\r\n    token: token,\r\n    isLoggedIn: userIsLoggedIn,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n    userInfo: userInfoHandler,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n","import { useState, useContext } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport classes from '../../styles/Login/LoginForm.module.css';\r\nimport { Form, Input, Button, Message, message } from 'antd';\r\nimport { MailOutlined, LockOutlined } from '@ant-design/icons';\r\n\r\nimport Card from '../UI/Layout/Card';\r\nimport Error from '../UI/Modal/Error';\r\n\r\nimport AuthContext from '../../store/auth-context';\r\n\r\n// 目前使用 Firebase Authentication模擬登入\r\nconst FIREBASE_KEY = 'AIzaSyAaf6guV8zB9_4R5xwuDDiQM0zaNzQWuWA';\r\nconst SIGN_IN_API = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${FIREBASE_KEY}`;\r\n\r\nconst LoginForm = (props) => {\r\n  const [form] = Form.useForm();\r\n\r\n  const authCtx = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  // TODO: 驗證USER登入 -> POST/auth/login\r\n  const loginAuthHandler = (values) => {\r\n    fetch(SIGN_IN_API, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        email: values.email,\r\n        password: values.password,\r\n        returnSecureToken: true,\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          message.error('The email is invalid or password is incorrect!');\r\n          \r\n        }\r\n      })\r\n      .then((data) => {\r\n        authCtx.login(data.idToken);\r\n        authCtx.userInfo(data.email);\r\n        message.success('You have successfully logged in!');\r\n        history.replace(`/project/${data.email}`);\r\n      })\r\n      .catch((error) => {\r\n        // Other Error Message\r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <section className={classes.login}>\r\n      <Card>\r\n        <span className={classes.logo} />\r\n        <section className={classes.form}>\r\n          <h2>Member Login</h2>\r\n          <Form\r\n            form={form}\r\n            name='login'\r\n            onFinish={loginAuthHandler}\r\n            scrollToFirstError>\r\n            <Form.Item\r\n              name='email'\r\n              rules={[\r\n                {\r\n                  type: 'email',\r\n                  message: 'The email format is invalid!',\r\n                },\r\n                {\r\n                  required: true,\r\n                  message: 'The email is empty!',\r\n                },\r\n              ]}>\r\n              <Input prefix={<MailOutlined />} placeholder='Email@domain.com' />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name='password'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'The password is empty!',\r\n                },\r\n              ]}>\r\n              <Input.Password\r\n                placeholder='Password'\r\n                autoComplete='on'\r\n                prefix={<LockOutlined />}\r\n              />\r\n            </Form.Item>\r\n            <div className={classes.submit}>\r\n              <Button type='primary' htmlType='submit'>\r\n                LOGIN\r\n              </Button>\r\n            </div>\r\n            <div className={classes.help}>\r\n              <a\r\n                href='https://www.zerodimension.com.tw/default.aspx#contact'\r\n                target='_blank'\r\n                rel='noreferrer'>\r\n                <Button type='default'>Help</Button>\r\n              </a>\r\n              <Button type='default'>\r\n                <Link to='/reset'>Forget Password?</Link>\r\n              </Button>\r\n            </div>\r\n          </Form>     \r\n        </section>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import { useState } from 'react';\r\nimport { useHistory, Link } from 'react-router-dom';\r\n\r\nimport { Form, Input, Button, Message, message } from 'antd';\r\nimport { MailOutlined, ArrowLeftOutlined} from '@ant-design/icons';\r\nimport classes from '../../styles/Login/ResetForm.module.css';\r\n\r\nimport Card from '../UI/Layout/Card';\r\n// import Message from '../UI/Modal/Message';\r\n\r\n// 目前使用 Firebase Authentication模擬登出\r\nconst FIREBASE_KEY = 'AIzaSyAaf6guV8zB9_4R5xwuDDiQM0zaNzQWuWA';\r\nconst RESET_API = `https://identitytoolkit.googleapis.com/v1/accounts:sendOobCode?key=${FIREBASE_KEY}`;\r\n\r\nconst ResetForm = (props) => {\r\n  const [form] = Form.useForm();\r\n  const history = useHistory();\r\n  \r\n  const [isExist, setIsExist] = useState(true);\r\n\r\n  // TODO: 驗證USER登入 -> POST/auth/reset -> 發送重設密碼信件給已註冊的使用者\r\n  const resetPasswordHandler = (values) => {\r\n    fetch(RESET_API, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        email: values.email,\r\n        requestType: 'PASSWORD_RESET',\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          message.success('Reset email is sent, please check your email.');\r\n          setTimeout(() => {   \r\n            history.push('/');\r\n          }, 2000);\r\n        } else {\r\n          message.error('Email account does not exist!');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n  };\r\n\r\n  const emailEnter = () => {\r\n    setIsExist(true);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <section className={classes.reset}>\r\n      <Card>\r\n        <section className={classes.form}>\r\n          <Form\r\n            form={form}\r\n            onValuesChange={emailEnter}\r\n            onFinish={resetPasswordHandler}>\r\n            <h3>Reset Password</h3>\r\n            <Form.Item\r\n              name='email'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please enter your email to reset!',\r\n                },\r\n                {\r\n                  type: 'email',\r\n                  message: 'The email format is invalid!',\r\n                },\r\n                {\r\n                  validator: async (_, value) => {\r\n                    if (!isExist) {\r\n                      throw new Error('Email does not exist!');\r\n                    }\r\n                  },\r\n                },\r\n              ]}>\r\n              <Input prefix={<MailOutlined />} placeholder='name@domain.com' />\r\n            </Form.Item>\r\n            <div className={classes.send}>\r\n              <Form.Item>\r\n                <Link to='/'>\r\n                  <Button type='default' style={{ color: '#000' }}>\r\n                    <ArrowLeftOutlined />\r\n                    LOGIN\r\n                  </Button>\r\n                </Link>\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Button type='primary' htmlType='submit'>\r\n                  Send\r\n                </Button>\r\n              </Form.Item>\r\n            </div>\r\n          </Form>\r\n        </section>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ResetForm;\r\n","import { useContext } from 'react';\r\nimport { NavLink, useHistory, useParams } from 'react-router-dom';\r\n\r\nimport { Input, Avatar, Menu, Dropdown } from 'antd';\r\nimport {\r\n  UserOutlined,\r\n  SettingOutlined,\r\n  LogoutOutlined,\r\n} from '@ant-design/icons';\r\nimport classes from '../../../styles/UI/Layout/Header.module.css';\r\n\r\nimport AuthContext from '../../../store/auth-context';\r\n\r\nconst navLinks = [\r\n  {\r\n    title: 'About',\r\n    path: '/about',\r\n  },\r\n  {\r\n    title: 'Tutorials',\r\n    path: '/tutorials',\r\n  },\r\n  {\r\n    title: 'Help',\r\n    path: '/help',\r\n  },\r\n];\r\n\r\nconst Header = () => {\r\n  const { uid } = useParams();\r\n  // const { Header } = Layout;\r\n  const { Search } = Input;\r\n  const history = useHistory();\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  // 搜尋專案 -> 可能透過Antd Table Column Filter\r\n  const searchProjectHandler = (value) => {\r\n    console.log(value);\r\n  };\r\n\r\n  const userMenu = (e) => {\r\n    if (e.key === 'settings') {\r\n      history.push(`/members/${uid}/settings`);\r\n    }\r\n    if (e.key === 'logout') {\r\n      authCtx.logout();\r\n      history.replace('/');\r\n    }\r\n  };\r\n\r\n  const menu = (\r\n    <Menu theme='dark' onClick={userMenu}>\r\n      <Menu.Item key='settings' icon={<SettingOutlined />}>\r\n        {/* 導向個人資訊頁面 -> /uid/settings */}\r\n        Setting\r\n      </Menu.Item>\r\n      <Menu.Item key='logout' icon={<LogoutOutlined />}>\r\n        Logout\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <header className={classes.header}>\r\n      <span className={classes.logo}>\r\n        <NavLink to={`/project/${uid}`}>AIWinOps</NavLink>\r\n      </span>\r\n      <nav className={classes.nav}>\r\n        <div className={classes.menu}>\r\n          <ul>\r\n            <Search\r\n              placeholder='Search Project'\r\n              onSearch={searchProjectHandler}\r\n              className={classes.search}\r\n            />\r\n            <li>\r\n              <NavLink to={`/project/${uid}`} activeClassName={classes.active}>\r\n                Home\r\n              </NavLink>\r\n            </li>\r\n            {navLinks.map((link, index) => (\r\n              <li key={index}>\r\n                <NavLink to={link.path} activeClassName={classes.active}>\r\n                  {link.title}\r\n                </NavLink>\r\n              </li>\r\n            ))}\r\n            <span className={classes.avatar}>\r\n              <Dropdown overlay={menu} placement='bottomRight'>\r\n                <Avatar size={50} icon={<UserOutlined />}></Avatar>\r\n              </Dropdown>\r\n            </span>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useState } from 'react';\r\nimport { useHistory, useParams} from 'react-router-dom';\r\n\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport { CirclePicker } from 'react-color';\r\nimport classes from '../../../styles/Panel/Projects/NewProject.module.css';\r\n\r\nimport NavHeader from '../../UI/Layout/Header';\r\n\r\nconst PROJECT_URL = 'https://aiwinops-default-rtdb.firebaseio.com/projects.json';\r\n\r\nconst NewProject = () => {\r\n  const { TextArea } = Input;\r\n  const [form] = Form.useForm();\r\n  const history = useHistory();\r\n  const { uid } = useParams();\r\n\r\n  const [projectColor, setProjectColor] = useState('#fff');\r\n\r\n  const getColor = (color) => {\r\n    setProjectColor(color.hex);\r\n  };\r\n\r\n  // 將新專案新增至資料庫 /PUSH/New-Project\r\n  const registerNewProject = (values) => {\r\n    fetch(PROJECT_URL, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        build_time: new Date().toISOString().toString().slice(0, -5),\r\n        name: values.project_name,\r\n        manager: values.project_manager,\r\n        color: values.project_color.hex,\r\n        description: values.project_description,\r\n        agreement: values.project_agreement,\r\n        status: 'In Progress',\r\n        editable:　true,\r\n      }),\r\n      headers: { 'Content-Type': 'application/json'}\r\n    }).then(response => {\r\n      return response.json();\r\n    }).catch((error) => {\r\n      throw new Error(error);\r\n    });\r\n    history.push(`/project/${uid}`);\r\n  };\r\n\r\n  const cancleProjectHandler = () => {\r\n    history.push(`/project/${uid}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavHeader />\r\n      <section className={classes.project}>\r\n        <h2>新專案</h2>\r\n        <Form\r\n          form={form}\r\n          name='project'\r\n          onFinish={registerNewProject}\r\n          scrollToFirstError>\r\n          <div className={classes.info}>\r\n            <h4>專案名稱</h4>\r\n            <Form.Item\r\n              name='project_name'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Project name should not be empty!',\r\n                },\r\n              ]}>\r\n              <Input placeholder='Project Name' allowClear />\r\n            </Form.Item>\r\n            <h4>管理者</h4>\r\n            <Form.Item\r\n              name='project_manager'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Project manager should be provided!',\r\n                },\r\n              ]}>\r\n              <Input placeholder='Project Manager' allowClear />\r\n            </Form.Item>\r\n            <h4>專案顏色</h4>\r\n            <Form.Item\r\n              name='project_color'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Choose color for new project!',\r\n                },\r\n              ]}>\r\n              <CirclePicker\r\n                width={300}\r\n                color={projectColor}\r\n                onChangeComplete={getColor}\r\n              />\r\n            </Form.Item>\r\n            <h4>專案描述(Optional)</h4>\r\n            <Form.Item name='project_description'>\r\n              <TextArea\r\n                placeholder='Project Description'\r\n                rows={5}\r\n                maxLength={300}\r\n                showCount\r\n                allowClear\r\n                style={{ marginBottom: '2.5rem' }}\r\n              />\r\n            </Form.Item>\r\n          </div>\r\n          <Form.Item\r\n            name='project_agreement'\r\n            valuePropName='checked'\r\n            rules={[\r\n              {\r\n                validator: (_, value) =>\r\n                  value\r\n                    ? Promise.resolve()\r\n                    : Promise.reject(new Error('使用服務前請先閱讀說明')),\r\n              },\r\n            ]}>\r\n            <div className={classes.protocol}>\r\n              <h1>資料協議</h1>\r\n              <section>\r\n                請您在開始使用AIWin系列產品(以下簡稱\"本產品\")前，務必仔細閱讀並同意《用戶協議》(以下簡稱\"本協議\")\r\n                中規定的所有權利和限制。\r\n              </section>\r\n              <Checkbox>Accept</Checkbox>\r\n            </div>\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <div className={classes.btn}>\r\n              <Button\r\n                type='primary'\r\n                htmlType='submit'\r\n                style={{\r\n                  fontWeight: '600',\r\n                  backgroundColor: '#096dd9',\r\n                  borderColor: '#096dd9',\r\n                }}>\r\n                建立專案\r\n              </Button>\r\n              <Button\r\n                type='default'\r\n                danger\r\n                onClick={cancleProjectHandler}\r\n                style={{ marginLeft: '1rem' }}>\r\n                取消\r\n              </Button>\r\n            </div>\r\n          </Form.Item>\r\n        </Form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewProject;\r\n","import { useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { Layout, Menu, Button } from 'antd';\r\nimport {\r\n  PieChartOutlined,\r\n  DesktopOutlined,\r\n  ContainerOutlined,\r\n  LineChartOutlined,\r\n  UserOutlined,\r\n  MenuFoldOutlined,\r\n  MenuUnfoldOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport classes from '../../../styles/UI/Layout/Sidebar.module.css';\r\n\r\n\r\nconst Sidebar = () => {\r\n  const { Sider } = Layout;\r\n  const { uid } = useParams();\r\n  const history = useHistory();\r\n\r\n  const [collapsed, setCollapsed] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    setCollapsed((collapsed) => !collapsed);\r\n  };\r\n\r\n  const panelInfoRouter = (e) => {\r\n    history.push(`/${e.key}/${uid}`);\r\n  };\r\n\r\n  return (\r\n    <Sider width={200} collapsed={collapsed}>\r\n      <Button type='primary' onClick={toggleMenu} className={classes.foldBtn}>\r\n        {collapsed ? <MenuUnfoldOutlined /> : <MenuFoldOutlined />}\r\n      </Button>\r\n      <Menu\r\n        mode='inline'\r\n        theme='dark'\r\n        defaultSelectedKeys={['project']}\r\n        style={{ height: '100%', borderRight: 0 }}\r\n        onClick={panelInfoRouter}>\r\n        <Menu.Item key='project' icon={<PieChartOutlined />}>\r\n          Project\r\n        </Menu.Item>\r\n        <Menu.Item key='dashboard' icon={<DesktopOutlined />}>\r\n          Dashboard\r\n        </Menu.Item>\r\n        <Menu.Item key='report' icon={<LineChartOutlined />}>\r\n          Report\r\n        </Menu.Item>\r\n        <Menu.Item key='quota' icon={<ContainerOutlined />}>\r\n          Quota\r\n        </Menu.Item>\r\n        <Menu.Item key='members' icon={<UserOutlined />}>\r\n          Members\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Sider>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import { Layout } from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport Header from './Header';\r\nimport Sidebar from './Sidebar';\r\n\r\nconst PanelLayout = (props) => {\r\n  const { Footer } = Layout;\r\n\r\n  return (\r\n    <Layout>\r\n      <Header />\r\n      <Layout\r\n        style={{\r\n          position: 'fixed',\r\n          width: '100%',\r\n          height: '90%',\r\n          top: '5rem',\r\n        }}>\r\n        <Sidebar />\r\n        <Layout style={{ backgroundColor: '#fff' }}>  \r\n          {props.children}\r\n          <Footer style={{  textAlign: 'center', padding: '10px', zIndex: '20' }}>Copyright @ 2021 AIWinOps. All Rights Reserved</Footer>\r\n        </Layout>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default PanelLayout;\r\n","import { useState, useEffect, useCallback } from 'react';\r\nimport { Table, Space, Modal } from 'antd';\r\nimport {\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  CloseCircleOutlined,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\nconst PROJECT_URL =\r\n  'https://aiwinops-default-rtdb.firebaseio.com/projects.json';\r\n\r\nconst ProjectList = (props) => {\r\n  const [projectData, setProjectData] = useState();\r\n  const { confirm } = Modal;\r\n\r\n  // TODO: 取得後端資料庫的專案資料\r\n  const showEditModal = () => {\r\n    confirm({\r\n      title: 'CHECK',\r\n      icon: <CheckCircleOutlined style={{ color: '#096dd9' }} />,\r\n      content: 'Would you like to edit this project?',\r\n      okText: 'Confirm',\r\n      okType: 'primary',\r\n      onOk() {\r\n        return new Promise((resolve, reject) => {\r\n          setTimeout(Math.random > 0.5 ? resolve : reject, 1000);\r\n        })\r\n          .then(() => {\r\n            // GET method: 取得資料庫專案資料\r\n          })\r\n          .catch(() => {\r\n            // GET method failed\r\n          });\r\n      },\r\n      onCancel() {},\r\n    });\r\n  };\r\n\r\n  // TODO: 刪除後端資料庫的專案資料\r\n  const showDeleteModal = () => {\r\n    confirm({\r\n      title: 'DANGER',\r\n      icon: <CloseCircleOutlined style={{ color: '#ff4d4f' }} />,\r\n      content: 'Are you sure to delete this project?',\r\n      okText: 'Delete',\r\n      okType: 'danger',\r\n      onOk() {\r\n        return new Promise((resolve, reject) => {\r\n          setTimeout(Math.random > 0.5 ? resolve : reject, 2000);\r\n        })\r\n          .then(() => {\r\n            // POST method: 刪除資料庫專案資料\r\n          })\r\n          .catch(() => {\r\n            // POST method failed\r\n          });\r\n      },\r\n      onCancel() {},\r\n    });\r\n  };\r\n\r\n  const TABLE_COLUMN = [\r\n    {\r\n      title: '專案名稱',\r\n      key: 'name',\r\n      dataIndex: 'name',\r\n      render: (text, record) => {\r\n        return <a>{text}</a>;\r\n      },\r\n    },\r\n    {\r\n      title: '狀態',\r\n      key: 'status',\r\n      dataIndex: 'status',\r\n      editable: true,\r\n    },\r\n    {\r\n      title: '管理者',\r\n      key: 'manager',\r\n      dataIndex: 'manager',\r\n    },\r\n    {\r\n      title: '建立日期',\r\n      key: 'build_time',\r\n      dataIndex: 'build_time',\r\n    },\r\n    {\r\n      title: '修改日期',\r\n      key: 'modify_time',\r\n      dataIndex: 'modify_time',\r\n    },\r\n    {\r\n      title: '其他操作',\r\n      key: 'editable',\r\n      dataIndex: 'editable',\r\n      render: (editable) => {\r\n        return (\r\n          <Space>\r\n            {/* 連結Icon到各自專案的編輯畫面 */}\r\n            {editable && (\r\n              <EditOutlined\r\n                style={{ fontSize: '150%', color: '#096dd9' }}\r\n                onClick={showEditModal}\r\n              />\r\n            )}\r\n            <DeleteOutlined\r\n              style={{ fontSize: '150%', margin: '0 1rem', color: '#ff4d4f' }}\r\n              onClick={showDeleteModal}\r\n            />\r\n          </Space>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  // 抓取使用者專案的資料 -> GET/ProjectData\r\n  const fetchProjectData = useCallback(() => {\r\n    fetch(PROJECT_URL)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        const storeData = [];\r\n        for (const key in data) {\r\n          storeData.push({\r\n            key: key,\r\n            name: data[key].name,\r\n            status: data[key].status,\r\n            manager: data[key].manager,\r\n            build_time: data[key].build_time,\r\n            modify_time: data[key].modify_time,\r\n            editable: data[key].editable,\r\n          });\r\n        }\r\n        setProjectData(storeData);\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchProjectData();\r\n  }, [projectData]);\r\n\r\n  return (\r\n    <div>\r\n      <Table\r\n        scroll={{ x: '1000', y: '500' }}\r\n        pagination={false}\r\n        columns={TABLE_COLUMN}\r\n        dataSource={projectData}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import {\r\n  useRouteMatch,\r\n  useHistory,\r\n} from 'react-router-dom';\r\n\r\nimport classes from '../../../styles/Panel/Projects/ProjectContent.module.css';\r\nimport { Layout, Button } from 'antd';\r\n\r\nimport ProjectList from './ProjectList';\r\nimport { Fragment } from 'react';\r\n\r\nconst ProjectContent = () => {\r\n  const { Content } = Layout;\r\n\r\n  const { url } = useRouteMatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const newProjectHandler = () => {\r\n    console.log(url);\r\n    history.push(`${url}/new-project`);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Content style={{ margin: '0 30px' }}>\r\n        <div className={classes.title}>\r\n          <h3>Projects</h3>\r\n          <Button\r\n            type='primary'\r\n            onClick={newProjectHandler}\r\n            style={{ fontWeight: '700' }}>\r\n            +新專案\r\n          </Button>\r\n        </div>\r\n        <ProjectList />\r\n      </Content>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProjectContent;\r\n","import PanelLayout from '../../UI/Layout/PanelLayout';\r\nimport ProjectContent from './ProjectContent';\r\n\r\nconst Panel = () => {\r\n  return (\r\n    <PanelLayout>\r\n      <ProjectContent />\r\n    </PanelLayout>\r\n  );\r\n}\r\n\r\nexport default Panel;","import { Route, Switch, useRouteMatch } from 'react-router-dom';\r\nimport NewProject from '../components/Panel/Projects/NewProject';\r\nimport ProjectPanel from '../components/Panel/Projects/ProjectPanel';\r\n\r\nconst ProjectPage = () => {\r\n  \r\n  const { path } = useRouteMatch();  \r\n  console.log(path);\r\n  return (\r\n    <Switch>\r\n      <Route path={`${path}`} exact>\r\n        <ProjectPanel />\r\n      </Route>\r\n      <Route path={`${path}/new-project`}>\r\n        <NewProject />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default ProjectPage;\r\n","import { useState, useEffect, useCallback } from 'react';\r\n\r\nimport { Table, Switch, Space } from 'antd';\r\n\r\nimport classes from '../../../styles/Panel/Member/MemberList.module.css';\r\n\r\n// 目前使用 Firebase Realtime Database 模擬會員資料\r\nconst MEMBER_URL = 'https://aiwinops-default-rtdb.firebaseio.com/members.json';\r\n\r\n// Firebase Authentication模擬GET會員API串接\r\n// const FIREBASE_KEY = 'AIzaSyAaf6guV8zB9_4R5xwuDDiQM0zaNzQWuWA';\r\n// const MEMBER_LIST_API = `https://identitytoolkit.googleapis.com/v1/accounts:lookup?key=${FIREBASE_KEY}`;\r\n\r\nconst MemberList = () => {\r\n  const [members, setMembers] = useState();\r\n  \r\n\r\n  // TODO: 抓取會員的資料 -> GET/MemberData\r\n  const fetchMemberData = useCallback(() => {\r\n    fetch(MEMBER_URL)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        const memberData = [];\r\n        for (const key in data) {\r\n          memberData.push({\r\n            key: key,\r\n            id: data[key].name,\r\n            name: data[key].username,\r\n            level: data[key].level,\r\n            time: data[key].register_time,\r\n            status: data[key].status,\r\n            email: data[key].email,\r\n          });\r\n        }\r\n        setMembers(memberData);\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n  }, [setMembers]);\r\n\r\n  useEffect(() => {\r\n    fetchMemberData();\r\n  }, [members, fetchMemberData]);\r\n\r\n  const TABLE_COLUMN = [\r\n    {\r\n      title: '名稱',\r\n      key: 'name',\r\n      dataIndex: 'name',\r\n      width: '10%',\r\n    },\r\n    {\r\n      title: '權限',\r\n      key: 'level',\r\n      dataIndex: 'level',\r\n      width: '10%',\r\n    },\r\n    {\r\n      title: '註冊時間',\r\n      key: 'time',\r\n      dataIndex: 'time',\r\n      width: '20%',\r\n    },\r\n    {\r\n      title: '信箱',\r\n      key: 'email',\r\n      dataIndex: 'email',\r\n      render: (text) => {\r\n        return <a>{text}</a>;\r\n      },\r\n    },\r\n    {\r\n      title: '狀態',\r\n      key: 'status',\r\n      dataIndex: 'status',\r\n      render: (status) => {\r\n        // -> 更新資料庫會員的狀態\r\n        const onToggle = (checked) => {\r\n          status = checked;\r\n        };\r\n        return (\r\n          <Space>\r\n            <Switch defaultChecked onChange={onToggle} />\r\n          </Space>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className={classes.members}>\r\n      <div>\r\n        <Table\r\n          scroll={{ x: 1000, y: 400 }}\r\n          pagination={false}\r\n          columns={TABLE_COLUMN}\r\n          dataSource={members}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MemberList;\r\n","import { useHistory, useRouteMatch } from 'react-router-dom';\r\n\r\nimport { Layout, Button } from 'antd';\r\nimport classes from '../../../styles/Panel/Projects/ProjectContent.module.css';\r\n\r\nimport MemberList from './MemberList';\r\n\r\nconst MemberContent = () => {\r\n  const { Content } = Layout;\r\n  const { url } = useRouteMatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const newMemberHandler = () => {\r\n    history.push(`${url}/new-member`);\r\n  };\r\n\r\n  return (\r\n    <Layout style={{ backgroundColor: '#fff' }}>\r\n      <Content style={{ margin: '0 30px' }}>\r\n        <div className={classes.title}>\r\n          <h3>Members</h3>\r\n          <Button\r\n            type='primary'\r\n            style={{ fontWeight: '700' }}\r\n            onClick={newMemberHandler}>\r\n            +新成員\r\n          </Button>\r\n        </div>\r\n        <MemberList />\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default MemberContent;\r\n","import PanelLayout from '../../UI/Layout/PanelLayout';\r\nimport MemberContent from './MemberContent';\r\n\r\nconst Panel = () => {\r\n  return (\r\n    <PanelLayout>\r\n      <MemberContent />\r\n    </PanelLayout>\r\n  );\r\n};\r\n\r\nexport default Panel;\r\n","import { useHistory, useParams } from 'react-router-dom';\r\n\r\nimport { Form, Input, Checkbox, Button, Select } from 'antd';\r\nimport classes from '../../../styles/Panel/Member/NewMember.module.css';\r\n\r\nimport NavHeader from '../../UI/Layout/Header';\r\n\r\n// 目前使用 Firebase Realtime Database 模擬會員資料\r\nconst MEMBER_URL = 'https://aiwinops-default-rtdb.firebaseio.com/members.json';\r\n\r\n// const FIREBASE_KEY = 'AIzaSyAaf6guV8zB9_4R5xwuDDiQM0zaNzQWuWA';\r\n// const SIGN_UP_API = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${FIREBASE_KEY}`;\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 16,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n    },\r\n  },\r\n};\r\n\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nconst NewMember = () => {\r\n  const [form] = Form.useForm();\r\n  const { uid } = useParams();\r\n  const history = useHistory();\r\n\r\n  const { Option } = Select;\r\n\r\n  // TODO: 新增會員資料 -> POST/MemberData\r\n  const registerNewMember = (values) => {\r\n    console.log('Received values of form: ', values);\r\n    fetch(MEMBER_URL, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        register_time: new Date().toISOString().toString().slice(0, -5),\r\n        email: values.email,\r\n        password: values.password,\r\n        username: values.username,\r\n        level: values.level,\r\n        status: true,\r\n        agreement: values.agreement,\r\n        returnSecureToken: true,\r\n      }),\r\n      headers: { 'Content-Type': 'application/json' },\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n    history.replace(`/members/${uid}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavHeader />\r\n      <section className={classes.form}>\r\n        <h2>New Member</h2>\r\n        <Form\r\n          {...formItemLayout}\r\n          form={form}\r\n          name='register'\r\n          onFinish={registerNewMember}\r\n          scrollToFirstError>\r\n          <Form.Item\r\n            name='username'\r\n            label='Username'\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please enter username!',\r\n              },\r\n            ]}>\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name='email'\r\n            label='E-mail'\r\n            rules={[\r\n              {\r\n                type: 'email',\r\n                message: 'The email format is invalid!',\r\n              },\r\n              {\r\n                required: true,\r\n                message: 'Please enter email!',\r\n              },\r\n            ]}>\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name='password'\r\n            label='Password'\r\n            hasFeedback\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your password!',\r\n              },\r\n            ]}>\r\n            <Input.Password autoComplete='password' />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name='confirm'\r\n            label='Confirm Password'\r\n            dependencies={['password']}\r\n            hasFeedback\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your password!',\r\n              },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (!value || getFieldValue('password') === value) {\r\n                    return Promise.resolve();\r\n                  }\r\n                  return Promise.reject(new Error('Passwords are not match!'));\r\n                },\r\n              }),\r\n            ]}>\r\n            <Input.Password autoComplete='confirm' />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name='level'\r\n            label='Level'\r\n            initialValue='Owner'\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please provide authorization to the member!',\r\n              },\r\n            ]}>\r\n            <Select>\r\n              <Option value='Owner'>Owner</Option>\r\n              <Option value='Manager'>Manager</Option>\r\n              {/* 其他的權限設定 */}\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            {...tailFormItemLayout}\r\n            name='agreement'\r\n            valuePropName='checked'\r\n            rules={[\r\n              {\r\n                validator: (_, value) =>\r\n                  value\r\n                    ? Promise.resolve()\r\n                    : Promise.reject(new Error('Please read the agreement!')),\r\n              },\r\n            ]}>\r\n            <Checkbox>\r\n              我已經閱讀\r\n              <a\r\n                href='https://www.zerodimension.com.tw/html/HDUT%20PBL%20PRIVACY.htm'\r\n                target='_blank'\r\n                rel='noreferrer'>\r\n                相關聲明\r\n              </a>\r\n            </Checkbox>\r\n          </Form.Item>\r\n          <Form.Item {...tailFormItemLayout}>\r\n            <Button type='primary' htmlType='submit'>\r\n              新增會員\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewMember;\r\n","import { useContext } from 'react';\r\n\r\nimport classes from '../../../styles/Panel/Member/Settings.module.css';\r\nimport { Form, Upload, Input, Avatar, Button } from 'antd';\r\nimport { UploadOutlined, UserOutlined } from '@ant-design/icons';\r\n\r\nimport NavHeader from '../../UI/Layout/Header';\r\nimport AuthContext from '../../../store/auth-context';\r\n\r\n// 目前使用 Firebase Authentication模擬修改使用者資訊\r\nconst FIREBASE_KEY = 'AIzaSyAaf6guV8zB9_4R5xwuDDiQM0zaNzQWuWA';\r\nconst UPDATE_API = `https://identitytoolkit.googleapis.com/v1/accounts:update?key=${FIREBASE_KEY}`;\r\n\r\nconst Settings = () => {\r\n  const [form] = Form.useForm();\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  const avatarFile = (e) => {\r\n    return e && e.fileList;\r\n  };\r\n\r\n  // TODO: 更新使用者資訊 POST/uid/uinfo\r\n  const updateProfile = (values) => {\r\n    fetch(UPDATE_API, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        idToken: authCtx.token,\r\n        displayName: values.username,\r\n        photoUrl: values.avatar,\r\n        email: values.email\r\n      })\r\n    })\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavHeader />\r\n      <section className={classes.settings}>\r\n        <h2>Settings</h2>\r\n        <Form\r\n          form={form}\r\n          name='settings'\r\n          onFinish={updateProfile}\r\n          scrollToFirstError>\r\n          <div className={classes.avatar}>\r\n            <section className='left'>\r\n              <h3>Public Avatar</h3>\r\n              <p>\r\n                You can change your avatar here or remove the current avatar to\r\n                revert to UserOutlined.\r\n              </p>\r\n            </section>\r\n\r\n            <section className='right'>\r\n              <Avatar size={90} icon={<UserOutlined />} />\r\n              <Form.Item\r\n                name='upload'\r\n                label='Upload Avatar'\r\n                valuePropName='fileList'\r\n                getValueFromEvent={avatarFile}>\r\n                <Upload name='avatar' action='/upload.do' listType='picture'>\r\n                  <Button icon={<UploadOutlined />}>Upload</Button>\r\n                </Upload>\r\n              </Form.Item>\r\n            </section>\r\n          </div>\r\n          <div className={classes.main}>\r\n            <section className='left'>\r\n              <h3>Main Settings</h3>\r\n              <p>This information will appear on your profile</p>\r\n            </section>\r\n            <section className='right'>\r\n              <Form.Item name='username' label='Username'>\r\n                <Input />\r\n              </Form.Item>\r\n              <Form.Item name='email' label='E-mail'>\r\n                <Input />\r\n              </Form.Item>\r\n            </section>\r\n          </div>\r\n          <div className={classes.password}>\r\n            <section className='left'>\r\n              <h3>Change Password</h3>\r\n              <p>\r\n                You will be directed to the login page after you update your\r\n                password\r\n              </p>\r\n            </section>\r\n            <section className='right'>\r\n              <Form.Item name='current_password' label='Current Password'>\r\n                <Input.Password />\r\n              </Form.Item>\r\n              <Form.Item name='password' label='New Password'>\r\n                <Input.Password />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name='confirm'\r\n                label='Confirm Password'\r\n                dependencies={['password']}\r\n                hasFeedback\r\n                rules={[\r\n                  ({ getFieldValue }) => ({\r\n                    validator(_, value) {\r\n                      if (!value || getFieldValue('password') === value) {\r\n                        return Promise.resolve();\r\n                      }\r\n                      return Promise.reject(\r\n                        new Error('New Passwords are not match!'),\r\n                      );\r\n                    },\r\n                  }),\r\n                ]}>\r\n                <Input.Password />\r\n              </Form.Item>\r\n            </section>\r\n          </div>\r\n          <section className={classes.update}>\r\n            <Form.Item>\r\n              <Button type='primary' htmlType='submit'>\r\n                更新個人資料\r\n              </Button>\r\n            </Form.Item>\r\n          </section>\r\n        </Form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import { Route, Switch, useRouteMatch } from 'react-router-dom';\r\n\r\nimport MemberPanel from '../components/Panel/Members/MemberPanel';\r\nimport NewMember from '../components/Panel/Members/NewMember';\r\nimport Settings from '../components/Panel/Members/Settings';\r\n\r\nconst MemberPage = () => {\r\n  const { path } = useRouteMatch();\r\n  return (\r\n    <Switch>\r\n      <Route path={`${path}`} exact>\r\n        <MemberPanel />\r\n      </Route>\r\n      <Route path={`${path}/new-member`}>\r\n        <NewMember />\r\n      </Route>\r\n      <Route path={`${path}/settings`}>\r\n        <Settings />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default MemberPage;\r\n","import { Descriptions, Card, Badge, Progress, Tooltip } from 'antd';\r\n\r\nconst QuotaList = () => {\r\n  return (\r\n    <Card\r\n      style={{\r\n        width: '100%',\r\n        height: '500px',\r\n        overflowY: 'scroll',\r\n        marginTop: '1rem',\r\n      }}>\r\n      <Descriptions title='Your Solution' layout='vertical' bordered>\r\n        <Descriptions.Item label='Product'>Cloud Database</Descriptions.Item>\r\n        <Descriptions.Item label='Billing Mode'>Paid</Descriptions.Item>\r\n        <Descriptions.Item label='Automatic Renewal'>YES</Descriptions.Item>\r\n        <Descriptions.Item label='Build time'>\r\n          2018-04-24 18:00:00\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Status' span={3}>\r\n          <Badge status='processing' text='Running' />\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Member' span={3}>\r\n          <Tooltip title='專案成員額度'>\r\n            <span>In used: 4</span>\r\n          </Tooltip>\r\n          <Progress percent={40} />\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Disk' span={3}>\r\n          <Tooltip title='專案硬碟使用率'>\r\n            <span>In used: 6GB</span>\r\n          </Tooltip>\r\n          <Progress percent={60} />\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='GPU' span={3}>\r\n          <Tooltip title='專案GPU使用率'>\r\n            <span>Average Usage: 82%</span>\r\n          </Tooltip>\r\n          <Progress percent={82} />\r\n        </Descriptions.Item>\r\n      </Descriptions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default QuotaList;\r\n","import { Fragment } from 'react';\r\nimport { useRouteMatch, useHistory } from 'react-router-dom';\r\n\r\nimport classes from '../../../styles/Panel/Projects/ProjectContent.module.css';\r\nimport { Layout, Button } from 'antd';\r\n\r\n\r\nimport QuotaList from './QuotaList';\r\n\r\nconst QuotaContent = () => {\r\n  const { Content } = Layout;\r\n\r\n  const { url } = useRouteMatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const quotaUpgrade = () => {\r\n    console.log(url);\r\n    history.push(`${url}/quota-upgrade`);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Content style={{ margin: '0 30px' }}>\r\n        <div className={classes.title}>\r\n          <h3>Quota</h3>\r\n          <Button\r\n            type='primary'\r\n            onClick={quotaUpgrade}\r\n            style={{ fontWeight: '700' }}>\r\n            Upgrade\r\n          </Button>\r\n        </div>\r\n        <QuotaList />\r\n      </Content>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuotaContent;\r\n","import PanelLayout from '../../UI/Layout/PanelLayout';\r\nimport QuotaContent from './QuotaContent';\r\n\r\nconst QuotaPanel = () => {\r\n  return (\r\n    <PanelLayout>\r\n      <QuotaContent />\r\n    </PanelLayout>\r\n  );\r\n};\r\n\r\nexport default QuotaPanel;\r\n","import { useHistory } from 'react-router-dom';\r\n\r\nimport classes from '../../../styles/Panel/Projects/NewProject.module.css';\r\n\r\nimport NavHeader from '../../UI/Layout/Header';\r\n\r\nconst QuotaUpgrade = () => {\r\n  const history = useHistory();\r\n  console.log(history);\r\n  return (\r\n    <div>\r\n      <NavHeader />\r\n      <section className={classes.project}>\r\n        <h2>調整專案額度</h2>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuotaUpgrade;\r\n","import { Route, Switch, useRouteMatch } from 'react-router-dom';\r\n\r\nimport QuotaPanel from '../components/Panel/Quota/QuotaPanel';\r\nimport QuotaUpgrade from '../components/Panel/Quota/QuotaUpgrade';\r\n\r\nconst QuotaPage = () => {\r\n  const { path } = useRouteMatch();\r\n  return (\r\n    <Switch>\r\n      <Route path={`${path}`} exact>\r\n        <QuotaPanel />\r\n      </Route>\r\n      <Route path={`${path}/quota-upgrade`}>\r\n        <QuotaUpgrade />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default QuotaPage;\r\n","import { Pie } from '@ant-design/charts';\r\n\r\nconst ModelPie = () => {\r\n    // 資料數據比例\r\n    let data = [\r\n    {\r\n      type: 'Data',\r\n      value: 60,\r\n    },\r\n    {\r\n      type: 'Model',\r\n      value: 30,\r\n    },\r\n    {\r\n      type: '限度邏輯',\r\n      value: 10,\r\n    },\r\n  ];\r\n\r\n  let config = {\r\n    appendPadding: 10,\r\n    data: data,\r\n    angleField: 'value',\r\n    colorField: 'type',\r\n    radius: 1,\r\n    innerRadius: 0.4,\r\n    label: {\r\n      type: 'inner',\r\n      offset: '-50%',\r\n      content: '{value}%',\r\n      style: {\r\n        textAlign: 'center',\r\n        fontSize: 12,\r\n      },\r\n    },\r\n    interactions: [{ type: 'element-selected' }, { type: 'element-active' }],\r\n    statistic: {\r\n      title: false,\r\n      content: {\r\n        style: {\r\n          whiteSpace: 'pre-wrap',\r\n          overflow: 'hidden',\r\n          textOverflow: 'ellipsis',\r\n        },\r\n        formatter: function formatter() {\r\n          return 'Data Model';\r\n        },\r\n      },\r\n    },\r\n  };\r\n  return <Pie {...config} />;\r\n};\r\n\r\nexport default ModelPie;","import { Card, Descriptions, Progress, Tooltip } from 'antd';\r\nimport ModelPie from './ModelPie';\r\n\r\nconst DashboardGraph = () => {\r\n  return (\r\n    <Card\r\n      style={{\r\n        width: '100%',\r\n        height: '600px',\r\n        overflowY: 'scroll'\r\n      }}>\r\n      <Card>\r\n        <Descriptions title='Training Process' layout='horizontal' bordered>\r\n          <Descriptions.Item\r\n            label='Data'\r\n            span={1}\r\n            style={{ textAlign: 'center' }}>\r\n            <Tooltip title='已訓練資料集'>\r\n              <Progress type='circle' percent={60} />\r\n            </Tooltip>\r\n          </Descriptions.Item>\r\n          <Descriptions.Item\r\n            label='Model'\r\n            span={1}\r\n            style={{ textAlign: 'center' }}>\r\n            <Tooltip title='模型訓練進度'>\r\n              <Progress type='circle' percent={70} />\r\n            </Tooltip>\r\n          </Descriptions.Item>\r\n          <Descriptions.Item\r\n            label='Logic'\r\n            span={1}\r\n            style={{ textAlign: 'center' }}>\r\n            <Tooltip title='限度邏輯'>\r\n              <Progress type='circle' percent={15} />\r\n            </Tooltip>\r\n          </Descriptions.Item>\r\n        </Descriptions>\r\n      </Card>\r\n      <Card>\r\n        <Descriptions title='Indicators' layout='vertical' bordered>\r\n          <Descriptions.Item label='Graph'>\r\n            <ModelPie />\r\n          </Descriptions.Item>\r\n        </Descriptions>\r\n      </Card>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DashboardGraph;\r\n","import { Fragment } from 'react';\r\nimport { useRouteMatch, useHistory } from 'react-router-dom';\r\n\r\nimport classes from '../../../styles/Panel/Projects/ProjectContent.module.css';\r\nimport { Layout } from 'antd';\r\n\r\nimport DashboardGraph from './DashboardGraph';\r\n\r\nconst DashboardContent = () => {\r\n  const { Content } = Layout;\r\n\r\n  const { url } = useRouteMatch();\r\n\r\n  const history = useHistory();\r\n  console.log(url);\r\n  console.log(history);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Content style={{ margin: '0 30px' }}>\r\n        <div className={classes.title}>\r\n          <h3>Dashboard</h3>\r\n        </div>\r\n        <DashboardGraph />\r\n      </Content>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default DashboardContent;\r\n","import PanelLayout from '../../UI/Layout/PanelLayout';\r\nimport DashboardContent from './DashboardContent';\r\n\r\nconst QuotaPanel = () => {\r\n  return (\r\n    <PanelLayout>\r\n      <DashboardContent />\r\n    </PanelLayout>\r\n  );\r\n};\r\n\r\nexport default QuotaPanel;\r\n","import { Route, Switch, useRouteMatch } from 'react-router-dom';\r\nimport DashboardPanel from '../components/Panel/Dashboard/DashboardPanel';\r\n\r\nconst DashboardPage = () => {\r\n  const { path } = useRouteMatch();\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path={`${path}`} exact>\r\n        <DashboardPanel />;\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;\r\n","import { Card, Descriptions, Tooltip } from 'antd';\r\n\r\n\r\nconst columns = { xs: 8, sm: 12, md: 12};\r\n\r\nconst ReportGraph = () => {\r\n  // Dummy Data\r\n  const data = {\r\n    batch: 3,\r\n    label: 750,\r\n    reviewed: 0,\r\n    total: 900,\r\n    unlabel: 150,\r\n    unreviewed: 900,\r\n    completed: 300,\r\n  };\r\n\r\n  const model = {\r\n    name: 'Model001',\r\n    state: 'Training',\r\n    task: 'Object Detection',\r\n    data_source: 'Weld1',\r\n    model_type: 'RefineDet',\r\n    manager: 'Chris',\r\n    metrics: '0.7',\r\n    training_time: {\r\n      start: '2020-12-11 08:10:23',\r\n      end: '2020-12-11 11:20:23',\r\n      take: '03:10:00'\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      style={{\r\n        width: '100%',\r\n        height: '450px',\r\n        overflowY: 'scroll',\r\n      }}>\r\n      {/* 傳入專案數據 */}\r\n      <Descriptions\r\n        title='Data'\r\n        layout='vertical'\r\n        bordered\r\n        style={{ marginBottom: '1rem' }}>\r\n        <Descriptions.Item label='#Batch' span={1}>\r\n          <Tooltip title='資料批次量'>{data.batch}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='#Label' span={1}>\r\n          <Tooltip title='資料標籤量'>{data.label}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='#UnLabled' span={1}>\r\n          <Tooltip title='資料未標籤量'>{data.unlabel}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='#Total' span={1}>\r\n          <Tooltip title='資料總量'>{data.total}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='#Reviewed' span={1}>\r\n          <Tooltip title='資料審核量'>{data.reviewed}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='#Unreviewed' span={1}>\r\n          <Tooltip title='資料未審核量'>{data.unreviewed}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='#Complete' span={1}>\r\n          <Tooltip title='資料完成量'>{data.completed}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='#Completed Ratio' span={1}>\r\n          <Tooltip title='資料完成比'>\r\n            {((data.completed / data.total) * 100).toFixed(2)}\r\n          </Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='#Label Ratio' span={1}>\r\n          <Tooltip title='資料標籤比'>\r\n            {((data.unlabel / data.label) * 100).toFixed(2)}\r\n          </Tooltip>\r\n        </Descriptions.Item>\r\n      </Descriptions>\r\n      {/* 需要再另外寫成一個組件 */}\r\n      <Descriptions column={columns} title='Model' layout='vertical' bordered>\r\n        <Descriptions.Item label='Models' span={1}>\r\n          <Tooltip title='模型名稱'>{model.name}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='State' span={1}>\r\n          <Tooltip title='模型狀態'>{model.state}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Task' span={1}>\r\n          <Tooltip title='模型任務'>{model.task}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Data Source' span={1}>\r\n          <Tooltip title='模型資料源'>{model.data_source}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Model Type' span={1}>\r\n          <Tooltip title='模型類型'>{model.model_type}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Manager' span={1}>\r\n          <Tooltip title='模型管理者'>{model.manager}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Metrics' span={1}>\r\n          <Tooltip title='模型測量'>{model.metrics}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Start Time' span={2}>\r\n          <Tooltip title='開始時間'>{model.training_time.start}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='End Time' span={2}>\r\n          <Tooltip title='結束時間'>{model.training_time.end}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Take' span={1}>\r\n          <Tooltip title='訓練時間'>{model.training_time.take}</Tooltip>\r\n        </Descriptions.Item>\r\n      </Descriptions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ReportGraph;\r\n","import { Fragment } from 'react';\r\nimport { useRouteMatch, useHistory } from 'react-router-dom';\r\n\r\nimport classes from '../../../styles/Panel/Projects/ProjectContent.module.css';\r\nimport { Layout, Cascader } from 'antd';\r\n\r\nimport ReportGraph from './ReportGraph';\r\n\r\nconst ReportContent = () => {\r\n  const { Content } = Layout;\r\n\r\n  const { url } = useRouteMatch();\r\n\r\n  const history = useHistory();\r\n\r\n  // 各專案名稱 -> 需傳入專案名\r\n  const options = [\r\n    {\r\n      value: 'project1',\r\n      label: 'Project1',\r\n    },\r\n    {\r\n      value: 'project2',\r\n      label: 'Project2',\r\n    },\r\n    {\r\n      value: 'project3',\r\n      label: 'Project3',\r\n    },\r\n  ];\r\n\r\n  // 更改專案\r\n  const chooseProject = (value) => {\r\n    \r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Content style={{ margin: '0 30px' }}>\r\n        <div className={classes.title}>\r\n          <h3>Report</h3>\r\n        </div>\r\n        <Cascader\r\n          defaultValue={['project1']}\r\n          options={options}\r\n          onChange={chooseProject}\r\n          allowClear={false}\r\n          bordered={false}\r\n          style={{ \r\n            border: '1px solid #000',\r\n            margin: '5px 0'\r\n          }}\r\n        />\r\n        <ReportGraph />\r\n      </Content>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ReportContent;\r\n","import PanelLayout from '../../UI/Layout/PanelLayout';\r\nimport ReportContent from './ReportContent';\r\n\r\nconst ReportPanel = () => {\r\n  return (\r\n    <PanelLayout>\r\n      <ReportContent />\r\n    </PanelLayout>\r\n  );\r\n};\r\n\r\nexport default ReportPanel;\r\n","import { Route, Switch, useRouteMatch } from 'react-router-dom';\r\n\r\nimport ReportPanel from '../components/Panel/Report/ReportPanel';\r\n\r\nconst ReportPage = () => {\r\n  const { path } = useRouteMatch();\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path={`${path}`} exact>\r\n        <ReportPanel />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default ReportPage;\r\n","import PanelLayout from '../components/UI/Layout/PanelLayout';\r\n\r\nconst AboutPage = () => {\r\n  return (\r\n    <PanelLayout>\r\n      \r\n    </PanelLayout>\r\n  )\r\n};\r\n\r\nexport default AboutPage;","import PanelLayout from '../components/UI/Layout/PanelLayout';\r\n\r\nconst TutorialsPage = () => {\r\n  return <PanelLayout></PanelLayout>;\r\n};\r\n\r\nexport default TutorialsPage;\r\n","import PanelLayout from '../components/UI/Layout/PanelLayout';\r\n\r\nconst HelpPage = () => {\r\n  return <PanelLayout></PanelLayout>;\r\n};\r\n\r\nexport default HelpPage;\r\n","import { useContext } from 'react';\r\nimport { Route, Switch, BrowserRouter, Redirect } from 'react-router-dom';\r\n\r\nimport LoginForm from '../components/Login/LoginForm';\r\nimport ResetForm from '../components/Login/ResetForm';\r\n\r\nimport AuthContext from '../store/auth-context';\r\n\r\nimport ProjectPage from './ProjectPage';\r\nimport MemberPage from './MemberPage';\r\nimport QuotaPage from './QuotaPage';\r\nimport DashboardPage from './DashboardPage';\r\nimport ReportPage from './ReportPage';\r\n\r\nimport AboutPage from './AboutPage';\r\nimport TutorialsPage from './TutorialsPage';\r\nimport HelpPage from './HelpPage';\r\n\r\nconst LoginPage = (props) => {\r\n  const authCtx = useContext(AuthContext);\r\n  console.log(authCtx.token);\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n        <Route path='/' exact>\r\n          <LoginForm />\r\n        </Route>\r\n        <Route path='/reset'>\r\n          <ResetForm />\r\n        </Route>\r\n        <Route path='/project/:uid'>\r\n          {localStorage.getItem('token') ? (\r\n            <ProjectPage />\r\n          ) : (\r\n            <Redirect to='/' />\r\n          )}\r\n        </Route>\r\n        <Route path='/members/:uid'>\r\n          {localStorage.getItem('token') ? <MemberPage /> : <Redirect to='/' />}\r\n        </Route>\r\n        <Route path='/quota/:uid'>\r\n          {localStorage.getItem('token') ? <QuotaPage /> : <Redirect to='/' />}\r\n        </Route>\r\n        <Route path='/dashboard/:uid'>\r\n          {localStorage.getItem('token') ? (\r\n            <DashboardPage />\r\n          ) : (\r\n            <Redirect to='/' />\r\n          )}\r\n        </Route>\r\n        <Route path='/report/:uid'>\r\n          {localStorage.getItem('token') ? <ReportPage /> : <Redirect to='/' />}\r\n        </Route>\r\n        <Route path='/about'>\r\n          {localStorage.getItem('token') ? <AboutPage /> : <Redirect to='/' />}\r\n        </Route>\r\n        <Route path='/tutorials'>\r\n          {localStorage.getItem('token') ? (\r\n            <TutorialsPage />\r\n          ) : (\r\n            <Redirect to='/' />\r\n          )}\r\n        </Route>\r\n        <Route path='/help'>\r\n          {localStorage.getItem('token') ? <HelpPage /> : <Redirect to='/' />}\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import LoginPage from './pages/LoginPage';\n\nfunction App() {\n  return <LoginPage />\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport {AuthContextProvider} from './store/auth-context';\n\nReactDOM.render(\n  <AuthContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthContextProvider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["styles/ProjectPanel/Panel/ProjectContent.module.css","styles/ProjectPanel/Panel/NavLeft.module.css","styles/UI/Layout/Card.module.css","styles/UI/Layout/LoadingSpinner.module.css","components/UI/Layout/Card.js","components/UI/Layout/LoadingSpinner.js","components/Login/LoginForm.js","components/Login/ResetForm.js","components/ProjectPanel/Panel/NavHeader.js","components/ProjectPanel/Panel/ProjectContent.js","components/ProjectPanel/Panel/NavLeft.js","components/ProjectPanel/Panel/Panel.js","components/ProjectPanel/Profile/Settings.js","components/ProjectPanel/Panel/NewProject.js","App.js","reportWebVitals.js","index.js","styles/Login/LoginForm.module.css","styles/ProjectPanel/Panel/NavHeader.module.css","styles/Login/ResetForm.module.css","styles/ProjectPanel/Panel/NewProject.module.css"],"names":["module","exports","Card","props","className","classes","card","children","LoadingSpinner","ring","LoginForm","useState","showPassword","setShowPassword","isLoading","emailRef","useRef","passwordRef","history","useHistory","login","logo","form","onSubmit","event","preventDefault","current","value","push","form__field","email","type","prefix","MailOutlined","placeholder","ref","required","LockOutlined","form__check","id","onClick","htmlFor","form__submit","form__help","ResetForm","resetRef","reset","form__control","input","navLinks","title","path","menu","Item","rel","href","NavHeader","Header","Layout","Search","Input","header","to","nav","onSearch","console","log","search","map","link","index","activeClassName","active","avatar","overlay","placement","arrow","size","icon","UserOutlined","column_description","key","dataIndex","DUMMY_DATA","name","status","manager","build_time","modify_time","actions","EditOutlined","DeleteOutlined","ProjectContent","Content","content","projects","columns","dataSource","NavLeft","Sider","collapsed","setCollapsed","width","foldBtn","MenuUnfoldOutlined","MenuFoldOutlined","mode","theme","defaultSelectedKeys","style","height","borderRight","PieChartOutlined","DesktopOutlined","ContainerOutlined","padding","Panel","Settings","NewProject","TextArea","project","info","allowClear","showCount","maxLength","protocol","CheckOutlined","btn","danger","App","basename","process","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56e6aa07.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProjectContent_content__2mmJE\",\"title\":\"ProjectContent_title__1Sv2H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"NavLeft_menu__3J1Az\",\"foldBtn\":\"NavLeft_foldBtn__25M1l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3BB1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ring\":\"LoadingSpinner_ring__sYYzk\",\"spinning\":\"LoadingSpinner_spinning__3jqmv\"};","import classes from '../../../styles/UI/Layout/Card.module.css';\r\n\r\nconst Card = (props) => {\r\n  return <div className={classes.card}>{props.children}</div>\r\n}\r\n\r\nexport default Card;","import classes from '../../../styles/UI/Layout/LoadingSpinner.module.css';\r\n\r\nconst LoadingSpinner = () => {\r\n  return (\r\n    <div className={classes.ring}>\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default LoadingSpinner;","import { useState, useRef, Fragment } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport {  Input, Checkbox } from 'antd';\r\nimport { MailOutlined, LockOutlined } from '@ant-design/icons';\r\nimport classes from '../../styles/Login/LoginForm.module.css';\r\n\r\nimport Card from '../UI/Layout/Card';\r\nimport LoadingSpinner from '../UI/Layout/LoadingSpinner';\r\n\r\nconst LoginForm = () => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n\r\n  const history = useHistory();\r\n\r\n  // 顯示/不顯示密碼\r\n  const showPasswordHandler = () => {\r\n    setShowPassword((showPassword) => !showPassword);\r\n  };\r\n\r\n  // 提交表單\r\n  const submitLoginHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const emailInput = emailRef.current.value;\r\n    const passwordInput = passwordRef.current.value;\r\n\r\n    // 驗證使用者登入\r\n\r\n    history.push('/home');\r\n  };\r\n\r\n  const resetFormHandler = () => {\r\n    history.push('/reset');\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <section className={classes.login}>\r\n        <Card>\r\n          <span className={classes.logo} />\r\n          <form className={classes.form} onSubmit={submitLoginHandler}>\r\n            <div className={classes.form__field}>\r\n              <h3>Member Login</h3>\r\n              <Input\r\n                className={classes.email}\r\n                type='text'\r\n                prefix={<MailOutlined />}\r\n                placeholder='Email@domain.com'\r\n                ref={emailRef}\r\n                required\r\n              />\r\n              {showPassword ? (\r\n                <Input\r\n                  type='text'\r\n                  prefix={<LockOutlined />}\r\n                  placeholder='Password'\r\n                  ref={passwordRef}\r\n                  required\r\n                />\r\n              ) : (\r\n                <Input\r\n                  type='password'\r\n                  prefix={<LockOutlined />}\r\n                  placeholder='Password'\r\n                  ref={passwordRef}\r\n                  required\r\n                />\r\n              )}\r\n            </div>\r\n            <div className={classes.form__check}>\r\n              <Checkbox\r\n                type='checkbox'\r\n                id='checkpsd'\r\n                onClick={showPasswordHandler}\r\n              />\r\n              <label htmlFor='checkpsd'>Show Password</label>\r\n              <button type='button' onClick={resetFormHandler}>\r\n                Forget Password?\r\n              </button>\r\n            </div>\r\n            <div className={classes.form__submit}>\r\n              {!isLoading && <button type='submit'>LOGIN</button>}\r\n              {isLoading && <LoadingSpinner />}\r\n            </div>\r\n            <div className={classes.form__help}>\r\n              <button type='button'>Help</button>\r\n            </div>\r\n          </form>\r\n        </Card>\r\n      </section>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import { useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { Input } from 'antd';\r\nimport { MailOutlined } from '@ant-design/icons';\r\nimport classes from '../../styles/Login/ResetForm.module.css';\r\n\r\nimport Card from '../UI/Layout/Card';\r\n\r\nconst ResetForm = (props) => {\r\n  const resetRef = useRef();\r\n  const history = useHistory();\r\n\r\n  const submitResetHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    // Send Reset Request...\r\n    \r\n    history.push('/');\r\n  }\r\n\r\n  return (\r\n    <section className={classes.reset}>\r\n      <Card>\r\n        <form\r\n          className={classes.form}\r\n          onSubmit={submitResetHandler}>\r\n          <div className={classes.form__control}>\r\n            <h3>Reset Password</h3>\r\n            <Input\r\n              className={classes.input}\r\n              type='text'\r\n              prefix={<MailOutlined />}\r\n              placeholder='name@domain.com'\r\n              ref={resetRef}\r\n              required\r\n            />\r\n          </div>\r\n          <div className={classes.form__submit}>\r\n            <button type='submit'>Send</button>\r\n          </div>\r\n        </form>\r\n      </Card>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ResetForm;","import { NavLink } from 'react-router-dom';\r\nimport { Input, Avatar, Layout, Menu, Dropdown, Button } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport classes from '../../../styles/ProjectPanel/Panel/NavHeader.module.css';\r\n\r\nconst navLinks = [\r\n  {\r\n    title: 'Home',\r\n    path: '/home',\r\n  },\r\n  {\r\n    title: 'About',\r\n    path: '/about',\r\n  },\r\n  {\r\n    title: 'Tutorials',\r\n    path: '/tutorials',\r\n  },\r\n  {\r\n    title: 'Help',\r\n    path: '/help',\r\n  },\r\n];\r\n\r\nconst menu = (\r\n  <Menu>\r\n    <Menu.Item>\r\n      <a rel=\"noopener noreferrer\" href=\"#\">\r\n        Setting\r\n      </a>\r\n    </Menu.Item>\r\n    <Menu.Item>\r\n      <a rel=\"noopener noreferrer\" href=\"#\">\r\n        Logout\r\n      </a>\r\n    </Menu.Item>\r\n  </Menu>\r\n)\r\n\r\nconst NavHeader = () => {\r\n  const { Header } = Layout;\r\n  const { Search } = Input;\r\n\r\n  // 搜尋專案的函數\r\n  const searchProjectHandler = (value) => {\r\n    console.log(value);\r\n  };\r\n\r\n  return (\r\n    <Header className={classes.header}>\r\n      <span className={classes.logo}>\r\n        <NavLink to='/home'>AIWinOps</NavLink>\r\n      </span>\r\n      <nav className={classes.nav}>\r\n        <div className={classes.menu}>\r\n          <ul>\r\n            <Search\r\n              placeholder='Search Project'\r\n              onSearch={searchProjectHandler}\r\n              className={classes.search}\r\n            />\r\n            {navLinks.map((link, index) => (\r\n              <li key={index}>\r\n                <NavLink to={link.path} activeClassName={classes.active}>\r\n                  {link.title}\r\n                </NavLink>\r\n              </li>\r\n            ))}\r\n            <span className={classes.avatar}>\r\n              <Dropdown overlay={menu} placement='bottomRight' arrow>\r\n                <Avatar size={50} icon={<UserOutlined />}></Avatar>\r\n              </Dropdown>\r\n            </span>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default NavHeader;\r\n\r\n// const NavHeader = (props) => {\r\n//   // const [menuActive, setMenuActive] = useState(false);\r\n//   const { Search } = Input;\r\n\r\n//   const searchProjectHandler = (value) => {\r\n//     console.log(value);\r\n//   };\r\n//   return (\r\n//     <header className={classes.header}>\r\n//       <span className={classes.logo}>\r\n//         <NavLink to='/home'>AIWin</NavLink>\r\n//       </span>\r\n\r\n// <nav className={classes.nav}>\r\n//   <div className={classes.menu}>\r\n//     <ul>\r\n//       <li>\r\n//         <Search\r\n//           placeholder='Search Project'\r\n//           onSearch={searchProjectHandler}\r\n//         />\r\n//       </li>\r\n//       {navLinks.map((link, index) => (\r\n//         <li key={index}>\r\n//           <NavLink\r\n//             to={link.path}\r\n//             activeClassName={classes.active}>\r\n//             {link.title}\r\n//           </NavLink>\r\n//         </li>\r\n//       ))}\r\n//       <span className={classes.avatar}>\r\n//         <Avatar size={50} icon={<UserOutlined />} />\r\n//       </span>\r\n//     </ul>\r\n//   </div>\r\n// </nav>\r\n//     </header>\r\n//   );\r\n// };\r\n\r\n","import { Layout, Button, Table } from 'antd';\r\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\r\n\r\nimport { useHistory } from 'react-router-dom'; \r\n\r\nimport classes from '../../../styles/ProjectPanel/Panel/ProjectContent.module.css';\r\n\r\nconst column_description = [\r\n  {\r\n    key: 'name', \r\n    dataIndex: 'name',\r\n    title: '專案名稱',\r\n  },\r\n  {\r\n    key: 'status',\r\n    dataIndex: 'status',\r\n    title: '狀態'\r\n  },\r\n  {\r\n    key: 'manager',\r\n    dataIndex: 'manager',\r\n    title: '管理者'\r\n  },\r\n  {\r\n    key: 'build_time',\r\n    dataIndex: 'build_time',\r\n    title: '建立日期'\r\n  },\r\n  {\r\n    key: 'modify_time',\r\n    dataIndex: 'modify_time',\r\n    title: '修改日期'\r\n  },\r\n  {\r\n    key: 'actions',\r\n    dataIndex: 'actions',\r\n    title: '其他操作'\r\n  }\r\n]\r\n\r\nconst DUMMY_DATA = [\r\n  {\r\n    name: 'Project1',\r\n    status: 'In Progress',\r\n    manager: 'Chris',\r\n    build_time: '2021-06-03',\r\n    modify_time: '2021-06-04',\r\n    actions: (\r\n      <div>\r\n        <EditOutlined />\r\n        <DeleteOutlined />\r\n      </div>\r\n    ),\r\n  },\r\n  {\r\n    name: 'Project2',\r\n    status: 'In Progress',\r\n    manager: 'Lyu',\r\n    build_time: '2021-06-04',\r\n    modify_time: '2021-06-05',\r\n    actions: (\r\n      <div>\r\n        <EditOutlined />\r\n        <DeleteOutlined />\r\n      </div>\r\n    ),\r\n  },\r\n  {\r\n    name: 'Project3',\r\n    status: 'Completed',\r\n    manager: 'Center',\r\n    build_time: '2021-06-05',\r\n    modify_time: '2021-06-06',\r\n    actions: (\r\n      <div>\r\n        <EditOutlined />\r\n        <DeleteOutlined />\r\n      </div>\r\n    ),\r\n  },\r\n];\r\n\r\nconst ProjectContent = () => {\r\n  const { Content } = Layout;\r\n  const history = useHistory();\r\n  \r\n  // 從後端接收專案數量後再渲染出專案資訊\r\n  const projectLeg = 1;\r\n\r\n  const newProjectHandler = () => {\r\n    history.push('/new-project')\r\n  }\r\n\r\n  return (\r\n    <Content className={classes.content}>\r\n      <div className={classes.title}>\r\n        <h3>Projects</h3>\r\n        <Button type='primary' onClick={newProjectHandler}>\r\n          +新專案\r\n        </Button>\r\n      </div>\r\n      <div className={classes.projects}>\r\n        <div>\r\n          {projectLeg && (\r\n            <Table columns={column_description} dataSource={DUMMY_DATA} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default ProjectContent;\r\n","import { useState } from 'react';\r\nimport { Layout, Menu, Button } from 'antd';\r\nimport {\r\n  PieChartOutlined,\r\n  DesktopOutlined,\r\n  ContainerOutlined,\r\n  UserOutlined,\r\n  MenuFoldOutlined,\r\n  MenuUnfoldOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport classes from '../../../styles/ProjectPanel/Panel/NavLeft.module.css';\r\n\r\nimport ProjectContent from './ProjectContent';\r\n\r\nconst NavLeft = () => {\r\n  const { Sider } = Layout;\r\n\r\n  const [collapsed, setCollapsed] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    setCollapsed((collapsed) => !collapsed);\r\n  };\r\n\r\n  return (\r\n    <Layout className={classes.menu}>\r\n      <Sider width={200} collapsed={collapsed}>\r\n        <Button type='primary' onClick={toggleMenu} className={classes.foldBtn}>\r\n          {collapsed ? <MenuUnfoldOutlined /> : <MenuFoldOutlined />}\r\n        </Button>\r\n        <Menu\r\n          mode='inline'\r\n          theme='white'\r\n          defaultSelectedKeys={['1']}\r\n          style={{ height: '100%', borderRight: 0 }}>\r\n          <Menu.Item key='1' icon={<PieChartOutlined />}>\r\n            Project\r\n          </Menu.Item>\r\n          <Menu.Item key='2' icon={<DesktopOutlined />}>\r\n            Dashboard\r\n          </Menu.Item>\r\n          <Menu.Item key='3' icon={<ContainerOutlined />}>\r\n            Quota\r\n          </Menu.Item>\r\n          <Menu.Item key='4' icon={<UserOutlined />}>\r\n            Members\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Sider>\r\n      <Layout style={{ padding: '0 24px 24px'}}>\r\n        <ProjectContent />\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default NavLeft;\r\n\r\n\r\n  /* <Menu\r\n        \r\n        defaultSelectedKeys={['1']}\r\n        mode='inline'\r\n        theme='white'\r\n        inlineCollapsed={false}>\r\n        \r\n        {project.isSelected  && <Menu.Item key='5'>Report</Menu.Item>}\r\n      </Menu>\r\n    </div> */\r\n\r\n","import { Layout } from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport NavHeader from './NavHeader';\r\nimport NavLeft from './NavLeft';\r\n\r\nconst Panel = () => {\r\n  return (\r\n    <Layout>\r\n      <NavHeader />\r\n      <NavLeft />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Panel;","import { Fragment } from 'react';\r\nimport NavHeader from '../Panel/NavHeader';\r\n\r\nconst Settings= () => {\r\n  return (\r\n    <Fragment>\r\n      <NavHeader />\r\n      \r\n    </Fragment>\r\n  )\r\n};\r\n\r\nexport default Settings;","import { Button, Input } from 'antd';\r\nimport { CheckOutlined } from '@ant-design/icons';\r\nimport classes from '../../../styles/ProjectPanel/Panel/NewProject.module.css';\r\n\r\nimport NavHeader from './NavHeader';\r\n\r\nconst NewProject = () => {\r\n  const { TextArea } = Input;\r\n\r\n  return (\r\n    <div>\r\n      <NavHeader />\r\n      <div className={classes.project}>\r\n        <h2>新專案</h2>\r\n        <div className={classes.info}>\r\n          <h4>專案名稱</h4>\r\n          <Input placeholder='Project Name' allowClear />\r\n          <h4>專案顏色</h4>\r\n          <h4>專案描述(Optional)</h4>\r\n          <TextArea showCount maxLength={300} allowClear />\r\n        </div>\r\n        <div className={classes.protocol}>\r\n          <h1>資料協議</h1>\r\n          <section>\r\n            請您在開始使用AIWin系列產品(以下簡稱\"本產品\")前，務必仔細閱讀並同意《用戶協議》(以下簡稱\"本協議\")\r\n            中規定的所有權利和限制。\r\n          </section>\r\n          {/* 補上接收Accept確定的函數... */}\r\n          <Button type='defalt' icon={<CheckOutlined />}>\r\n            Accept\r\n          </Button>\r\n        </div>\r\n        <div className={classes.btn}>\r\n          <Button type='primary'>建立專案</Button>\r\n          <Button type='default' danger>\r\n            取消\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewProject;\r\n","import { Route, Switch, BrowserRouter } from 'react-router-dom';\n\nimport './App.css';\n\nimport LoginForm from './components/Login/LoginForm';\nimport ResetForm from './components/Login/ResetForm';\nimport Panel from './components/ProjectPanel/Panel/Panel';\nimport Settings from './components/ProjectPanel/Profile/Settings';\nimport NewProject from './components/ProjectPanel/Panel/NewProject';\n\n\nfunction App() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path='/' exact>\n          <LoginForm />\n        </Route>\n        <Route path='/reset'>\n          <ResetForm />\n        </Route>\n        <Route path='/home'>\n          <Panel />\n        </Route>\n        <Route path='/profile'>\n          <Settings />\n        </Route>\n        <Route path='/about'>\n          <Panel />\n        </Route>\n        <Route path='/tutorials'>\n          <Panel />\n        </Route>\n        <Route path='/help'>\n          <Panel />\n        </Route>\n        <Route path='/new-project'>\n          <NewProject />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"LoginForm_login__2ISZM\",\"logo\":\"LoginForm_logo__1Go5w\",\"form\":\"LoginForm_form__3RZXX\",\"email\":\"LoginForm_email__2c9Rq\",\"form__field\":\"LoginForm_form__field__3YWXX\",\"form__check\":\"LoginForm_form__check__1Zne_\",\"form__help\":\"LoginForm_form__help__3Y90-\",\"form__submit\":\"LoginForm_form__submit__39w3X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"NavHeader_header__1aIz4\",\"logo\":\"NavHeader_logo__3TYaJ\",\"search\":\"NavHeader_search__118nY\",\"nav\":\"NavHeader_nav__2kxYu\",\"active\":\"NavHeader_active__1kIj9\",\"avatar\":\"NavHeader_avatar__1qjrH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reset\":\"ResetForm_reset__8lEB-\",\"form\":\"ResetForm_form__8S0V3\",\"form__submit\":\"ResetForm_form__submit__2v6g6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"project\":\"NewProject_project__Foiv1\",\"info\":\"NewProject_info__2gItq\",\"protocol\":\"NewProject_protocol__1qMo7\",\"btn\":\"NewProject_btn__3c3ri\"};"],"sourceRoot":""}
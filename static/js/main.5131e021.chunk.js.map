{"version":3,"sources":["styles/Panel/Projects/ProjectContent.module.css","styles/UI/Layout/Header.module.css","styles/Panel/Projects/NewProject.module.css","styles/Login/LoginForm.module.css","styles/Panel/Member/Settings.module.css","styles/Login/ResetForm.module.css","styles/UI/Modal/Error.module.css","styles/UI/Layout/Card.module.css","styles/UI/Modal/Backdrop.module.css","styles/UI/Modal/Message.module.css","styles/UI/Layout/Sidebar.module.css","styles/Panel/Member/NewMember.module.css","components/UI/Layout/Card.js","components/UI/Modal/Backdrop.js","components/UI/Modal/Error.js","store/auth-context.js","components/Login/LoginForm.js","components/UI/Modal/Message.js","components/Login/ResetForm.js","components/UI/Layout/Header.js","components/Panel/Projects/NewProject.js","components/UI/Layout/Sidebar.js","components/UI/Layout/PanelLayout.js","components/Panel/Projects/ProjectList.js","components/Panel/Projects/ProjectContent.js","components/Panel/Projects/ProjectPanel.js","pages/ProjectPage.js","components/Panel/Members/MemberList.js","components/Panel/Members/MemberContent.js","components/Panel/Members/MemberPanel.js","components/Panel/Members/NewMember.js","components/Panel/Members/Settings.js","pages/MemberPage.js","components/Panel/Quota/QuotaList.js","components/Panel/Quota/QuotaContent.js","components/Panel/Quota/QuotaPanel.js","components/Panel/Quota/QuotaUpgrade.js","pages/QuotaPage.js","components/Panel/Dashboard/ModelPie.js","components/Panel/Dashboard/DashboardGraph.js","components/Panel/Dashboard/DashboardContent.js","components/Panel/Dashboard/DashboardPanel.js","pages/DashboardPage.js","components/Panel/Report/ReportGraph.js","components/Panel/Report/ReportContent.js","components/Panel/Report/ReportPanel.js","pages/ReportPage.js","pages/AboutPage.js","pages/TutorialsPage.js","pages/HelpPage.js","pages/LoginPage.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Card","props","className","classes","card","children","Backdrop","backdrop","onClick","onCloseModal","Error","Fragment","main","btn","type","AuthContext","React","createContext","token","isLoggedIn","userId","login","logout","AuthContextProvider","tokenData","localStorage","getItem","useState","setToken","setUserid","contextValue","setItem","removeItem","userInfo","email","Provider","value","SIGN_IN_API","LoginForm","isLoginFail","setIsLoginFail","Form","useForm","form","authCtx","useContext","history","useHistory","logo","name","onFinish","values","fetch","method","body","JSON","stringify","password","returnSecureToken","headers","then","response","ok","json","data","idToken","replace","catch","scrollToFirstError","Item","rules","message","required","prefix","MailOutlined","placeholder","Password","autoComplete","LockOutlined","submit","htmlType","help","href","target","rel","to","Message","RESET_API","ResetForm","isReset","setIsReset","isExist","setIsExist","reset","onValuesChange","requestType","setTimeout","push","error","validator","_","a","send","style","color","ArrowLeftOutlined","navLinks","title","path","Header","uid","useParams","Layout","Search","Input","menu","theme","e","key","icon","SettingOutlined","LogoutOutlined","header","nav","onSearch","console","log","search","activeClassName","active","map","link","index","avatar","overlay","placement","size","UserOutlined","NewProject","TextArea","projectColor","setProjectColor","project","build_time","Date","toISOString","toString","project_name","manager","project_manager","project_color","hex","description","project_description","editable","info","allowClear","width","onChangeComplete","rows","maxLength","showCount","marginBottom","valuePropName","Promise","resolve","reject","protocol","fontWeight","backgroundColor","borderColor","danger","marginLeft","Sidebar","Sider","collapsed","setCollapsed","foldBtn","MenuUnfoldOutlined","MenuFoldOutlined","mode","defaultSelectedKeys","height","borderRight","PieChartOutlined","DesktopOutlined","LineChartOutlined","ContainerOutlined","PanelLayout","Footer","position","top","textAlign","padding","zIndex","TABLE_COLUMN","dataIndex","render","EditOutlined","fontSize","DeleteOutlined","ProjectList","projectData","setProjectData","fetchProjectData","useCallback","storeData","status","modify_time","useEffect","scroll","x","y","pagination","columns","dataSource","ProjectContent","Content","url","useRouteMatch","margin","Panel","ProjectPage","exact","ProjectPanel","MemberList","members","setMembers","fetchMemberData","memberData","id","username","level","defaultChecked","onChange","checked","MemberContent","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","NewMember","Option","Select","agreement","label","hasFeedback","dependencies","getFieldValue","defaultValue","UPDATE_API","Settings","settings","displayName","photoUrl","getValueFromEvent","fileList","action","listType","UploadOutlined","update","MemberPage","MemberPanel","QuotaList","overflowY","marginTop","layout","bordered","text","percent","QuotaContent","QuotaPanel","QuotaUpgrade","QuotaPage","ModelPie","config","appendPadding","angleField","colorField","radius","innerRadius","content","interactions","statistic","whiteSpace","overflow","textOverflow","formatter","DashboardGraph","DashboardContent","DashboardPage","DashboardPanel","md","ReportGraph","model","start","end","take","toFixed","column","ReportContent","options","border","ReportPanel","ReportPage","AboutPage","TutorialsPage","HelpPage","LoginPage","basename","process","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5131e021.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ProjectContent_title__2Gz6P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__5yFbd\",\"logo\":\"Header_logo__2c0cK\",\"search\":\"Header_search__1_QZM\",\"nav\":\"Header_nav__2qdsB\",\"active\":\"Header_active__1GP9E\",\"avatar\":\"Header_avatar__12YV_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"project\":\"NewProject_project__2EKR6\",\"info\":\"NewProject_info__1s6vk\",\"protocol\":\"NewProject_protocol__m2Teu\",\"btn\":\"NewProject_btn__32Iey\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"LoginForm_login__2ISZM\",\"logo\":\"LoginForm_logo__1Go5w\",\"form\":\"LoginForm_form__3RZXX\",\"submit\":\"LoginForm_submit__Lzs9_\",\"help\":\"LoginForm_help__450w0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__1RYqX\",\"avatar\":\"Settings_avatar__1isyR\",\"main\":\"Settings_main__184S5\",\"password\":\"Settings_password__17Abx\",\"update\":\"Settings_update__1Cbw-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reset\":\"ResetForm_reset__8lEB-\",\"form\":\"ResetForm_form__8S0V3\",\"send\":\"ResetForm_send__1AgrR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Error_main__izgaW\",\"btn\":\"Error_btn__1D755\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3BB1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Backdrop_backdrop__ls6ah\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2rg14\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"foldBtn\":\"Sidebar_foldBtn__CB8qk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewMember_form__3mmfV\",\"control\":\"NewMember_control__2lYui\",\"action\":\"NewMember_action__1XRnq\"};","import classes from '../../../styles/UI/Layout/Card.module.css';\r\n\r\nconst Card = (props) => {\r\n  return <div className={classes.card}>{props.children}</div>\r\n}\r\n\r\nexport default Card;","import classes from '../../../styles/UI/Modal/Backdrop.module.css';\r\n\r\nconst Backdrop = (props) => {\r\n  return <div className={classes.backdrop} onClick={props.onCloseModal}/>\r\n};\r\n\r\nexport default Backdrop;","import React from \"react\";\r\n\r\nimport classes from '../../../styles/UI/Modal/Error.module.css';\r\nimport Backdrop from './Backdrop';\r\nconst Error = (props) => {\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Backdrop onCloseModal={props.onCloseModal} />\r\n      <div className={classes.main}>\r\n        <h2>An Error Occurred</h2>\r\n        <p>{props.children}</p>\r\n        <div className={classes.btn}>\r\n          <button type='button' onClick={props.onCloseModal}>\r\n            Okay\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Error;","import React, { useState } from 'react';\r\n\r\nconst AuthContext = React.createContext({\r\n  token: null,\r\n  isLoggedIn: false,\r\n  userId: '',\r\n  login: (token) => {},\r\n  logout: () => {},\r\n});\r\n\r\nconst retrieveToken = () => {\r\n  const storedToken = localStorage.getItem('token');\r\n\r\n  return {\r\n    token: storedToken,\r\n  };\r\n};\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const tokenData = retrieveToken();\r\n  const [token, setToken] = useState(tokenData);\r\n  const [userid, setUserid] = useState('');\r\n\r\n  // !!物件永遠回傳true\r\n  const userIsLoggedIn = !!token;\r\n\r\n  const loginHandler = (token) => {\r\n    setToken(token);\r\n    localStorage.setItem('token', token);\r\n  };\r\n\r\n  const logoutHandler = () => {\r\n    setToken(null);\r\n    localStorage.removeItem('token');\r\n  };\r\n\r\n  const userInfoHandler = (email) => {\r\n    setUserid(email);\r\n  };\r\n\r\n  const contextValue = {\r\n    token: token,\r\n    isLoggedIn: userIsLoggedIn,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n    userInfo: userInfoHandler,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n","import { useState, useContext } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport classes from '../../styles/Login/LoginForm.module.css';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { MailOutlined, LockOutlined } from '@ant-design/icons';\r\n\r\nimport Card from '../UI/Layout/Card';\r\nimport Error from '../UI/Modal/Error';\r\n\r\nimport AuthContext from '../../store/auth-context';\r\n\r\n// 目前使用 Firebase Authentication模擬登入\r\nconst FIREBASE_KEY = 'AIzaSyAaf6guV8zB9_4R5xwuDDiQM0zaNzQWuWA';\r\nconst SIGN_IN_API = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${FIREBASE_KEY}`;\r\n\r\nconst LoginForm = (props) => {\r\n  const [isLoginFail, setIsLoginFail] = useState(false);\r\n  const [form] = Form.useForm();\r\n\r\n  const authCtx = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  // TODO: 驗證USER登入 -> POST/auth/login\r\n  const loginAuthHandler = (values) => {\r\n    fetch(SIGN_IN_API, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        email: values.email,\r\n        password: values.password,\r\n        returnSecureToken: true,\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          setIsLoginFail(true);\r\n        }\r\n      })\r\n      .then((data) => {\r\n        authCtx.login(data.idToken);\r\n        authCtx.userInfo(data.email);\r\n        history.replace(`/project/${data.email}`);\r\n      })\r\n      .catch(() => {\r\n        setIsLoginFail(true);\r\n      });\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsLoginFail(false);\r\n  };\r\n\r\n  return (\r\n    <section className={classes.login}>\r\n      <Card>\r\n        <span className={classes.logo} />\r\n        <section className={classes.form}>\r\n          <h2>Member Login</h2>\r\n          <Form\r\n            form={form}\r\n            name='login'\r\n            onFinish={loginAuthHandler}\r\n            scrollToFirstError>\r\n            <Form.Item\r\n              name='email'\r\n              rules={[\r\n                {\r\n                  type: 'email',\r\n                  message: 'The email format is invalid!',\r\n                },\r\n                {\r\n                  required: true,\r\n                  message: 'The email is empty!',\r\n                },\r\n              ]}>\r\n              <Input prefix={<MailOutlined />} placeholder='Email@domain.com' />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name='password'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'The password is empty!',\r\n                },\r\n              ]}>\r\n              <Input.Password\r\n                placeholder='Password'\r\n                autoComplete='on'\r\n                prefix={<LockOutlined />}\r\n              />\r\n            </Form.Item>\r\n            <div className={classes.submit}>\r\n              <Button type='primary' htmlType='submit'>\r\n                LOGIN\r\n              </Button>\r\n            </div>\r\n            <div className={classes.help}>\r\n              <a\r\n                href='https://www.zerodimension.com.tw/default.aspx#contact'\r\n                target='_blank'\r\n                rel='noreferrer'>\r\n                <Button type='default'>Help</Button>\r\n              </a>\r\n              <Button type='default'>\r\n                <Link to='/reset'>Forget Password?</Link>\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n          {isLoginFail && (\r\n            <Error onCloseModal={closeModal}>\r\n              The email or password is invalid{' '}\r\n            </Error>\r\n          )}\r\n        </section>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import classes from '../../../styles/UI/Modal/Message.module.css';\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={classes.message}>\r\n      <h3>Message</h3>\r\n      <p>{props.children}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;","import { useState } from 'react';\r\nimport { useHistory, Link } from 'react-router-dom';\r\n\r\nimport { Form, Input, Button } from 'antd';\r\nimport { MailOutlined, ArrowLeftOutlined} from '@ant-design/icons';\r\nimport classes from '../../styles/Login/ResetForm.module.css';\r\n\r\nimport Card from '../UI/Layout/Card';\r\nimport Message from '../UI/Modal/Message';\r\n\r\n// 目前使用 Firebase Authentication模擬登出\r\nconst FIREBASE_KEY = 'AIzaSyAaf6guV8zB9_4R5xwuDDiQM0zaNzQWuWA';\r\nconst RESET_API = `https://identitytoolkit.googleapis.com/v1/accounts:sendOobCode?key=${FIREBASE_KEY}`;\r\n\r\nconst ResetForm = (props) => {\r\n  const [form] = Form.useForm();\r\n  const history = useHistory();\r\n\r\n  const [isReset, setIsReset] = useState(false);\r\n  const [isExist, setIsExist] = useState(true);\r\n\r\n  // TODO: 驗證USER登入 -> POST/auth/reset -> 發送重設密碼信件給已註冊的使用者\r\n  const resetPasswordHandler = (values) => {\r\n    fetch(RESET_API, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        email: values.email,\r\n        requestType: 'PASSWORD_RESET',\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          setIsReset(true);\r\n          setTimeout(() => {   \r\n            history.push('/');\r\n          }, 2000);\r\n        } else {\r\n          setIsExist(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n  };\r\n\r\n  const emailEnter = () => {\r\n    setIsExist(true);\r\n  };\r\n\r\n  return (\r\n    <section className={classes.reset}>\r\n      {!isExist && <Message>Email does not exist!</Message>}\r\n      {isReset && <Message>Reset email is sent!</Message>}\r\n      <Card>\r\n        <section className={classes.form}>\r\n          <Form\r\n            form={form}\r\n            onValuesChange={emailEnter}\r\n            onFinish={resetPasswordHandler}>\r\n            <h3>Reset Password</h3>\r\n            <Form.Item\r\n              name='email'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please enter your email to reset!',\r\n                },\r\n                {\r\n                  type: 'email',\r\n                  message: 'The email format is invalid!',\r\n                },\r\n                {\r\n                  validator: async (_, value) => {\r\n                    if (!isExist) {\r\n                      throw new Error('Email does not exist!');\r\n                    }\r\n                  },\r\n                },\r\n              ]}>\r\n              <Input prefix={<MailOutlined />} placeholder='name@domain.com' />\r\n            </Form.Item>\r\n            <div className={classes.send}>\r\n              <Form.Item>\r\n                <Link to='/'>\r\n                  <Button type='default' style={{ color: '#000' }}>\r\n                    <ArrowLeftOutlined />\r\n                    LOGIN\r\n                  </Button>\r\n                </Link>\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Button type='primary' htmlType='submit'>\r\n                  Send\r\n                </Button>\r\n              </Form.Item>\r\n            </div>\r\n          </Form>\r\n        </section>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ResetForm;\r\n","import { useContext } from 'react';\r\nimport { NavLink, useHistory, useParams } from 'react-router-dom';\r\n\r\nimport { Input, Avatar, Layout, Menu, Dropdown } from 'antd';\r\nimport {\r\n  UserOutlined,\r\n  SettingOutlined,\r\n  LogoutOutlined,\r\n} from '@ant-design/icons';\r\nimport classes from '../../../styles/UI/Layout/Header.module.css';\r\n\r\nimport AuthContext from '../../../store/auth-context';\r\n\r\nconst navLinks = [\r\n  {\r\n    title: 'About',\r\n    path: '/about',\r\n  },\r\n  {\r\n    title: 'Tutorials',\r\n    path: '/tutorials',\r\n  },\r\n  {\r\n    title: 'Help',\r\n    path: '/help',\r\n  },\r\n];\r\n\r\nconst Header = () => {\r\n  const { uid } = useParams();\r\n  const { Header } = Layout;\r\n  const { Search } = Input;\r\n  const history = useHistory();\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  // 搜尋專案 -> 可能透過Antd Table Column Filter\r\n  const searchProjectHandler = (value) => {\r\n    console.log(value);\r\n  };\r\n\r\n  const userMenu = (e) => {\r\n    if (e.key === 'settings') {\r\n      history.push(`/members/${uid}/settings`);\r\n    }\r\n    if (e.key === 'logout') {\r\n      authCtx.logout();\r\n      history.replace('/');\r\n    }\r\n  };\r\n\r\n  const menu = (\r\n    <Menu theme='dark' onClick={userMenu}>\r\n      <Menu.Item key='settings' icon={<SettingOutlined />}>\r\n        {/* 導向個人資訊頁面 -> /uid/settings */}\r\n        Setting\r\n      </Menu.Item>\r\n      <Menu.Item key='logout' icon={<LogoutOutlined />}>\r\n        Logout\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Header className={classes.header}>\r\n      <span className={classes.logo}>\r\n        <NavLink to={`/project/${uid}`}>AIWinOps</NavLink>\r\n      </span>\r\n      <nav className={classes.nav}>\r\n        <div className={classes.menu}>\r\n          <ul>\r\n            <Search\r\n              placeholder='Search Project'\r\n              onSearch={searchProjectHandler}\r\n              className={classes.search}\r\n            />\r\n            <li>\r\n              <NavLink to={`/project/${uid}`} activeClassName={classes.active}>\r\n                Home\r\n              </NavLink>\r\n            </li>\r\n            {navLinks.map((link, index) => (\r\n              <li key={index}>\r\n                <NavLink to={link.path} activeClassName={classes.active}>\r\n                  {link.title}\r\n                </NavLink>\r\n              </li>\r\n            ))}\r\n            <span className={classes.avatar}>\r\n              <Dropdown overlay={menu} placement='bottomRight'>\r\n                <Avatar size={50} icon={<UserOutlined />}></Avatar>\r\n              </Dropdown>\r\n            </span>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport { CirclePicker } from 'react-color';\r\nimport classes from '../../../styles/Panel/Projects/NewProject.module.css';\r\n\r\nimport NavHeader from '../../UI/Layout/Header';\r\n\r\nconst PROJECT_URL = 'https://aiwinops-default-rtdb.firebaseio.com/projects.json';\r\n\r\nconst NewProject = () => {\r\n  const { TextArea } = Input;\r\n  const [form] = Form.useForm();\r\n  const history = useHistory();\r\n\r\n  const [projectColor, setProjectColor] = useState('#fff');\r\n\r\n  const getColor = (color) => {\r\n    setProjectColor(color.hex);\r\n  };\r\n\r\n  // 將新專案新增至資料庫 /PUSH/New-Project\r\n  const registerNewProject = (values) => {\r\n    fetch(PROJECT_URL, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        build_time: new Date().toISOString().toString(),\r\n        name: values.project_name,\r\n        manager: values.project_manager,\r\n        color: values.project_color.hex,\r\n        description: values.project_description,\r\n        editable:　true,\r\n      }),\r\n      headers: { 'Content-Type': 'application/json'}\r\n    }).then(response => {\r\n      return response.json();\r\n    }).catch((error) => {\r\n      throw new Error(error);\r\n    });\r\n    history.push('/home');\r\n  };\r\n\r\n  const cancleProjectHandler = () => {\r\n    history.push('/home');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavHeader />\r\n      <section className={classes.project}>\r\n        <h2>新專案</h2>\r\n        <Form\r\n          form={form}\r\n          name='project'\r\n          onFinish={registerNewProject}\r\n          scrollToFirstError>\r\n          <div className={classes.info}>\r\n            <h4>專案名稱</h4>\r\n            <Form.Item\r\n              name='project_name'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Project name should not be empty!',\r\n                },\r\n              ]}>\r\n              <Input placeholder='Project Name' allowClear />\r\n            </Form.Item>\r\n            <h4>管理者</h4>\r\n            <Form.Item\r\n              name='project_manager'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Project manager should be provided!',\r\n                },\r\n              ]}>\r\n              <Input placeholder='Project Manager' allowClear />\r\n            </Form.Item>\r\n            <h4>專案顏色</h4>\r\n            <Form.Item\r\n              name='project_color'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Choose color for new project!',\r\n                },\r\n              ]}>\r\n              <CirclePicker\r\n                width={300}\r\n                color={projectColor}\r\n                onChangeComplete={getColor}\r\n              />\r\n            </Form.Item>\r\n            <h4>專案描述(Optional)</h4>\r\n            <Form.Item name='project_description'>\r\n              <TextArea\r\n                placeholder='Project Description'\r\n                rows={5}\r\n                maxLength={300}\r\n                showCount\r\n                allowClear\r\n                style={{ marginBottom: '2.5rem' }}\r\n              />\r\n            </Form.Item>\r\n          </div>\r\n          <Form.Item\r\n            name='agreement'\r\n            valuePropName='checked'\r\n            rules={[\r\n              {\r\n                validator: (_, value) =>\r\n                  value\r\n                    ? Promise.resolve()\r\n                    : Promise.reject(new Error('使用服務前請先閱讀說明')),\r\n              },\r\n            ]}>\r\n            <div className={classes.protocol}>\r\n              <h1>資料協議</h1>\r\n              <section>\r\n                請您在開始使用AIWin系列產品(以下簡稱\"本產品\")前，務必仔細閱讀並同意《用戶協議》(以下簡稱\"本協議\")\r\n                中規定的所有權利和限制。\r\n              </section>\r\n              <Checkbox>Accept</Checkbox>\r\n            </div>\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <div className={classes.btn}>\r\n              <Button\r\n                type='primary'\r\n                htmlType='submit'\r\n                style={{\r\n                  fontWeight: '600',\r\n                  backgroundColor: '#096dd9',\r\n                  borderColor: '#096dd9',\r\n                }}>\r\n                建立專案\r\n              </Button>\r\n              <Button\r\n                type='default'\r\n                danger\r\n                onClick={cancleProjectHandler}\r\n                style={{ marginLeft: '1rem' }}>\r\n                取消\r\n              </Button>\r\n            </div>\r\n          </Form.Item>\r\n        </Form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewProject;\r\n","import { useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { Layout, Menu, Button } from 'antd';\r\nimport {\r\n  PieChartOutlined,\r\n  DesktopOutlined,\r\n  ContainerOutlined,\r\n  LineChartOutlined,\r\n  UserOutlined,\r\n  MenuFoldOutlined,\r\n  MenuUnfoldOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport classes from '../../../styles/UI/Layout/Sidebar.module.css';\r\n\r\n\r\nconst Sidebar = () => {\r\n  const { Sider } = Layout;\r\n  const { uid } = useParams();\r\n  const history = useHistory();\r\n\r\n  const [collapsed, setCollapsed] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    setCollapsed((collapsed) => !collapsed);\r\n  };\r\n\r\n  const panelInfoRouter = (e) => {\r\n    history.push(`/${e.key}/${uid}`);\r\n  };\r\n\r\n  return (\r\n    <Sider width={200} collapsed={collapsed}>\r\n      <Button type='primary' onClick={toggleMenu} className={classes.foldBtn}>\r\n        {collapsed ? <MenuUnfoldOutlined /> : <MenuFoldOutlined />}\r\n      </Button>\r\n      <Menu\r\n        mode='inline'\r\n        theme='dark'\r\n        defaultSelectedKeys={['project']}\r\n        style={{ height: '100%', borderRight: 0 }}\r\n        onClick={panelInfoRouter}>\r\n        <Menu.Item key='project' icon={<PieChartOutlined />}>\r\n          Project\r\n        </Menu.Item>\r\n        <Menu.Item key='dashboard' icon={<DesktopOutlined />}>\r\n          Dashboard\r\n        </Menu.Item>\r\n        <Menu.Item key='report' icon={<LineChartOutlined />}>\r\n          Report\r\n        </Menu.Item>\r\n        <Menu.Item key='quota' icon={<ContainerOutlined />}>\r\n          Quota\r\n        </Menu.Item>\r\n        <Menu.Item key='members' icon={<UserOutlined />}>\r\n          Members\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Sider>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import { Layout } from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport Header from './Header';\r\nimport Sidebar from './Sidebar';\r\n\r\nconst PanelLayout = (props) => {\r\n  const { Footer } = Layout;\r\n\r\n  return (\r\n    <Layout>\r\n      <Header />\r\n      <Layout\r\n        style={{\r\n          position: 'fixed',\r\n          width: '100%',\r\n          height: '90%',\r\n          top: '5rem',\r\n        }}>\r\n        <Sidebar />\r\n        <Layout style={{ backgroundColor: '#fff' }}>  \r\n          {props.children}\r\n          <Footer style={{  textAlign: 'center', padding: '10px', zIndex: '20' }}>Copyright @ 2021 AIWinOps. All Rights Reserved</Footer>\r\n        </Layout>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default PanelLayout;\r\n","import { useState, useEffect, useCallback } from 'react';\r\nimport { Table, Space } from 'antd';\r\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\r\n\r\nconst PROJECT_URL =\r\n  'https://aiwinops-default-rtdb.firebaseio.com/projects.json';\r\n\r\nconst TABLE_COLUMN = [\r\n  {\r\n    title: '專案名稱',\r\n    key: 'name',\r\n    dataIndex: 'name',\r\n  },\r\n  {\r\n    title: '狀態',\r\n    key: 'status',\r\n    dataIndex: 'status',\r\n  },\r\n  {\r\n    title: '管理者',\r\n    key: 'manager',\r\n    dataIndex: 'manager',\r\n  },\r\n  {\r\n    title: '建立日期',\r\n    key: 'build_time',\r\n    dataIndex: 'build_time',\r\n  },\r\n  {\r\n    title: '修改日期',\r\n    key: 'modify_time',\r\n    dataIndex: 'modify_time',\r\n  },\r\n  {\r\n    title: '其他操作',\r\n    key: 'editable',\r\n    dataIndex: 'editable',\r\n    render: (editable) => {\r\n      return (\r\n        // 連結Icon到各自專案的編輯畫面\r\n        <Space>\r\n          {editable && <EditOutlined style={{ fontSize: '150%' }} />}{' '}\r\n          <DeleteOutlined style={{ fontSize: '150%' }} />\r\n        </Space>\r\n      );\r\n    },\r\n  },\r\n];\r\n\r\nconst ProjectList = (props) => {\r\n  const [projectData, setProjectData] = useState();\r\n\r\n  // 抓取使用者專案的資料 -> GET/ProjectData\r\n  const fetchProjectData = useCallback(() => {\r\n    fetch(PROJECT_URL)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        const storeData = [];\r\n        for (const key in data) {\r\n          storeData.push({\r\n            key: key,\r\n            name: data[key].name,\r\n            status: data[key].status,\r\n            manager: data[key].manager,\r\n            build_time: data[key].build_time,\r\n            modify_time: data[key].modify_time,\r\n            editable: data[key].editable,\r\n          });\r\n        }\r\n        setProjectData(storeData);\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchProjectData();\r\n  }, [fetchProjectData]);\r\n\r\n  return (\r\n    <div>\r\n      <Table\r\n        scroll={{ x: '1000', y: '500' }}\r\n        pagination={false}\r\n        columns={TABLE_COLUMN}\r\n        dataSource={projectData}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import {\r\n  useRouteMatch,\r\n  useHistory,\r\n} from 'react-router-dom';\r\n\r\nimport classes from '../../../styles/Panel/Projects/ProjectContent.module.css';\r\nimport { Layout, Button } from 'antd';\r\n\r\nimport ProjectList from './ProjectList';\r\nimport { Fragment } from 'react';\r\n\r\nconst ProjectContent = () => {\r\n  const { Content } = Layout;\r\n\r\n  const { url } = useRouteMatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const newProjectHandler = () => {\r\n    console.log(url);\r\n    history.push(`${url}/new-project`);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Content style={{ margin: '0 30px' }}>\r\n        <div className={classes.title}>\r\n          <h3>Projects</h3>\r\n          <Button\r\n            type='primary'\r\n            onClick={newProjectHandler}\r\n            style={{ fontWeight: '700' }}>\r\n            +新專案\r\n          </Button>\r\n        </div>\r\n        <ProjectList />\r\n      </Content>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProjectContent;\r\n","import PanelLayout from '../../UI/Layout/PanelLayout';\r\nimport ProjectContent from './ProjectContent';\r\n\r\nconst Panel = () => {\r\n  return (\r\n    <PanelLayout>\r\n      <ProjectContent />\r\n    </PanelLayout>\r\n  );\r\n}\r\n\r\nexport default Panel;","import { Route, Switch, useRouteMatch } from 'react-router-dom';\r\nimport NewProject from '../components/Panel/Projects/NewProject';\r\nimport ProjectPanel from '../components/Panel/Projects/ProjectPanel';\r\n\r\nconst ProjectPage = () => {\r\n  const { path } = useRouteMatch();  \r\n  return (\r\n    <Switch>\r\n      <Route path={`${path}`} exact>\r\n        <ProjectPanel />\r\n      </Route>\r\n      <Route path={`${path}/new-project`}>\r\n        <NewProject />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default ProjectPage;\r\n","import { useState, useEffect, useCallback } from 'react';\r\n\r\nimport { Table, Switch, Space } from 'antd';\r\n\r\nimport classes from '../../../styles/Panel/Member/MemberList.module.css';\r\n\r\n// 目前使用 Firebase Realtime Database 模擬會員資料\r\nconst MEMBER_URL = 'https://aiwinops-default-rtdb.firebaseio.com/members.json';\r\n\r\n// Firebase Authentication模擬GET會員API串接\r\n// const FIREBASE_KEY = 'AIzaSyAaf6guV8zB9_4R5xwuDDiQM0zaNzQWuWA';\r\n// const MEMBER_LIST_API = `https://identitytoolkit.googleapis.com/v1/accounts:lookup?key=${FIREBASE_KEY}`;\r\n\r\nconst MemberList = () => {\r\n  const [members, setMembers] = useState();\r\n  \r\n\r\n  // TODO: 抓取會員的資料 -> GET/MemberData\r\n  const fetchMemberData = useCallback(() => {\r\n    fetch(MEMBER_URL)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        const memberData = [];\r\n        for (const key in data) {\r\n          memberData.push({\r\n            key: key,\r\n            id: data[key].name,\r\n            name: data[key].username,\r\n            level: data[key].level,\r\n            status: data[key].status,\r\n            email: data[key].email,\r\n          });\r\n        }\r\n        setMembers(memberData);\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n  }, [setMembers]);\r\n\r\n  useEffect(() => {\r\n    fetchMemberData();\r\n\r\n    return () => {\r\n      fetchMemberData();\r\n    };\r\n  }, [fetchMemberData]);\r\n\r\n  const TABLE_COLUMN = [\r\n    {\r\n      title: '名稱',\r\n      key: 'name',\r\n      dataIndex: 'name',\r\n      width: '20%',\r\n    },\r\n    {\r\n      title: '權限',\r\n      key: 'level',\r\n      dataIndex: 'level',\r\n      width: '20%',\r\n    },\r\n    {\r\n      title: '信箱',\r\n      key: 'email',\r\n      dataIndex: 'email',\r\n    },\r\n    {\r\n      title: '狀態',\r\n      key: 'status',\r\n      dataIndex: 'status',\r\n      render: (status) => {\r\n        // -> 更新資料庫會員的狀態\r\n        const onToggle = (checked) => {\r\n          status = checked;\r\n        };\r\n        return (\r\n          <Space>\r\n            <Switch defaultChecked onChange={onToggle} />\r\n          </Space>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className={classes.members}>\r\n      <div>\r\n        <Table\r\n          scroll={{ x: 1000, y: 400 }}\r\n          pagination={false}\r\n          columns={TABLE_COLUMN}\r\n          dataSource={members}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MemberList;\r\n","import { useHistory, useRouteMatch } from 'react-router-dom';\r\n\r\nimport { Layout, Button } from 'antd';\r\nimport classes from '../../../styles/Panel/Projects/ProjectContent.module.css';\r\n\r\nimport MemberList from './MemberList';\r\n\r\nconst MemberContent = () => {\r\n  const { Content } = Layout;\r\n  const { url } = useRouteMatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const newMemberHandler = () => {\r\n    history.push(`${url}/new-member`);\r\n  };\r\n\r\n  return (\r\n    <Layout style={{ backgroundColor: '#fff' }}>\r\n      <Content style={{ margin: '0 30px' }}>\r\n        <div className={classes.title}>\r\n          <h3>Members</h3>\r\n          <Button\r\n            type='primary'\r\n            style={{ fontWeight: '700' }}\r\n            onClick={newMemberHandler}>\r\n            +新成員\r\n          </Button>\r\n        </div>\r\n        <MemberList />\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default MemberContent;\r\n","import PanelLayout from '../../UI/Layout/PanelLayout';\r\nimport MemberContent from './MemberContent';\r\n\r\nconst Panel = () => {\r\n  return (\r\n    <PanelLayout>\r\n      <MemberContent />\r\n    </PanelLayout>\r\n  );\r\n};\r\n\r\nexport default Panel;\r\n","import { useHistory } from 'react-router-dom';\r\n\r\nimport { Form, Input, Checkbox, Button, Select } from 'antd';\r\nimport classes from '../../../styles/Panel/Member/NewMember.module.css';\r\n\r\nimport NavHeader from '../../UI/Layout/Header';\r\n\r\n// 目前使用 Firebase Realtime Database 模擬會員資料\r\nconst MEMBER_URL = 'https://aiwinops-default-rtdb.firebaseio.com/members.json';\r\n\r\n// const FIREBASE_KEY = 'AIzaSyAaf6guV8zB9_4R5xwuDDiQM0zaNzQWuWA';\r\n// const SIGN_UP_API = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${FIREBASE_KEY}`;\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 16,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n    },\r\n  },\r\n};\r\n\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nconst NewMember = () => {\r\n  const [form] = Form.useForm();\r\n  const history = useHistory();\r\n\r\n  const { Option } = Select;\r\n\r\n  // TODO: 新增會員資料 -> POST/MemberData\r\n  const registerNewMember = (values) => {\r\n    console.log('Received values of form: ', values);\r\n    fetch(MEMBER_URL, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        email: values.email,\r\n        password: values.password,\r\n        username: values.username,\r\n        level: values.level,\r\n        status: true,\r\n        agreement: values.agreement,\r\n        returnSecureToken: true,\r\n      }),\r\n      headers: { 'Content-Type': 'application/json' },\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n    history.replace('/members');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavHeader />\r\n      <section className={classes.form}>\r\n        <h2>New Member</h2>\r\n        <Form\r\n          {...formItemLayout}\r\n          form={form}\r\n          name='register'\r\n          onFinish={registerNewMember}\r\n          scrollToFirstError>\r\n          <Form.Item\r\n            name='username'\r\n            label='Username'\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please enter username!',\r\n              },\r\n            ]}>\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name='email'\r\n            label='E-mail'\r\n            rules={[\r\n              {\r\n                type: 'email',\r\n                message: 'The email format is invalid!',\r\n              },\r\n              {\r\n                required: true,\r\n                message: 'Please enter email!',\r\n              },\r\n            ]}>\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name='password'\r\n            label='Password'\r\n            hasFeedback\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your password!',\r\n              },\r\n            ]}>\r\n            <Input.Password />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name='confirm'\r\n            label='Confirm Password'\r\n            dependencies={['password']}\r\n            hasFeedback\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your password!',\r\n              },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (!value || getFieldValue('password') === value) {\r\n                    return Promise.resolve();\r\n                  }\r\n                  return Promise.reject(new Error('Passwords are not match!'));\r\n                },\r\n              }),\r\n            ]}>\r\n            <Input.Password />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name='level'\r\n            label='Level'\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please provide authorization to the member!',\r\n              },\r\n            ]}>\r\n            <Select defaultValue='Annotator'>\r\n              <Option value='Owner'>Owner</Option>\r\n              <Option value='Manager'>Manager</Option>\r\n              {/* 其他的權限設定 */}\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            {...tailFormItemLayout}\r\n            name='agreement'\r\n            valuePropName='checked'\r\n            rules={[\r\n              {\r\n                validator: (_, value) =>\r\n                  value\r\n                    ? Promise.resolve()\r\n                    : Promise.reject(new Error('Please read the agreement!')),\r\n              },\r\n            ]}>\r\n            <Checkbox>\r\n              我已經閱讀\r\n              <a href='https://www.cathaysite.com.tw/uploads/11datademand/02/1816_1.pdf'>\r\n                相關聲明\r\n              </a>\r\n            </Checkbox>\r\n          </Form.Item>\r\n          <Form.Item {...tailFormItemLayout}>\r\n            <Button type='primary' htmlType='submit'>\r\n              新增會員\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewMember;\r\n","import { useContext } from 'react';\r\n\r\nimport classes from '../../../styles/Panel/Member/Settings.module.css';\r\nimport { Form, Upload, Input, Avatar, Button } from 'antd';\r\nimport { UploadOutlined, UserOutlined } from '@ant-design/icons';\r\n\r\nimport NavHeader from '../../UI/Layout/Header';\r\nimport AuthContext from '../../../store/auth-context';\r\n\r\n// 目前使用 Firebase Authentication模擬修改使用者資訊\r\nconst FIREBASE_KEY = 'AIzaSyAaf6guV8zB9_4R5xwuDDiQM0zaNzQWuWA';\r\nconst UPDATE_API = `https://identitytoolkit.googleapis.com/v1/accounts:update?key=${FIREBASE_KEY}`;\r\n\r\nconst Settings = () => {\r\n  const [form] = Form.useForm();\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  const avatarFile = (e) => {\r\n    return e && e.fileList;\r\n  };\r\n\r\n  // TODO: 更新使用者資訊 POST/uid/uinfo\r\n  const updateProfile = (values) => {\r\n    fetch(UPDATE_API, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        idToken: authCtx.token,\r\n        displayName: values.username,\r\n        photoUrl: values.avatar,\r\n        email: values.email\r\n      })\r\n    })\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavHeader />\r\n      <section className={classes.settings}>\r\n        <h2>Settings</h2>\r\n        <Form\r\n          form={form}\r\n          name='settings'\r\n          onFinish={updateProfile}\r\n          scrollToFirstError>\r\n          <div className={classes.avatar}>\r\n            <section className='left'>\r\n              <h3>Public Avatar</h3>\r\n              <p>\r\n                You can change your avatar here or remove the current avatar to\r\n                revert to UserOutlined.\r\n              </p>\r\n            </section>\r\n\r\n            <section className='right'>\r\n              <Avatar size={90} icon={<UserOutlined />} />\r\n              <Form.Item\r\n                name='upload'\r\n                label='Upload Avatar'\r\n                valuePropName='fileList'\r\n                getValueFromEvent={avatarFile}>\r\n                <Upload name='avatar' action='/upload.do' listType='picture'>\r\n                  <Button icon={<UploadOutlined />}>Upload</Button>\r\n                </Upload>\r\n              </Form.Item>\r\n            </section>\r\n          </div>\r\n          <div className={classes.main}>\r\n            <section className='left'>\r\n              <h3>Main Settings</h3>\r\n              <p>This information will appear on your profile</p>\r\n            </section>\r\n            <section className='right'>\r\n              <Form.Item name='username' label='Username'>\r\n                <Input />\r\n              </Form.Item>\r\n              <Form.Item name='email' label='E-mail'>\r\n                <Input />\r\n              </Form.Item>\r\n            </section>\r\n          </div>\r\n          <div className={classes.password}>\r\n            <section className='left'>\r\n              <h3>Change Password</h3>\r\n              <p>\r\n                You will be directed to the login page after you update your\r\n                password\r\n              </p>\r\n            </section>\r\n            <section className='right'>\r\n              <Form.Item name='current_password' label='Current Password'>\r\n                <Input.Password />\r\n              </Form.Item>\r\n              <Form.Item name='password' label='New Password'>\r\n                <Input.Password />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name='confirm'\r\n                label='Confirm Password'\r\n                dependencies={['password']}\r\n                hasFeedback\r\n                rules={[\r\n                  ({ getFieldValue }) => ({\r\n                    validator(_, value) {\r\n                      if (!value || getFieldValue('password') === value) {\r\n                        return Promise.resolve();\r\n                      }\r\n                      return Promise.reject(\r\n                        new Error('New Passwords are not match!'),\r\n                      );\r\n                    },\r\n                  }),\r\n                ]}>\r\n                <Input.Password />\r\n              </Form.Item>\r\n            </section>\r\n          </div>\r\n          <section className={classes.update}>\r\n            <Form.Item>\r\n              <Button type='primary' htmlType='submit'>\r\n                更新個人資料\r\n              </Button>\r\n            </Form.Item>\r\n          </section>\r\n        </Form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import { Route, Switch, useRouteMatch } from 'react-router-dom';\r\n\r\nimport MemberPanel from '../components/Panel/Members/MemberPanel';\r\nimport NewMember from '../components/Panel/Members/NewMember';\r\nimport Settings from '../components/Panel/Members/Settings';\r\n\r\nconst MemberPage = () => {\r\n  const { path } = useRouteMatch();\r\n  return (\r\n    <Switch>\r\n      <Route path={`${path}`} exact>\r\n        <MemberPanel />\r\n      </Route>\r\n      <Route path={`${path}/new-member`}>\r\n        <NewMember />\r\n      </Route>\r\n      <Route path={`${path}/settings`}>\r\n        <Settings />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default MemberPage;\r\n","import { Descriptions, Card, Badge, Progress, Tooltip } from 'antd';\r\n\r\nconst QuotaList = () => {\r\n  return (\r\n    <Card\r\n      style={{\r\n        width: '100%',\r\n        height: '500px',\r\n        overflowY: 'scroll',\r\n        marginTop: '1rem',\r\n      }}>\r\n      <Descriptions title='Your Solution' layout='vertical' bordered>\r\n        <Descriptions.Item label='Product'>Cloud Database</Descriptions.Item>\r\n        <Descriptions.Item label='Billing Mode'>Paid</Descriptions.Item>\r\n        <Descriptions.Item label='Automatic Renewal'>YES</Descriptions.Item>\r\n        <Descriptions.Item label='Build time'>\r\n          2018-04-24 18:00:00\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Status' span={3}>\r\n          <Badge status='processing' text='Running' />\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Member' span={3}>\r\n          <Tooltip title='專案成員額度'>\r\n            <span>In used: 4</span>\r\n          </Tooltip>\r\n          <Progress percent={40} />\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Disk' span={3}>\r\n          <Tooltip title='專案硬碟使用率'>\r\n            <span>In used: 6GB</span>\r\n          </Tooltip>\r\n          <Progress percent={60} />\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='GPU' span={3}>\r\n          <Tooltip title='專案GPU使用率'>\r\n            <span>Average Usage: 82%</span>\r\n          </Tooltip>\r\n          <Progress percent={82} />\r\n        </Descriptions.Item>\r\n      </Descriptions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default QuotaList;\r\n","import { Fragment } from 'react';\r\nimport { useRouteMatch, useHistory } from 'react-router-dom';\r\n\r\nimport classes from '../../../styles/Panel/Projects/ProjectContent.module.css';\r\nimport { Layout, Button } from 'antd';\r\n\r\n\r\nimport QuotaList from './QuotaList';\r\n\r\nconst QuotaContent = () => {\r\n  const { Content } = Layout;\r\n\r\n  const { url } = useRouteMatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const quotaUpgrade = () => {\r\n    console.log(url);\r\n    history.push(`${url}/quota-upgrade`);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Content style={{ margin: '0 30px' }}>\r\n        <div className={classes.title}>\r\n          <h3>Quota</h3>\r\n          <Button\r\n            type='primary'\r\n            onClick={quotaUpgrade}\r\n            style={{ fontWeight: '700' }}>\r\n            Upgrade\r\n          </Button>\r\n        </div>\r\n        <QuotaList />\r\n      </Content>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuotaContent;\r\n","import PanelLayout from '../../UI/Layout/PanelLayout';\r\nimport QuotaContent from './QuotaContent';\r\n\r\nconst QuotaPanel = () => {\r\n  return (\r\n    <PanelLayout>\r\n      <QuotaContent />\r\n    </PanelLayout>\r\n  );\r\n};\r\n\r\nexport default QuotaPanel;\r\n","import { useHistory } from 'react-router-dom';\r\n\r\nimport classes from '../../../styles/Panel/Projects/NewProject.module.css';\r\n\r\nimport NavHeader from '../../UI/Layout/Header';\r\n\r\nconst QuotaUpgrade = () => {\r\n  const history = useHistory();\r\n  console.log(history);\r\n  return (\r\n    <div>\r\n      <NavHeader />\r\n      <section className={classes.project}>\r\n        <h2>調整專案額度</h2>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuotaUpgrade;\r\n","import { Route, Switch, useRouteMatch } from 'react-router-dom';\r\n\r\nimport QuotaPanel from '../components/Panel/Quota/QuotaPanel';\r\nimport QuotaUpgrade from '../components/Panel/Quota/QuotaUpgrade';\r\n\r\nconst QuotaPage = () => {\r\n  const { path } = useRouteMatch();\r\n  return (\r\n    <Switch>\r\n      <Route path={`${path}`} exact>\r\n        <QuotaPanel />\r\n      </Route>\r\n      <Route path={`${path}/quota-upgrade`}>\r\n        <QuotaUpgrade />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default QuotaPage;\r\n","import { Pie } from '@ant-design/charts';\r\n\r\nconst ModelPie = () => {\r\n    // 資料數據比例\r\n    let data = [\r\n    {\r\n      type: 'Data',\r\n      value: 60,\r\n    },\r\n    {\r\n      type: 'Model',\r\n      value: 30,\r\n    },\r\n    {\r\n      type: '限度邏輯',\r\n      value: 10,\r\n    },\r\n  ];\r\n\r\n  let config = {\r\n    appendPadding: 10,\r\n    data: data,\r\n    angleField: 'value',\r\n    colorField: 'type',\r\n    radius: 1,\r\n    innerRadius: 0.4,\r\n    label: {\r\n      type: 'inner',\r\n      offset: '-50%',\r\n      content: '{value}%',\r\n      style: {\r\n        textAlign: 'center',\r\n        fontSize: 12,\r\n      },\r\n    },\r\n    interactions: [{ type: 'element-selected' }, { type: 'element-active' }],\r\n    statistic: {\r\n      title: false,\r\n      content: {\r\n        style: {\r\n          whiteSpace: 'pre-wrap',\r\n          overflow: 'hidden',\r\n          textOverflow: 'ellipsis',\r\n        },\r\n        formatter: function formatter() {\r\n          return 'Data Model';\r\n        },\r\n      },\r\n    },\r\n  };\r\n  return <Pie {...config} />;\r\n};\r\n\r\nexport default ModelPie;","import { Card, Descriptions, Progress, Tooltip } from 'antd';\r\nimport ModelPie from './ModelPie';\r\n\r\nconst DashboardGraph = () => {\r\n  return (\r\n    <Card\r\n      style={{\r\n        width: '100%',\r\n        height: '600px',\r\n        overflowY: 'scroll'\r\n      }}>\r\n      <Card>\r\n        <Descriptions title='Training Process' layout='horizontal' bordered>\r\n          <Descriptions.Item\r\n            label='Data'\r\n            span={1}\r\n            style={{ textAlign: 'center' }}>\r\n            <Tooltip title='已訓練資料集'>\r\n              <Progress type='circle' percent={60} />\r\n            </Tooltip>\r\n          </Descriptions.Item>\r\n          <Descriptions.Item\r\n            label='Model'\r\n            span={1}\r\n            style={{ textAlign: 'center' }}>\r\n            <Tooltip title='模型訓練進度'>\r\n              <Progress type='circle' percent={70} />\r\n            </Tooltip>\r\n          </Descriptions.Item>\r\n          <Descriptions.Item\r\n            label='Logic'\r\n            span={1}\r\n            style={{ textAlign: 'center' }}>\r\n            <Tooltip title='限度邏輯'>\r\n              <Progress type='circle' percent={15} />\r\n            </Tooltip>\r\n          </Descriptions.Item>\r\n        </Descriptions>\r\n      </Card>\r\n      <Card>\r\n        <Descriptions title='Indicators' layout='vertical' bordered>\r\n          <Descriptions.Item label='Graph'>\r\n            <ModelPie />\r\n          </Descriptions.Item>\r\n        </Descriptions>\r\n      </Card>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DashboardGraph;\r\n","import { Fragment } from 'react';\r\nimport { useRouteMatch, useHistory } from 'react-router-dom';\r\n\r\nimport classes from '../../../styles/Panel/Projects/ProjectContent.module.css';\r\nimport { Layout } from 'antd';\r\n\r\nimport DashboardGraph from './DashboardGraph';\r\n\r\nconst DashboardContent = () => {\r\n  const { Content } = Layout;\r\n\r\n  const { url } = useRouteMatch();\r\n\r\n  const history = useHistory();\r\n  console.log(url);\r\n  console.log(history);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Content style={{ margin: '0 30px' }}>\r\n        <div className={classes.title}>\r\n          <h3>Dashboard</h3>\r\n        </div>\r\n        <DashboardGraph />\r\n      </Content>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default DashboardContent;\r\n","import PanelLayout from '../../UI/Layout/PanelLayout';\r\nimport DashboardContent from './DashboardContent';\r\n\r\nconst QuotaPanel = () => {\r\n  return (\r\n    <PanelLayout>\r\n      <DashboardContent />\r\n    </PanelLayout>\r\n  );\r\n};\r\n\r\nexport default QuotaPanel;\r\n","import { Route, Switch, useRouteMatch } from 'react-router-dom';\r\nimport DashboardPanel from '../components/Panel/Dashboard/DashboardPanel';\r\n\r\nconst DashboardPage = () => {\r\n  const { path } = useRouteMatch();\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path={`${path}`} exact>\r\n        <DashboardPanel />;\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;\r\n","import { Card, Descriptions, Tooltip } from 'antd';\r\n\r\n\r\nconst columns = { xs: 8, sm: 12, md: 12};\r\n\r\nconst ReportGraph = () => {\r\n  // Dummy Data\r\n  const data = {\r\n    batch: 3,\r\n    label: 750,\r\n    reviewed: 0,\r\n    total: 900,\r\n    unlabel: 150,\r\n    unreviewed: 900,\r\n    completed: 300,\r\n  };\r\n\r\n  const model = {\r\n    name: 'Model001',\r\n    state: 'Training',\r\n    task: 'Object Detection',\r\n    data_source: 'Weld1',\r\n    model_type: 'RefineDet',\r\n    manager: 'Chris',\r\n    metrics: '0.7',\r\n    training_time: {\r\n      start: '2020-12-11 08:10:23',\r\n      end: '2020-12-11 11:20:23',\r\n      take: '03:10:00'\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      style={{\r\n        width: '100%',\r\n        height: '450px',\r\n        overflowY: 'scroll',\r\n      }}>\r\n      {/* 傳入專案數據 */}\r\n      <Descriptions\r\n        title='Data'\r\n        layout='vertical'\r\n        bordered\r\n        style={{ marginBottom: '1rem' }}>\r\n        <Descriptions.Item label='#Batch' span={1}>\r\n          <Tooltip title='資料批次量'>{data.batch}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='#Label' span={1}>\r\n          <Tooltip title='資料標籤量'>{data.label}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='#UnLabled' span={1}>\r\n          <Tooltip title='資料未標籤量'>{data.unlabel}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='#Total' span={1}>\r\n          <Tooltip title='資料總量'>{data.total}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='#Reviewed' span={1}>\r\n          <Tooltip title='資料審核量'>{data.reviewed}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='#Unreviewed' span={1}>\r\n          <Tooltip title='資料未審核量'>{data.unreviewed}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='#Complete' span={1}>\r\n          <Tooltip title='資料完成量'>{data.completed}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='#Completed Ratio' span={1}>\r\n          <Tooltip title='資料完成比'>\r\n            {((data.completed / data.total) * 100).toFixed(2)}\r\n          </Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='#Label Ratio' span={1}>\r\n          <Tooltip title='資料標籤比'>\r\n            {((data.unlabel / data.label) * 100).toFixed(2)}\r\n          </Tooltip>\r\n        </Descriptions.Item>\r\n      </Descriptions>\r\n      {/* 需要再另外寫成一個組件 */}\r\n      <Descriptions column={columns} title='Model' layout='vertical' bordered>\r\n        <Descriptions.Item label='Models' span={1}>\r\n          <Tooltip title='模型名稱'>{model.name}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='State' span={1}>\r\n          <Tooltip title='模型狀態'>{model.state}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Task' span={1}>\r\n          <Tooltip title='模型任務'>{model.task}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Data Source' span={1}>\r\n          <Tooltip title='模型資料源'>{model.data_source}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Model Type' span={1}>\r\n          <Tooltip title='模型類型'>{model.model_type}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Manager' span={1}>\r\n          <Tooltip title='模型管理者'>{model.manager}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Metrics' span={1}>\r\n          <Tooltip title='模型測量'>{model.metrics}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Start Time' span={2}>\r\n          <Tooltip title='開始時間'>{model.training_time.start}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='End Time' span={2}>\r\n          <Tooltip title='結束時間'>{model.training_time.end}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Take' span={1}>\r\n          <Tooltip title='訓練時間'>{model.training_time.take}</Tooltip>\r\n        </Descriptions.Item>\r\n      </Descriptions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ReportGraph;\r\n","import { Fragment } from 'react';\r\nimport { useRouteMatch, useHistory } from 'react-router-dom';\r\n\r\nimport classes from '../../../styles/Panel/Projects/ProjectContent.module.css';\r\nimport { Layout, Cascader } from 'antd';\r\n\r\nimport ReportGraph from './ReportGraph';\r\n\r\nconst ReportContent = () => {\r\n  const { Content } = Layout;\r\n\r\n  const { url } = useRouteMatch();\r\n\r\n  const history = useHistory();\r\n\r\n  // 各專案名稱 -> 需傳入專案名\r\n  const options = [\r\n    {\r\n      value: 'project1',\r\n      label: 'Project1',\r\n    },\r\n    {\r\n      value: 'project2',\r\n      label: 'Project2',\r\n    },\r\n    {\r\n      value: 'project3',\r\n      label: 'Project3',\r\n    },\r\n  ];\r\n\r\n  // 更改專案\r\n  const chooseProject = (value) => {\r\n    \r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Content style={{ margin: '0 30px' }}>\r\n        <div className={classes.title}>\r\n          <h3>Report</h3>\r\n        </div>\r\n        <Cascader\r\n          defaultValue={['project1']}\r\n          options={options}\r\n          onChange={chooseProject}\r\n          allowClear={false}\r\n          bordered={false}\r\n          style={{ \r\n            border: '1px solid #000',\r\n            margin: '5px 0'\r\n          }}\r\n        />\r\n        <ReportGraph />\r\n      </Content>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ReportContent;\r\n","import PanelLayout from '../../UI/Layout/PanelLayout';\r\nimport ReportContent from './ReportContent';\r\n\r\nconst ReportPanel = () => {\r\n  return (\r\n    <PanelLayout>\r\n      <ReportContent />\r\n    </PanelLayout>\r\n  );\r\n};\r\n\r\nexport default ReportPanel;\r\n","import { Route, Switch, useRouteMatch } from 'react-router-dom';\r\n\r\nimport ReportPanel from '../components/Panel/Report/ReportPanel';\r\n\r\nconst ReportPage = () => {\r\n  const { path } = useRouteMatch();\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path={`${path}`} exact>\r\n        <ReportPanel />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default ReportPage;\r\n","import PanelLayout from '../components/UI/Layout/PanelLayout';\r\n\r\nconst AboutPage = () => {\r\n  return (\r\n    <PanelLayout>\r\n      \r\n    </PanelLayout>\r\n  )\r\n};\r\n\r\nexport default AboutPage;","import PanelLayout from '../components/UI/Layout/PanelLayout';\r\n\r\nconst TutorialsPage = () => {\r\n  return <PanelLayout></PanelLayout>;\r\n};\r\n\r\nexport default TutorialsPage;\r\n","import PanelLayout from '../components/UI/Layout/PanelLayout';\r\n\r\nconst HelpPage = () => {\r\n  return <PanelLayout></PanelLayout>;\r\n};\r\n\r\nexport default HelpPage;\r\n","import { useContext } from 'react';\r\nimport { Route, Switch, BrowserRouter, Redirect } from 'react-router-dom';\r\n\r\nimport LoginForm from '../components/Login/LoginForm';\r\nimport ResetForm from '../components/Login/ResetForm';\r\n\r\nimport AuthContext from '../store/auth-context';\r\n\r\nimport ProjectPage from './ProjectPage';\r\nimport MemberPage from './MemberPage';\r\nimport QuotaPage from './QuotaPage';\r\nimport DashboardPage from './DashboardPage';\r\nimport ReportPage from './ReportPage';\r\n\r\nimport AboutPage from './AboutPage';\r\nimport TutorialsPage from './TutorialsPage';\r\nimport HelpPage from './HelpPage';\r\n\r\nconst LoginPage = (props) => {\r\n  const authCtx = useContext(AuthContext);\r\n  console.log(authCtx.token);\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n        <Route path='/' exact>\r\n          <LoginForm />\r\n        </Route>\r\n        <Route path='/reset'>\r\n          <ResetForm />\r\n        </Route>\r\n        <Route path='/project/:uid'>\r\n          {localStorage.getItem('token') ? (\r\n            <ProjectPage />\r\n          ) : (\r\n            <Redirect to='/' />\r\n          )}\r\n        </Route>\r\n        <Route path='/members/:uid'>\r\n          {localStorage.getItem('token') ? <MemberPage /> : <Redirect to='/' />}\r\n        </Route>\r\n        <Route path='/quota/:uid'>\r\n          {localStorage.getItem('token') ? <QuotaPage /> : <Redirect to='/' />}\r\n        </Route>\r\n        <Route path='/dashboard/:uid'>\r\n          {localStorage.getItem('token') ? (\r\n            <DashboardPage />\r\n          ) : (\r\n            <Redirect to='/' />\r\n          )}\r\n        </Route>\r\n        <Route path='/report/:uid'>\r\n          {localStorage.getItem('token') ? <ReportPage /> : <Redirect to='/' />}\r\n        </Route>\r\n        <Route path='/about'>\r\n          {localStorage.getItem('token') ? <AboutPage /> : <Redirect to='/' />}\r\n        </Route>\r\n        <Route path='/tutorials'>\r\n          {localStorage.getItem('token') ? (\r\n            <TutorialsPage />\r\n          ) : (\r\n            <Redirect to='/' />\r\n          )}\r\n        </Route>\r\n        <Route path='/help'>\r\n          {localStorage.getItem('token') ? <HelpPage /> : <Redirect to='/' />}\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import LoginPage from './pages/LoginPage';\n\nfunction App() {\n  return <LoginPage />\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport {AuthContextProvider} from './store/auth-context';\n\nReactDOM.render(\n  <AuthContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthContextProvider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
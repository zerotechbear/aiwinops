{"version":3,"sources":["styles/Login/ResetForm.module.css","styles/UI/Modal/Error.module.css","styles/UI/Layout/Card.module.css","styles/UI/Modal/Backdrop.module.css","styles/UI/Layout/Sidebar.module.css","styles/UI/Modal/Message.module.css","styles/ProjectPanel/Member/NewMember.module.css","components/UI/Layout/Card.js","components/UI/Modal/Backdrop.js","components/UI/Modal/Error.js","components/Login/LoginForm.js","pages/LoginPage.js","components/UI/Layout/Header.js","components/UI/Layout/Sidebar.js","components/UI/Layout/PanelLayout.js","components/ProjectPanel/Projects/ProjectList.js","components/ProjectPanel/Projects/ProjectContent.js","components/ProjectPanel/Projects/ProjectPanel.js","pages/ProjectPage.js","components/UI/Modal/Message.js","components/Login/ResetForm.js","components/ProjectPanel/Projects/NewProject.js","components/ProjectPanel/Members/MemberList.js","components/ProjectPanel/Members/MemberContent.js","components/ProjectPanel/Members/MemberPanel.js","components/ProjectPanel/Members/NewMember.js","App.js","reportWebVitals.js","index.js","styles/UI/Layout/Header.module.css","styles/ProjectPanel/Projects/ProjectContent.module.css","styles/Login/LoginForm.module.css","styles/ProjectPanel/Projects/NewProject.module.css"],"names":["module","exports","Card","props","className","classes","card","children","Backdrop","backdrop","onClick","onCloseModal","Error","Fragment","main","btn","type","SIGN_IN_API","LoginForm","useState","isLoginFail","setIsLoginFail","Form","useForm","form","history","useHistory","login","logo","name","onFinish","values","console","log","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","response","ok","replace","json","catch","error","scrollToFirstError","Item","rules","message","required","prefix","MailOutlined","placeholder","Password","LockOutlined","submit","htmlType","help","href","target","rel","to","LoginPage","navLinks","title","path","menu","NavHeader","Header","Layout","Search","Input","header","nav","onSearch","value","search","map","link","index","activeClassName","active","avatar","overlay","placement","arrow","size","icon","UserOutlined","NavLeft","Sider","collapsed","setCollapsed","width","foldBtn","MenuUnfoldOutlined","MenuFoldOutlined","mode","theme","defaultSelectedKeys","style","height","borderRight","PieChartOutlined","DesktopOutlined","ContainerOutlined","PanelLayout","position","top","Sidebar","TABLE_COLUMN","key","dataIndex","ProjectList","projectData","setProjectData","fetchProjectData","useCallback","data","storeData","push","status","manager","build_time","modify_time","editable","modifiable","useEffect","projects","scroll","x","y","pagination","columns","dataSource","ProjectContent","Content","backgroundColor","content","fontWeight","Panel","ProjectPage","ProjectPanel","Message","RESET_API","ResetForm","isExist","setIsExist","reset","onValuesChange","requestType","validator","_","a","form__submit","NewProject","TextArea","projectColor","setProjectColor","project","Date","toISOString","toString","project_name","color","project_color","hex","description","project_description","info","allowClear","onChangeComplete","rows","maxLength","showCount","marginBottom","valuePropName","Promise","resolve","reject","protocol","borderColor","danger","marginLeft","MemberList","members","setMembers","fetchMemberData","memberData","id","username","level","MemberContent","SIGN_UP_API","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","NewMember","label","hasFeedback","dependencies","getFieldValue","App","process","basename","exact","MemberPanel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76a3ee6a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"reset\":\"ResetForm_reset__8lEB-\",\"form\":\"ResetForm_form__8S0V3\",\"form__submit\":\"ResetForm_form__submit__2v6g6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Error_main__izgaW\",\"btn\":\"Error_btn__1D755\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3BB1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Backdrop_backdrop__ls6ah\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"foldBtn\":\"Sidebar_foldBtn__CB8qk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2rg14\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewMember_form__3VfVt\",\"control\":\"NewMember_control__xKszx\",\"action\":\"NewMember_action__3vYp8\"};","import classes from '../../../styles/UI/Layout/Card.module.css';\r\n\r\nconst Card = (props) => {\r\n  return <div className={classes.card}>{props.children}</div>\r\n}\r\n\r\nexport default Card;","import classes from '../../../styles/UI/Modal/Backdrop.module.css';\r\n\r\nconst Backdrop = (props) => {\r\n  return <div className={classes.backdrop} onClick={props.onCloseModal}/>\r\n};\r\n\r\nexport default Backdrop;","import React from \"react\";\r\n\r\nimport classes from '../../../styles/UI/Modal/Error.module.css';\r\nimport Backdrop from './Backdrop';\r\nconst Error = (props) => {\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Backdrop onCloseModal={props.onCloseModal} />\r\n      <div className={classes.main}>\r\n        <h2>An Error Occurred</h2>\r\n        <p>{props.children}</p>\r\n        <div className={classes.btn}>\r\n          <button type='button' onClick={props.onCloseModal}>\r\n            Okay\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Error;","import { useState, Fragment } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport classes from '../../styles/Login/LoginForm.module.css';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { MailOutlined, LockOutlined } from '@ant-design/icons';\r\n\r\nimport Card from '../UI/Layout/Card';\r\nimport Error from '../UI/Modal/Error';\r\n\r\nconst FIREBASE_KEY = 'AIzaSyAaf6guV8zB9_4R5xwuDDiQM0zaNzQWuWA';\r\nconst SIGN_IN_API = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${FIREBASE_KEY}`;\r\n\r\nconst LoginForm = (props) => {\r\n  const [isLoginFail, setIsLoginFail] = useState(false);\r\n\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const history = useHistory();\r\n\r\n  const closeModal = () => {\r\n    setIsLoginFail(false);\r\n  };\r\n\r\n  // TODO: 驗證USER登入 -> Email/Password\r\n  const loginAuthHandler = (values) => {\r\n    console.log('Login Auth: ', values);\r\n\r\n    fetch(SIGN_IN_API, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        email: values.email,\r\n        password: values.password,\r\n        returnSecureToken: true\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          history.replace('/home');\r\n          return response.json();\r\n        } else {\r\n          setIsLoginFail(true);\r\n          console.log('Wrong');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <section className={classes.login}>\r\n        <Card>\r\n          <span className={classes.logo} />\r\n          <section className={classes.form}>\r\n            <h2>Member Login</h2>\r\n            <Form\r\n              form={form}\r\n              name='login'\r\n              onFinish={loginAuthHandler}\r\n              scrollToFirstError>\r\n              <Form.Item\r\n                name='email'\r\n                rules={[\r\n                  {\r\n                    type: 'email',\r\n                    message: 'The email format is invalid!',\r\n                  },\r\n                  {\r\n                    required: true,\r\n                    message: 'The email is empty!',\r\n                  },\r\n                ]}>\r\n                <Input\r\n                  prefix={<MailOutlined />}\r\n                  placeholder='Email@domain.com'\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name='password'\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'The password is empty!',\r\n                  },\r\n                ]}>\r\n                <Input.Password\r\n                  placeholder='Password'\r\n                  prefix={<LockOutlined />}\r\n                />\r\n              </Form.Item>\r\n              <div className={classes.submit}>\r\n                <Button type='primary' htmlType='submit'>\r\n                  LOGIN\r\n                </Button>\r\n              </div>\r\n              <div className={classes.help}>\r\n                <a\r\n                  href='https://www.zerodimension.com.tw/default.aspx#contact'\r\n                  target='_blank'\r\n                  rel='noreferrer'>\r\n                  <Button type='default'>Help</Button>\r\n                </a>\r\n                <Button type='default'>\r\n                  <Link to='/reset'>Forget Password?</Link>\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n            {isLoginFail && (\r\n              <Error onCloseModal={closeModal}>\r\n                The email or password is invalid{' '}\r\n              </Error>\r\n            )}\r\n          </section>\r\n        </Card>\r\n      </section>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import LoginForm from '../components/Login/LoginForm';\r\n\r\n\r\nconst LoginPage = (props) => {\r\n  return <LoginForm />;\r\n};\r\n\r\nexport default LoginPage;\r\n","import { Link, NavLink } from 'react-router-dom';\r\nimport { Input, Avatar, Layout, Menu, Dropdown } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\n\r\nimport classes from '../../../styles/UI/Layout/Header.module.css';\r\n\r\nconst navLinks = [\r\n  {\r\n    title: 'Home',\r\n    path: '/home',\r\n  },\r\n  {\r\n    title: 'About',\r\n    path: '/about',\r\n  },\r\n  {\r\n    title: 'Tutorials',\r\n    path: '/tutorials',\r\n  },\r\n  {\r\n    title: 'Help',\r\n    path: '/help',\r\n  },\r\n];\r\n\r\nconst menu = (\r\n  <Menu>\r\n    <Menu.Item>\r\n      {/* 導向個人資訊頁面 -> /uid/settings */}\r\n      <Link to='/settings'>Setting</Link>\r\n    </Menu.Item>\r\n    <Menu.Item>\r\n      {/* 確認登出後刪除Token資訊 */}\r\n      <Link to='/'>Logout</Link>\r\n    </Menu.Item>\r\n  </Menu>\r\n);\r\n\r\nconst NavHeader = () => {\r\n  const { Header } = Layout;\r\n  const { Search } = Input;\r\n\r\n  // 搜尋專案 -> 可能透過Antd Table Column Filter\r\n  const searchProjectHandler = (value) => {\r\n    console.log(value);\r\n  };\r\n\r\n  return (\r\n    <Header className={classes.header}>\r\n      <span className={classes.logo}>\r\n        <NavLink to='/home'>AIWinOps</NavLink>\r\n      </span>\r\n      <nav className={classes.nav}>\r\n        <div className={classes.menu}>\r\n          <ul>\r\n            <Search\r\n              placeholder='Search Project'\r\n              onSearch={searchProjectHandler}\r\n              className={classes.search}\r\n            />\r\n            {navLinks.map((link, index) => (\r\n              <li key={index}>\r\n                <NavLink to={link.path} activeClassName={classes.active}>\r\n                  {link.title}\r\n                </NavLink>\r\n              </li>\r\n            ))}\r\n            <span className={classes.avatar}>\r\n              <Dropdown overlay={menu} placement='bottomRight' arrow>\r\n                <Avatar size={50} icon={<UserOutlined />}></Avatar>\r\n              </Dropdown>\r\n            </span>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default NavHeader;\r\n","import { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Layout, Menu, Button } from 'antd';\r\nimport {\r\n  PieChartOutlined,\r\n  DesktopOutlined,\r\n  ContainerOutlined,\r\n  UserOutlined,\r\n  MenuFoldOutlined,\r\n  MenuUnfoldOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport classes from '../../../styles/UI/Layout/Sidebar.module.css';\r\n\r\n\r\nconst NavLeft = () => {\r\n  const { Sider } = Layout;\r\n\r\n  const [collapsed, setCollapsed] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    setCollapsed((collapsed) => !collapsed);\r\n  };\r\n\r\n  return (\r\n    <Sider width={200} collapsed={collapsed}>\r\n      <Button type='primary' onClick={toggleMenu} className={classes.foldBtn}>\r\n        {collapsed ? <MenuUnfoldOutlined /> : <MenuFoldOutlined />}\r\n      </Button>\r\n      <Menu\r\n        mode='inline'\r\n        theme='dark'\r\n        defaultSelectedKeys={['1']}\r\n        style={{ height: '100%', borderRight: 0 }}>\r\n        <Menu.Item key='1' icon={<PieChartOutlined />}>\r\n          <Link to='/home'>Project</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key='2' icon={<DesktopOutlined />}>\r\n          Dashboard\r\n        </Menu.Item>\r\n        <Menu.Item key='3' icon={<ContainerOutlined />}>\r\n          Quota\r\n        </Menu.Item>\r\n        <Menu.Item key='4' icon={<UserOutlined />}>\r\n          <Link to='/members'>Members</Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Sider>\r\n  );\r\n};\r\n\r\nexport default NavLeft;\r\n","import { Layout } from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport Header from './Header';\r\nimport Sidebar from './Sidebar';\r\n\r\nconst PanelLayout = (props) => {\r\n  return (\r\n    <Layout>\r\n      <Header />\r\n      <Layout style={{ position: 'fixed', width: '100%', height: '100%', top: '5rem' }}>\r\n        <Sidebar />\r\n        {props.children}\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default PanelLayout;\r\n","import { useState, useEffect, useCallback } from 'react';\r\nimport { Table } from 'antd';\r\n\r\nimport classes from '../../../styles/ProjectPanel/Projects/ProjectList.module.css';\r\n\r\nconst TABLE_COLUMN = [\r\n  {\r\n    title: '專案名稱',\r\n    key: 'name',\r\n    dataIndex: 'name',\r\n  },\r\n  {\r\n    title: '狀態',\r\n    key: 'status',\r\n    dataIndex: 'status',\r\n  },\r\n  {\r\n    title: '管理者',\r\n    key: 'manager',\r\n    dataIndex: 'manager',\r\n  },\r\n  {\r\n    title: '建立日期',\r\n    key: 'build_time',\r\n    dataIndex: 'build_time',\r\n  },\r\n  {\r\n    title: '修改日期',\r\n    key: 'modify_time',\r\n    dataIndex: 'modify_time',\r\n  },\r\n  {\r\n    title: '其他操作',\r\n    key: 'action',\r\n    dataIndex: 'action',\r\n    type: 'Action',\r\n  },\r\n];\r\n\r\nconst ProjectList = (props) => {\r\n  const [projectData, setProjectData] = useState();\r\n\r\n  // TODO: 抓取使用者專案的資料 -> GET/ProjectData\r\n  const fetchProjectData = useCallback(() => {\r\n    fetch('https://aiwinops-default-rtdb.firebaseio.com/projects.json', {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' },\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        const storeData = [];\r\n        for (const key in data) {\r\n          storeData.push({\r\n            key: key,\r\n            name: data[key].name,\r\n            status: data[key].status,\r\n            manager: data[key].manager,\r\n            build_time: data[key].build_time,\r\n            modify_time: data[key].modify_time,\r\n            editable: data[key].editable,\r\n            modifiable: data[key].modifiable,\r\n          });\r\n        }\r\n        setProjectData(storeData);\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchProjectData();\r\n  }, [fetchProjectData]);\r\n\r\n  return (\r\n    <div className={classes.projects}>\r\n      <div>\r\n        <Table scroll={{ x: '1000', y: '500'}} pagination={false} columns={TABLE_COLUMN} dataSource={projectData} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import { useHistory } from 'react-router-dom';\r\n\r\nimport { Layout, Button } from 'antd';\r\nimport classes from '../../../styles/ProjectPanel/Projects/ProjectContent.module.css';\r\n\r\nimport ProjectList from './ProjectList';\r\n\r\nconst ProjectContent = () => {\r\n  const { Content } = Layout;\r\n\r\n  const history = useHistory();\r\n\r\n  const newProjectHandler = () => {\r\n    history.push('/new-project');\r\n  };\r\n\r\n  return (\r\n    <Layout style={{ backgroundColor: '#fff'}} >\r\n      <Content className={classes.content} style={{ width: '100%'}}>\r\n        <div className={classes.title}>\r\n          <h3>Projects</h3>\r\n          <Button\r\n            type='primary'\r\n            onClick={newProjectHandler}\r\n            style={{ fontWeight: '700' }}>\r\n            +新專案\r\n          </Button>\r\n        </div>\r\n        <ProjectList />\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ProjectContent;\r\n","import PanelLayout from '../../UI/Layout/PanelLayout';\r\nimport ProjectContent from './ProjectContent';\r\n\r\n\r\nconst Panel = () => {\r\n  return (\r\n    <PanelLayout>\r\n      <ProjectContent />\r\n    </PanelLayout>\r\n  );\r\n}\r\n\r\nexport default Panel;","import ProjectPanel from '../components/ProjectPanel/Projects/ProjectPanel';\r\n\r\nconst ProjectPage = () => {\r\n  return (\r\n    <ProjectPanel />\r\n  )\r\n};\r\n\r\nexport default ProjectPage;","import classes from '../../../styles/UI/Modal/Message.module.css';\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={classes.message}>\r\n      <h3>Message</h3>\r\n      <p>{props.children}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;","import { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { Form, Input, Button } from 'antd';\r\nimport { MailOutlined } from '@ant-design/icons';\r\nimport classes from '../../styles/Login/ResetForm.module.css';\r\n\r\nimport Card from '../UI/Layout/Card';\r\nimport Message from '../UI/Modal/Message';\r\n\r\nconst FIREBASE_KEY = 'AIzaSyAaf6guV8zB9_4R5xwuDDiQM0zaNzQWuWA';\r\nconst RESET_API = `https://identitytoolkit.googleapis.com/v1/accounts:sendOobCode?key=${FIREBASE_KEY}`;\r\n\r\nconst ResetForm = (props) => {\r\n  const [form] = Form.useForm();\r\n  const history = useHistory();\r\n\r\n  const [isExist, setIsExist] = useState(true);\r\n\r\n  // TODO: 發送重設密碼信件給已註冊的使用者\r\n  const submitResetHandler = (values) => {\r\n    console.log(values);\r\n    fetch(RESET_API, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        email: values.email,\r\n        requestType: 'PASSWORD_RESET',\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          console.log('Send');\r\n          history.push('/');\r\n        } else {\r\n          setIsExist(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n  };\r\n\r\n  const emailEnter = () => {\r\n    setIsExist(true);\r\n  };\r\n\r\n  return (\r\n    <section className={classes.reset}>\r\n      {!isExist && <Message>Email does not exist!</Message> }\r\n      <Card>\r\n        <section className={classes.form}>\r\n          <Form\r\n            form={form}\r\n            onValuesChange={emailEnter}\r\n            onFinish={submitResetHandler}>\r\n            <h3>Reset Password</h3>\r\n            <Form.Item\r\n              name='email'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please enter your email to reset!',\r\n                },\r\n                {\r\n                  type: 'email',\r\n                  message: 'The email format is invalid!',\r\n                },\r\n                {\r\n                  validator: async (_, value) => {\r\n                    if (!isExist) {\r\n                      throw new Error('Email does not exist!');\r\n                    }\r\n                  },\r\n                },\r\n              ]}>\r\n              <Input prefix={<MailOutlined />} placeholder='name@domain.com' />\r\n            </Form.Item>\r\n            <div className={classes.form__submit}>\r\n              <Form.Item>\r\n                <Button type='primary' htmlType='submit'>\r\n                  Send\r\n                </Button>\r\n              </Form.Item>\r\n            </div>\r\n          </Form>\r\n        </section>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ResetForm;\r\n","import { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport { CirclePicker } from 'react-color';\r\nimport classes from '../../../styles/ProjectPanel/Projects/NewProject.module.css';\r\n\r\nimport NavHeader from '../../UI/Layout/Header';\r\n\r\n\r\nconst PROJECT_URL = 'https://aiwinops-default-rtdb.firebaseio.com/projects.json';\r\n\r\nconst NewProject = () => {\r\n  const { TextArea } = Input;\r\n  const [form] = Form.useForm();\r\n  const history = useHistory();\r\n\r\n  const [projectColor, setProjectColor] = useState('#fff');\r\n\r\n  const getColor = (color) => {\r\n    setProjectColor(color.hex);\r\n  };\r\n\r\n  // TODO: 將新專案新增至資料庫 /PUSH/New-Project\r\n  const submitNewProject = (values) => {\r\n    \r\n    fetch(PROJECT_URL, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        build_time: new Date().toISOString().toString(),\r\n        name: values.project_name,\r\n        color: values.project_color.hex,\r\n        description: values.project_description,\r\n      }),\r\n      headers: { 'Content-Type': 'application/json'}\r\n    }).then(response => {\r\n      return response.json();\r\n    }).catch((error) => {\r\n      throw new Error(error);\r\n    });\r\n    history.push('/home');\r\n  };\r\n\r\n  const cancleProjectHandler = () => {\r\n    history.push('/home');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavHeader />\r\n      <section className={classes.project}>\r\n        <h2>新專案</h2>\r\n        <Form\r\n          form={form}\r\n          name='project'\r\n          onFinish={submitNewProject}\r\n          scrollToFirstError>\r\n          <div className={classes.info}>\r\n            <h4>專案名稱</h4>\r\n            <Form.Item\r\n              name='project_name'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Project name should not be empty!',\r\n                },\r\n              ]}>\r\n              <Input placeholder='Project Name' allowClear />\r\n            </Form.Item>\r\n            <h4>專案顏色</h4>\r\n            <Form.Item\r\n              name='project_color'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Choose color for new project!',\r\n                },\r\n              ]}>\r\n              <CirclePicker\r\n                width={300}\r\n                color={projectColor}\r\n                onChangeComplete={getColor}\r\n              />\r\n            </Form.Item>\r\n            <h4>專案描述(Optional)</h4>\r\n            <Form.Item name='project_description'>\r\n              <TextArea\r\n                placeholder='Project Description'\r\n                rows={5}\r\n                maxLength={300}\r\n                showCount\r\n                allowClear\r\n                style={{ marginBottom: '2.5rem' }}\r\n              />\r\n            </Form.Item>\r\n          </div>\r\n          <Form.Item\r\n            name='agreement'\r\n            valuePropName='checked'\r\n            rules={[\r\n              {\r\n                validator: (_, value) =>\r\n                  value\r\n                    ? Promise.resolve()\r\n                    : Promise.reject(new Error('使用服務前請先閱讀說明')),\r\n              },\r\n            ]}>\r\n            <div className={classes.protocol}>\r\n              <h1>資料協議</h1>\r\n              <section>\r\n                請您在開始使用AIWin系列產品(以下簡稱\"本產品\")前，務必仔細閱讀並同意《用戶協議》(以下簡稱\"本協議\")\r\n                中規定的所有權利和限制。\r\n              </section>\r\n              <Checkbox>Accept</Checkbox>\r\n            </div>\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <div className={classes.btn}>\r\n              <Button\r\n                type='primary'\r\n                htmlType='submit'\r\n                style={{\r\n                  fontWeight: '600',\r\n                  backgroundColor: '#096dd9',\r\n                  borderColor: '#096dd9',\r\n                }}>\r\n                建立專案\r\n              </Button>\r\n              <Button\r\n                type='default'\r\n                danger\r\n                onClick={cancleProjectHandler}\r\n                style={{ marginLeft: '1rem' }}>\r\n                取消\r\n              </Button>\r\n            </div>\r\n          </Form.Item>\r\n        </Form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewProject;\r\n","import { useState, useEffect, useCallback } from 'react';\r\n\r\nimport { Table } from 'antd';\r\n\r\nimport classes from '../../../styles/ProjectPanel/Member/MemberList.module.css';\r\n\r\nconst MEMBER_URL = 'https://aiwinops-default-rtdb.firebaseio.com/members.json';\r\n\r\nconst TABLE_COLUMN = [\r\n  {\r\n    title: '名稱',\r\n    key: 'name',\r\n    dataIndex: 'name',\r\n    width: '20%'\r\n  },\r\n  {\r\n    title: '權限',\r\n    key: 'level',\r\n    dataIndex: 'level',\r\n    width: '20%'\r\n  },\r\n  {\r\n    title: '信箱',\r\n    key: 'email',\r\n    dataIndex: 'email'\r\n  },\r\n  {\r\n    title: '狀態',\r\n    key: 'status',\r\n    dataIndex: 'status'\r\n  }\r\n];\r\n\r\n\r\nconst MemberList = () => {\r\n  const [members, setMembers] = useState();\r\n\r\n  // TODO: 抓取會員的資料 -> GET/MemberData\r\n  const fetchMemberData = useCallback(() => {\r\n    fetch(MEMBER_URL, {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' },\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        const memberData = [];\r\n        for (const key in data) {\r\n          memberData.push({\r\n            id: data[key].name,\r\n            name: data[key].username,\r\n            level: data[key].level,\r\n            status: data[key].status,\r\n            email: data[key].email,\r\n          });\r\n        }\r\n        setMembers(memberData);\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchMemberData();\r\n  }, [fetchMemberData]);\r\n\r\n  return (\r\n    <div className={classes.members}>\r\n      <div>\r\n        <Table\r\n          scroll={{ x: 1000, y: 500 }}\r\n          pagination={false}\r\n          columns={TABLE_COLUMN}\r\n          dataSource={members}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MemberList;\r\n","import { useHistory } from 'react-router-dom';\r\n\r\nimport { Layout, Button } from 'antd';\r\nimport classes from '../../../styles/ProjectPanel/Projects/ProjectContent.module.css';\r\n\r\nimport MemberList from './MemberList';\r\n\r\nconst MemberContent = () => {\r\n  const { Content } = Layout;\r\n\r\n  const history = useHistory();\r\n\r\n  const newMemberHandler = () => {\r\n    history.push('/new-member');\r\n  };\r\n\r\n  return (\r\n    <Layout style={{ backgroundColor: '#fff' }}>\r\n      <Content className={classes.content} style={{ width: '100%' }}>\r\n        <div className={classes.title}>\r\n          <h3>Members</h3>\r\n          <Button\r\n            type='primary'\r\n            style={{ fontWeight: '700' }}\r\n            onClick={newMemberHandler}>\r\n            +新成員\r\n          </Button>\r\n        </div>\r\n        <MemberList />\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default MemberContent;\r\n","import PanelLayout from '../../UI/Layout/PanelLayout';\r\nimport MemberContent from './MemberContent';\r\n\r\nconst Panel = () => {\r\n  return (\r\n    <PanelLayout>\r\n      <MemberContent />\r\n    </PanelLayout>\r\n  );\r\n};\r\n\r\nexport default Panel;\r\n","import { useHistory } from 'react-router-dom';\r\n\r\nimport { Form, Input, Checkbox, Button } from 'antd';\r\nimport classes from '../../../styles/ProjectPanel/Member/NewMember.module.css';\r\n\r\nimport NavHeader from '../../UI/Layout/Header';\r\n\r\n\r\nconst FIREBASE_KEY = 'AIzaSyAaf6guV8zB9_4R5xwuDDiQM0zaNzQWuWA';\r\nconst SIGN_UP_API = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${FIREBASE_KEY}`;\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 16,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n    },\r\n  },\r\n};\r\n\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nconst NewMember = () => {\r\n  const [form] = Form.useForm();\r\n  const history = useHistory();\r\n\r\n  // TODO: 新增會員資料 -> POST/MemberData\r\n  const registerNewMember = (values) => {\r\n    console.log('Received values of form: ', values);\r\n    fetch(SIGN_UP_API, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        email: values.email,\r\n        password: values.password,\r\n        name: values.username,\r\n        returnSecureToken: true,\r\n      }),\r\n      headers: { 'Content-Type': 'application/json' },\r\n    }).then(response => {\r\n      return response.json();\r\n    }).catch((error) => {\r\n      throw new Error(error);\r\n    });\r\n    history.replace('/members');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavHeader />\r\n      <section className={classes.form}>\r\n        <h2>New Member</h2>\r\n        <Form\r\n          {...formItemLayout}\r\n          form={form}\r\n          name='register'\r\n          onFinish={registerNewMember}\r\n          scrollToFirstError>\r\n          <Form.Item\r\n            name='username'\r\n            label='Username'\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please enter username!',\r\n              },\r\n            ]}>\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name='email'\r\n            label='E-mail'\r\n            rules={[\r\n              {\r\n                type: 'email',\r\n                message: 'The email format is invalid!',\r\n              },\r\n              {\r\n                required: true,\r\n                message: 'Please enter email!',\r\n              },\r\n            ]}>\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name='password'\r\n            label='Password'\r\n            hasFeedback\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your password!',\r\n              },\r\n            ]}>\r\n            <Input.Password />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name='confirm'\r\n            label='Confirm Password'\r\n            dependencies={['password']}\r\n            hasFeedback\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your password!',\r\n              },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (!value || getFieldValue('password') === value) {\r\n                    return Promise.resolve();\r\n                  }\r\n                  return Promise.reject(new Error('Passwords are not match!'));\r\n                },\r\n              }),\r\n            ]}>\r\n            <Input.Password />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            {...tailFormItemLayout}\r\n            name='agreement'\r\n            valuePropName='checked'\r\n            rules={[\r\n              {\r\n                validator: (_, value) =>\r\n                  value\r\n                    ? Promise.resolve()\r\n                    : Promise.reject(new Error('Please read the agreement!')),\r\n              },\r\n            ]}>\r\n            <Checkbox>\r\n              我已經閱讀\r\n              <a href='https://www.cathaysite.com.tw/uploads/11datademand/02/1816_1.pdf'>\r\n                相關聲明\r\n              </a>\r\n            </Checkbox>\r\n          </Form.Item>\r\n          <Form.Item {...tailFormItemLayout}>\r\n            <Button type='primary' htmlType='submit'>\r\n              新增會員\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewMember;\r\n","import { Route, Switch, BrowserRouter } from 'react-router-dom';\n\nimport LoginPage from './pages/LoginPage';\nimport ProjectPage from './pages/ProjectPage';\n\nimport ResetForm from './components/Login/ResetForm';\nimport NewProject from './components/ProjectPanel/Projects/NewProject';\nimport MemberPanel from './components/ProjectPanel/Members/MemberPanel';\nimport NewMember from './components/ProjectPanel/Members/NewMember';\n\n\n\nfunction App() {\n  console.log(process.env.PUBLIC_URL);\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path='/' exact>\n          <LoginPage />\n        </Route>\n        <Route path='/reset'>\n          <ResetForm />\n        </Route>\n        <Route path='/home'>\n          <ProjectPage />\n        </Route>\n        <Route path='/new-project'>\n          <NewProject />\n        </Route>\n        <Route path='/members'>\n          <MemberPanel />\n        </Route>\n        <Route path='/new-member'>\n          <NewMember />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n\n/* \n        <Route path='/profile'></Route>\n        <Route path='/about'>\n          <ProjectPage />\n        </Route>\n        <Route path='/tutorials'>\n          <ProjectPage />\n        </Route>\n        <Route path='/help'>\n          <ProjectPage />\n        </Route>\n        \n         */\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__5yFbd\",\"logo\":\"Header_logo__2c0cK\",\"search\":\"Header_search__1_QZM\",\"nav\":\"Header_nav__2qdsB\",\"active\":\"Header_active__1GP9E\",\"avatar\":\"Header_avatar__12YV_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProjectContent_content__1nvbD\",\"title\":\"ProjectContent_title__3GEmq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"LoginForm_login__2ISZM\",\"logo\":\"LoginForm_logo__1Go5w\",\"form\":\"LoginForm_form__3RZXX\",\"submit\":\"LoginForm_submit__Lzs9_\",\"help\":\"LoginForm_help__450w0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"project\":\"NewProject_project__xw8NH\",\"info\":\"NewProject_info__1X_02\",\"protocol\":\"NewProject_protocol__3jbMz\",\"btn\":\"NewProject_btn__jOPGh\"};"],"sourceRoot":""}
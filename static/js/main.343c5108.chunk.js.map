{"version":3,"sources":["styles/Panel/Projects/ProjectContent.module.css","styles/UI/Layout/Header.module.css","styles/Panel/Projects/NewProject.module.css","styles/Login/LoginForm.module.css","styles/Panel/Member/Settings.module.css","styles/Login/ResetForm.module.css","styles/UI/Layout/Card.module.css","styles/UI/Layout/Sidebar.module.css","styles/Panel/Member/NewMember.module.css","components/UI/Layout/Card.js","store/auth-context.js","components/Login/LoginForm.js","components/Login/ResetForm.js","components/UI/Layout/Header.js","components/Panel/Projects/NewProject.js","components/UI/Layout/Sidebar.js","components/UI/Layout/PanelLayout.js","components/Panel/Projects/ProjectList.js","components/Panel/Projects/ProjectContent.js","components/Panel/Projects/ProjectPanel.js","pages/ProjectPage.js","components/Panel/Members/MemberList.js","components/Panel/Members/MemberContent.js","components/Panel/Members/MemberPanel.js","components/Panel/Members/NewMember.js","components/Panel/Members/Settings.js","pages/MemberPage.js","components/Panel/Quota/QuotaList.js","components/Panel/Quota/QuotaContent.js","components/Panel/Quota/QuotaPanel.js","components/Panel/Quota/QuotaUpgrade.js","pages/QuotaPage.js","components/Panel/Dashboard/ModelPie.js","components/Panel/Dashboard/DashboardGraph.js","components/Panel/Dashboard/DashboardContent.js","components/Panel/Dashboard/DashboardPanel.js","pages/DashboardPage.js","components/Panel/Report/ReportGraph.js","components/Panel/Report/ReportContent.js","components/Panel/Report/ReportPanel.js","pages/ReportPage.js","pages/AboutPage.js","pages/TutorialsPage.js","pages/HelpPage.js","pages/LoginPage.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Card","props","className","classes","card","children","AuthContext","React","createContext","token","isLoggedIn","login","logout","userInfo","email","level","userInfoHandler","AuthContextProvider","tokenData","localStorage","getItem","useState","setToken","setUserInfo","contextValue","setItem","removeItem","e","l","Provider","value","SIGN_IN_API","LoginForm","Form","useForm","form","authCtx","useContext","history","useHistory","logo","name","onFinish","values","fetch","method","body","JSON","stringify","password","returnSecureToken","headers","then","response","ok","json","Promise","reject","message","error","data","idToken","success","replace","catch","console","log","scrollToFirstError","Item","rules","type","required","prefix","MailOutlined","placeholder","Password","autoComplete","LockOutlined","submit","htmlType","help","href","target","rel","to","RESET_API","ResetForm","isExist","setIsExist","reset","onValuesChange","requestType","setTimeout","push","Error","validator","_","a","send","style","color","ArrowLeftOutlined","navLinks","title","path","Header","uid","useParams","Search","Input","menu","theme","onClick","key","icon","SettingOutlined","LogoutOutlined","header","nav","onSearch","search","activeClassName","active","map","link","index","avatar","overlay","placement","size","UserOutlined","NewProject","TextArea","projectColor","setProjectColor","project","build_time","Date","toISOString","toString","slice","project_name","manager","project_manager","project_color","hex","description","project_description","agreement","project_agreement","status","editable","info","allowClear","width","onChangeComplete","rows","maxLength","showCount","marginBottom","valuePropName","resolve","protocol","btn","fontWeight","backgroundColor","borderColor","danger","marginLeft","Sidebar","Sider","Layout","collapsed","setCollapsed","foldBtn","MenuUnfoldOutlined","MenuFoldOutlined","mode","height","borderRight","PieChartOutlined","DesktopOutlined","LineChartOutlined","ContainerOutlined","PanelLayout","Footer","position","top","textAlign","padding","zIndex","ProjectList","projectData","setProjectData","confirm","Modal","actions","dataIndex","render","EditOutlined","fontSize","showEditModal","DeleteOutlined","margin","showDeleteModal","CheckCircleOutlined","content","okText","okType","onOk","Math","random","onCancel","CloseCircleOutlined","TABLE_COLUMN","text","record","fetchProjectData","useCallback","storeData","modify_time","useEffect","scroll","x","y","pagination","columns","dataSource","ProjectContent","Content","url","useRouteMatch","Panel","ProjectPage","exact","ProjectPanel","MemberList","members","setMembers","fetchMemberData","memberData","id","username","time","register_time","defaultChecked","onChange","checked","MemberContent","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","NewMember","Option","Select","label","hasFeedback","dependencies","getFieldValue","initialValue","UPDATE_API","Settings","settings","displayName","photoUrl","getValueFromEvent","fileList","action","listType","maxCount","UploadOutlined","main","border","MemberPage","MemberPanel","QuotaList","overflowY","marginTop","layout","bordered","percent","QuotaContent","QuotaPanel","QuotaUpgrade","QuotaPage","ModelPie","config","appendPadding","angleField","colorField","radius","innerRadius","interactions","statistic","whiteSpace","overflow","textOverflow","formatter","DashboardGraph","DashboardContent","DashboardPage","DashboardPanel","md","ReportGraph","model","start","end","take","toFixed","column","ReportContent","defaultValue","options","ReportPanel","ReportPage","AboutPage","TutorialsPage","HelpPage","LoginPage","basename","process","subTitle","extra","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.343c5108.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ProjectContent_title__2Gz6P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__5yFbd\",\"logo\":\"Header_logo__2c0cK\",\"search\":\"Header_search__1_QZM\",\"nav\":\"Header_nav__2qdsB\",\"active\":\"Header_active__1GP9E\",\"avatar\":\"Header_avatar__12YV_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"project\":\"NewProject_project__2EKR6\",\"info\":\"NewProject_info__1s6vk\",\"protocol\":\"NewProject_protocol__m2Teu\",\"btn\":\"NewProject_btn__32Iey\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"LoginForm_login__2ISZM\",\"logo\":\"LoginForm_logo__1Go5w\",\"form\":\"LoginForm_form__3RZXX\",\"submit\":\"LoginForm_submit__Lzs9_\",\"help\":\"LoginForm_help__450w0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__1RYqX\",\"avatar\":\"Settings_avatar__1isyR\",\"main\":\"Settings_main__184S5\",\"password\":\"Settings_password__17Abx\",\"btn\":\"Settings_btn__1QRNK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reset\":\"ResetForm_reset__8lEB-\",\"form\":\"ResetForm_form__8S0V3\",\"send\":\"ResetForm_send__1AgrR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3BB1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"foldBtn\":\"Sidebar_foldBtn__CB8qk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewMember_form__3mmfV\",\"control\":\"NewMember_control__2lYui\",\"action\":\"NewMember_action__1XRnq\"};","import classes from '../../../styles/UI/Layout/Card.module.css';\r\n\r\nconst Card = (props) => {\r\n  return <div className={classes.card}>{props.children}</div>\r\n}\r\n\r\nexport default Card;","import React, { useState } from 'react';\r\n\r\nconst AuthContext = React.createContext({\r\n  token: null,\r\n  isLoggedIn: false,\r\n  login: (token) => {},\r\n  logout: () => {},\r\n  userInfo: {email: '', level: ''},\r\n  userInfoHandler: (email, level) => {}\r\n});\r\n\r\nconst retrieveToken = () => {\r\n  const storedToken = localStorage.getItem('token');\r\n\r\n  return {\r\n    token: storedToken,\r\n  };\r\n};\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const tokenData = retrieveToken();\r\n  const [token, setToken] = useState(tokenData.token);\r\n  const [userInfo, setUserInfo] = useState({email: '', level: ''});\r\n\r\n  // !!物件永遠回傳true\r\n  const userIsLoggedIn = !!token;\r\n\r\n  const loginHandler = (token) => {\r\n    setToken(token);\r\n    localStorage.setItem('token', token);\r\n  };\r\n\r\n  const logoutHandler = () => {\r\n    setToken(null);\r\n    setUserInfo({email: '', level: ''});\r\n    localStorage.removeItem('uid');\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('level');\r\n  };\r\n\r\n  const userInfoHandler = (e, l) => {\r\n    setUserInfo({email: e, level: l});\r\n    localStorage.setItem('level', l);\r\n    localStorage.setItem('uid', e);\r\n  };\r\n\r\n  const contextValue = {\r\n    token: token,\r\n    isLoggedIn: userIsLoggedIn,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n    userInfo: userInfo,\r\n    userInfoHandler: userInfoHandler,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n","import { useContext } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport classes from '../../styles/Login/LoginForm.module.css';\r\nimport { Form, Input, Button, message } from 'antd';\r\nimport { MailOutlined, LockOutlined } from '@ant-design/icons';\r\n\r\nimport Card from '../UI/Layout/Card';\r\n\r\nimport AuthContext from '../../store/auth-context';\r\n\r\n// 目前使用 Firebase Authentication模擬登入\r\nconst FIREBASE_KEY = 'AIzaSyAaf6guV8zB9_4R5xwuDDiQM0zaNzQWuWA';\r\nconst SIGN_IN_API = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${FIREBASE_KEY}`;\r\n\r\nconst LoginForm = () => {\r\n  const [form] = Form.useForm();\r\n\r\n  const authCtx = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  // TODO: 驗證USER登入 -> POST/auth/login\r\n  const loginAuthHandler = (values) => {\r\n    fetch(SIGN_IN_API, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        email: values.email,\r\n        password: values.password,\r\n        returnSecureToken: true,\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n        return Promise.reject(\r\n          message.error('The email is invalid or password is incorrect!'),\r\n        );\r\n      })\r\n      .then((data) => {\r\n        authCtx.login(data.idToken);\r\n        message.success('Login!');\r\n        authCtx.userInfoHandler(data.email, '');\r\n        if (data.email === 'owner@owner.com') {\r\n          authCtx.userInfoHandler(data.email, 'owner');\r\n          message.success('You are logged in as Owner!');\r\n        }\r\n        history.replace(`/project/${data.email}`);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <section className={classes.login}>\r\n      <Card>\r\n        <span className={classes.logo} />\r\n        <section className={classes.form}>\r\n          <h2>Member Login</h2>\r\n          <Form\r\n            form={form}\r\n            name='login'\r\n            onFinish={loginAuthHandler}\r\n            scrollToFirstError>\r\n            <Form.Item\r\n              name='email'\r\n              rules={[\r\n                {\r\n                  type: 'email',\r\n                  message: 'The email format is invalid!',\r\n                },\r\n                {\r\n                  required: true,\r\n                  message: 'The email is empty!',\r\n                },\r\n              ]}>\r\n              <Input prefix={<MailOutlined />} placeholder='Email@domain.com' />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name='password'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'The password is empty!',\r\n                },\r\n              ]}>\r\n              <Input.Password\r\n                placeholder='Password'\r\n                autoComplete='on'\r\n                prefix={<LockOutlined />}\r\n              />\r\n            </Form.Item>\r\n            <div className={classes.submit}>\r\n              <Button type='primary' htmlType='submit'>\r\n                LOGIN\r\n              </Button>\r\n            </div>\r\n            <div className={classes.help}>\r\n              <a\r\n                href='https://www.zerodimension.com.tw/default.aspx#contact'\r\n                target='_blank'\r\n                rel='noreferrer'>\r\n                <Button type='default'>Help</Button>\r\n              </a>\r\n              <Link to='/reset'>\r\n                <Button>Forget Password?</Button>\r\n              </Link>\r\n            </div>\r\n          </Form>\r\n        </section>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import { useState } from 'react';\r\nimport { useHistory, Link } from 'react-router-dom';\r\n\r\nimport { Form, Input, Button, message } from 'antd';\r\nimport { MailOutlined, ArrowLeftOutlined} from '@ant-design/icons';\r\nimport classes from '../../styles/Login/ResetForm.module.css';\r\n\r\nimport Card from '../UI/Layout/Card';\r\n// import Message from '../UI/Modal/Message';\r\n\r\n// 目前使用 Firebase Authentication模擬登出\r\nconst FIREBASE_KEY = 'AIzaSyAaf6guV8zB9_4R5xwuDDiQM0zaNzQWuWA';\r\nconst RESET_API = `https://identitytoolkit.googleapis.com/v1/accounts:sendOobCode?key=${FIREBASE_KEY}`;\r\n\r\nconst ResetForm = (props) => {\r\n  const [form] = Form.useForm();\r\n  const history = useHistory();\r\n  \r\n  const [isExist, setIsExist] = useState(true);\r\n\r\n  // TODO: 驗證USER登入 -> POST/auth/reset -> 發送重設密碼信件給已註冊的使用者\r\n  const resetPasswordHandler = (values) => {\r\n    fetch(RESET_API, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        email: values.email,\r\n        requestType: 'PASSWORD_RESET',\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          message.success('Reset email is sent, please check your email.');\r\n          setTimeout(() => {   \r\n            history.push('/');\r\n          }, 2000);\r\n        } else {\r\n          message.error('Email account does not exist!');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n  };\r\n\r\n  const emailEnter = () => {\r\n    setIsExist(true);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <section className={classes.reset}>\r\n      <Card>\r\n        <section className={classes.form}>\r\n          <Form\r\n            form={form}\r\n            onValuesChange={emailEnter}\r\n            onFinish={resetPasswordHandler}>\r\n            <h3>Reset Password</h3>\r\n            <Form.Item\r\n              name='email'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please enter your email to reset!',\r\n                },\r\n                {\r\n                  type: 'email',\r\n                  message: 'The email format is invalid!',\r\n                },\r\n                {\r\n                  validator: async (_, value) => {\r\n                    if (!isExist) {\r\n                      throw new Error('Email does not exist!');\r\n                    }\r\n                  },\r\n                },\r\n              ]}>\r\n              <Input prefix={<MailOutlined />} placeholder='name@domain.com' />\r\n            </Form.Item>\r\n            <div className={classes.send}>\r\n              <Form.Item>\r\n                <Link to='/'>\r\n                  <Button type='default' style={{ color: '#000' }}>\r\n                    <ArrowLeftOutlined />\r\n                    LOGIN\r\n                  </Button>\r\n                </Link>\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Button type='primary' htmlType='submit'>\r\n                  Send\r\n                </Button>\r\n              </Form.Item>\r\n            </div>\r\n          </Form>\r\n        </section>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ResetForm;\r\n","import { useContext } from 'react';\r\nimport { NavLink, useHistory, useParams } from 'react-router-dom';\r\n\r\nimport { Input, Avatar, Menu, Dropdown } from 'antd';\r\nimport {\r\n  UserOutlined,\r\n  SettingOutlined,\r\n  LogoutOutlined,\r\n} from '@ant-design/icons';\r\nimport classes from '../../../styles/UI/Layout/Header.module.css';\r\n\r\nimport AuthContext from '../../../store/auth-context';\r\n\r\nconst navLinks = [\r\n  {\r\n    title: 'About',\r\n    path: '/about',\r\n  },\r\n  {\r\n    title: 'Tutorials',\r\n    path: '/tutorials',\r\n  },\r\n  {\r\n    title: 'Help',\r\n    path: '/help',\r\n  },\r\n];\r\n\r\nconst Header = () => {\r\n  const { uid } = useParams();\r\n  // const { Header } = Layout;\r\n  const { Search } = Input;\r\n  const history = useHistory();\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  // 搜尋專案 -> 可能透過Antd Table Column Filter\r\n  const searchProjectHandler = (value) => {\r\n    console.log(value);\r\n  };\r\n\r\n  const userMenu = (e) => {\r\n    if (e.key === 'settings') {\r\n      history.push(`/members/${uid}/settings`);\r\n    }\r\n    if (e.key === 'logout') {\r\n      authCtx.logout();\r\n      history.replace('/');\r\n    }\r\n  };\r\n\r\n  const menu = (\r\n    <Menu theme='dark' onClick={userMenu}>\r\n      <Menu.Item key='settings' icon={<SettingOutlined />}>\r\n        {/* 導向個人資訊頁面 -> /uid/settings */}\r\n        Setting\r\n      </Menu.Item>\r\n      <Menu.Item key='logout' icon={<LogoutOutlined />}>\r\n        Logout\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <header className={classes.header}>\r\n      <span className={classes.logo}>\r\n        <NavLink to={`/project/${uid}`}>AIWinOps</NavLink>\r\n      </span>\r\n      <nav className={classes.nav}>\r\n        <div className={classes.menu}>\r\n          <ul>\r\n            <Search\r\n              placeholder='Search Project'\r\n              onSearch={searchProjectHandler}\r\n              className={classes.search}\r\n            />\r\n            <li>\r\n              <NavLink to={`/project/${uid}`} activeClassName={classes.active}>\r\n                Home\r\n              </NavLink>\r\n            </li>\r\n            {navLinks.map((link, index) => (\r\n              <li key={index}>\r\n                <NavLink to={`${link.path}/${uid}`} activeClassName={classes.active}>\r\n                  {link.title}\r\n                </NavLink>\r\n              </li>\r\n            ))}\r\n            <span className={classes.avatar}>\r\n              <Dropdown overlay={menu} placement='bottomRight'>\r\n                <Avatar size={50} icon={<UserOutlined />}></Avatar>\r\n              </Dropdown>\r\n            </span>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useState } from 'react';\r\nimport { useHistory, useParams} from 'react-router-dom';\r\n\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport { CirclePicker } from 'react-color';\r\nimport classes from '../../../styles/Panel/Projects/NewProject.module.css';\r\n\r\nimport NavHeader from '../../UI/Layout/Header';\r\n\r\nconst PROJECT_URL = 'https://aiwinops-default-rtdb.firebaseio.com/projects.json';\r\n\r\nconst NewProject = () => {\r\n  const { TextArea } = Input;\r\n  const [form] = Form.useForm();\r\n  const history = useHistory();\r\n  const { uid } = useParams();\r\n\r\n  const [projectColor, setProjectColor] = useState('#fff');\r\n\r\n  const getColor = (color) => {\r\n    setProjectColor(color.hex);\r\n  };\r\n\r\n  // 將新專案新增至資料庫 /PUSH/New-Project\r\n  const registerNewProject = (values) => {\r\n    fetch(PROJECT_URL, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        build_time: new Date().toISOString().toString().slice(0, -5),\r\n        name: values.project_name,\r\n        manager: values.project_manager,\r\n        color: values.project_color.hex,\r\n        description: values.project_description,\r\n        agreement: values.project_agreement,\r\n        status: 'In Progress',\r\n        editable:　true,\r\n      }),\r\n      headers: { 'Content-Type': 'application/json'}\r\n    }).then(response => {\r\n      return response.json();\r\n    }).catch((error) => {\r\n      throw new Error(error);\r\n    });\r\n    history.push(`/project/${uid}`);\r\n  };\r\n\r\n  const cancleProjectHandler = () => {\r\n    history.push(`/project/${uid}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavHeader />\r\n      <section className={classes.project}>\r\n        <h2>新專案</h2>\r\n        <Form\r\n          form={form}\r\n          name='project'\r\n          onFinish={registerNewProject}\r\n          scrollToFirstError>\r\n          <div className={classes.info}>\r\n            <h4>專案名稱</h4>\r\n            <Form.Item\r\n              name='project_name'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Project name should not be empty!',\r\n                },\r\n              ]}>\r\n              <Input placeholder='Project Name' allowClear />\r\n            </Form.Item>\r\n            <h4>管理者</h4>\r\n            <Form.Item\r\n              name='project_manager'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Project manager should be provided!',\r\n                },\r\n              ]}>\r\n              <Input placeholder='Project Manager' allowClear />\r\n            </Form.Item>\r\n            <h4>專案顏色</h4>\r\n            <Form.Item\r\n              name='project_color'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Choose color for new project!',\r\n                },\r\n              ]}>\r\n              <CirclePicker\r\n                width={300}\r\n                color={projectColor}\r\n                onChangeComplete={getColor}\r\n              />\r\n            </Form.Item>\r\n            <h4>專案描述(Optional)</h4>\r\n            <Form.Item name='project_description'>\r\n              <TextArea\r\n                placeholder='Project Description'\r\n                rows={5}\r\n                maxLength={300}\r\n                showCount\r\n                allowClear\r\n                style={{ marginBottom: '2.5rem' }}\r\n              />\r\n            </Form.Item>\r\n          </div>\r\n          <Form.Item\r\n            name='project_agreement'\r\n            valuePropName='checked'\r\n            rules={[\r\n              {\r\n                validator: (_, value) =>\r\n                  value\r\n                    ? Promise.resolve()\r\n                    : Promise.reject(new Error('使用服務前請先閱讀說明')),\r\n              },\r\n            ]}>\r\n            <div className={classes.protocol}>\r\n              <h1>資料協議</h1>\r\n              <section>\r\n                請您在開始使用AIWin系列產品(以下簡稱\"本產品\")前，務必仔細閱讀並同意《用戶協議》(以下簡稱\"本協議\")\r\n                中規定的所有權利和限制。\r\n              </section>\r\n              <Checkbox>Accept</Checkbox>\r\n            </div>\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <div className={classes.btn}>\r\n              <Button\r\n                type='primary'\r\n                htmlType='submit'\r\n                style={{\r\n                  fontWeight: '600',\r\n                  backgroundColor: '#096dd9',\r\n                  borderColor: '#096dd9',\r\n                }}>\r\n                建立專案\r\n              </Button>\r\n              <Button\r\n                type='default'\r\n                danger\r\n                onClick={cancleProjectHandler}\r\n                style={{ marginLeft: '1rem' }}>\r\n                取消\r\n              </Button>\r\n            </div>\r\n          </Form.Item>\r\n        </Form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewProject;\r\n","import { useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { Layout, Menu, Button } from 'antd';\r\nimport {\r\n  PieChartOutlined,\r\n  DesktopOutlined,\r\n  ContainerOutlined,\r\n  LineChartOutlined,\r\n  UserOutlined,\r\n  MenuFoldOutlined,\r\n  MenuUnfoldOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport classes from '../../../styles/UI/Layout/Sidebar.module.css';\r\n\r\nconst Sidebar = () => {\r\n  const { Sider } = Layout;\r\n  const { uid } = useParams();\r\n  const history = useHistory();\r\n\r\n  const [collapsed, setCollapsed] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    setCollapsed((collapsed) => !collapsed);\r\n  };\r\n\r\n  const panelInfoRouter = (e) => {\r\n    history.push(`/${e.key}/${uid}`);\r\n  };\r\n\r\n  return (\r\n    <Sider width={200} collapsed={collapsed}>\r\n      <Button type='primary' onClick={toggleMenu} className={classes.foldBtn}>\r\n        {collapsed ? <MenuUnfoldOutlined /> : <MenuFoldOutlined />}\r\n      </Button>\r\n      <Menu\r\n        mode='inline'\r\n        theme='dark'\r\n        \r\n        style={{ height: '100%', borderRight: 0 }}\r\n        onClick={panelInfoRouter}>\r\n        <Menu.Item key='project' icon={<PieChartOutlined />}>\r\n          Project\r\n        </Menu.Item>\r\n        <Menu.Item key='dashboard' icon={<DesktopOutlined />}>\r\n          Dashboard\r\n        </Menu.Item>\r\n        <Menu.Item key='report' icon={<LineChartOutlined />}>\r\n          Report\r\n        </Menu.Item>\r\n        <Menu.Item key='quota' icon={<ContainerOutlined />}>\r\n          Quota\r\n        </Menu.Item>\r\n        <Menu.Item key='members' icon={<UserOutlined />}>\r\n          Members\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Sider>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import { useContext } from 'react';\r\n\r\nimport { Layout } from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport Header from './Header';\r\nimport Sidebar from './Sidebar';\r\n\r\n\r\nimport AuthContext from '../../../store/auth-context';\r\n\r\nconst PanelLayout = (props) => {\r\n  const { Footer } = Layout;\r\n\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  return (\r\n    <Layout>\r\n      <Header />\r\n      <Layout\r\n        style={{\r\n          position: 'fixed',\r\n          width: '100%',\r\n          height: '90%',\r\n          top: '5rem',\r\n        }}>\r\n        {authCtx.userInfo.level === 'owner' ? <Sidebar /> : ''}\r\n        <Layout style={{ backgroundColor: '#fff' }}>  \r\n          {props.children}\r\n          <Footer style={{  textAlign: 'center', padding: '10px', zIndex: '20' }}>Copyright @ 2021 AIWinOps. All Rights Reserved</Footer>\r\n        </Layout>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default PanelLayout;\r\n","import { useState, useEffect, useCallback, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Table, Space, Modal } from 'antd';\r\nimport {\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  CloseCircleOutlined,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport AuthContext from '../../../store/auth-context';\r\n\r\nconst PROJECT_URL =\r\n  'https://aiwinops-default-rtdb.firebaseio.com/projects.json';\r\n\r\nconst ProjectList = (props) => {\r\n  const [projectData, setProjectData] = useState();\r\n  const { confirm } = Modal;\r\n\r\n  const authCtx = useContext(AuthContext);\r\n  const level = authCtx.userInfo.level;\r\n  const actions =\r\n    level === 'owner'\r\n      ? {\r\n          title: '其他操作',\r\n          key: 'editable',\r\n          dataIndex: 'editable',\r\n          render: () => {\r\n            return (\r\n              <Space>\r\n                {/* 連結Icon到各自專案的編輯畫面 */}\r\n                <EditOutlined\r\n                  style={{ fontSize: '150%', color: '#096dd9' }}\r\n                  onClick={showEditModal}\r\n                />\r\n                <DeleteOutlined\r\n                  style={{\r\n                    fontSize: '150%',\r\n                    margin: '0 1rem',\r\n                    color: '#ff4d4f',\r\n                  }}\r\n                  onClick={showDeleteModal}\r\n                />\r\n              </Space>\r\n            );\r\n          },\r\n        }\r\n      : {\r\n          title: '其他操作',\r\n          key: 'editable',\r\n          dataIndex: 'editable',\r\n        };\r\n\r\n  // TODO: 取得後端資料庫的專案資料\r\n  const showEditModal = () => {\r\n    confirm({\r\n      title: 'CHECK',\r\n      icon: <CheckCircleOutlined style={{ color: '#096dd9' }} />,\r\n      content: 'Would you like to edit this project?',\r\n      okText: 'Confirm',\r\n      okType: 'primary',\r\n      onOk() {\r\n        return new Promise((resolve, reject) => {\r\n          setTimeout(Math.random > 0.5 ? resolve : reject, 1000);\r\n        })\r\n          .then(() => {\r\n            // GET method: 取得資料庫專案資料\r\n          })\r\n          .catch(() => {\r\n            // GET method failed\r\n          });\r\n      },\r\n      onCancel() {},\r\n    });\r\n  };\r\n\r\n  // TODO: 刪除後端資料庫的專案資料\r\n  const showDeleteModal = () => {\r\n    confirm({\r\n      title: 'DANGER',\r\n      icon: <CloseCircleOutlined style={{ color: '#ff4d4f' }} />,\r\n      content: 'Are you sure to delete this project?',\r\n      okText: 'Delete',\r\n      okType: 'danger',\r\n      onOk() {\r\n        return new Promise((resolve, reject) => {\r\n          setTimeout(Math.random > 0.5 ? resolve : reject, 2000);\r\n        })\r\n          .then(() => {\r\n            // POST method: 刪除資料庫專案資料\r\n          })\r\n          .catch(() => {\r\n            // POST method failed\r\n          });\r\n      },\r\n      onCancel() {},\r\n    });\r\n  };\r\n\r\n  const TABLE_COLUMN = [\r\n    {\r\n      title: '專案名稱',\r\n      key: 'name',\r\n      dataIndex: 'name',\r\n      render: (text, record) => {\r\n        return <Link to='/project/checking'>{text}</Link>;\r\n      },\r\n    },\r\n    {\r\n      title: '狀態',\r\n      key: 'status',\r\n      dataIndex: 'status',\r\n      editable: true,\r\n    },\r\n    {\r\n      title: '管理者',\r\n      key: 'manager',\r\n      dataIndex: 'manager',\r\n    },\r\n    {\r\n      title: '建立日期',\r\n      key: 'build_time',\r\n      dataIndex: 'build_time',\r\n    },\r\n    {\r\n      title: '修改日期',\r\n      key: 'modify_time',\r\n      dataIndex: 'modify_time',\r\n    },\r\n    actions,\r\n  ];\r\n\r\n  // 抓取使用者專案的資料 -> GET/ProjectData\r\n  const fetchProjectData = useCallback(() => {\r\n    fetch(PROJECT_URL)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        const storeData = [];\r\n        for (const key in data) {\r\n          storeData.push({\r\n            key: key,\r\n            name: data[key].name,\r\n            status: data[key].status,\r\n            manager: data[key].manager,\r\n            build_time: data[key].build_time,\r\n            modify_time: data[key].modify_time,\r\n          });\r\n        }\r\n        setProjectData(storeData);\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchProjectData();\r\n  }, [fetchProjectData]);\r\n\r\n  return (\r\n    <div>\r\n      <Table\r\n        scroll={{ x: '1000', y: '500' }}\r\n        pagination={false}\r\n        columns={TABLE_COLUMN}\r\n        dataSource={projectData}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import { Fragment, useContext } from 'react';\r\nimport { useRouteMatch, useHistory } from 'react-router-dom';\r\n\r\nimport classes from '../../../styles/Panel/Projects/ProjectContent.module.css';\r\nimport { Layout, Button } from 'antd';\r\n\r\nimport ProjectList from './ProjectList';\r\n\r\nimport AuthContext from '../../../store/auth-context';\r\n\r\nconst ProjectContent = () => {\r\n  const { Content } = Layout;\r\n\r\n  const { url } = useRouteMatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  const newProjectHandler = () => {\r\n    console.log(url);\r\n    history.push(`${url}/new-project`);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Content style={{ margin: '0 30px' }}>\r\n        <div className={classes.title}>\r\n          <h3>Projects</h3>\r\n          {authCtx.userInfo.level === 'owner' ? (\r\n            <Button\r\n              type='primary'\r\n              onClick={newProjectHandler}\r\n              style={{ fontWeight: '700' }}>\r\n              +新專案\r\n            </Button>\r\n          ) : (\r\n            ''\r\n          )}\r\n        </div>\r\n        <ProjectList />\r\n      </Content>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProjectContent;\r\n","import PanelLayout from '../../UI/Layout/PanelLayout';\r\nimport ProjectContent from './ProjectContent';\r\n\r\nconst Panel = () => {\r\n  return (\r\n    <PanelLayout>\r\n      <ProjectContent />\r\n    </PanelLayout>\r\n  );\r\n}\r\n\r\nexport default Panel;","import { Route, Switch, useRouteMatch } from 'react-router-dom';\r\n\r\nimport NewProject from '../components/Panel/Projects/NewProject';\r\nimport ProjectPanel from '../components/Panel/Projects/ProjectPanel';\r\n\r\nconst ProjectPage = () => {\r\n  const { path } = useRouteMatch();  \r\n\r\n  return (\r\n    <Switch>\r\n      <Route path={`${path}`} exact>\r\n        <ProjectPanel />\r\n      </Route>\r\n      <Route path={`${path}/new-project`}>\r\n        <NewProject />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default ProjectPage;\r\n","import { useState, useEffect, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Table, Switch, Space } from 'antd';\r\n\r\nimport classes from '../../../styles/Panel/Member/MemberList.module.css';\r\n\r\n// 目前使用 Firebase Realtime Database 模擬會員資料\r\nconst MEMBER_URL = 'https://aiwinops-default-rtdb.firebaseio.com/members.json';\r\n\r\n// Firebase Authentication模擬GET會員API串接\r\n// const FIREBASE_KEY = 'AIzaSyAaf6guV8zB9_4R5xwuDDiQM0zaNzQWuWA';\r\n// const MEMBER_LIST_API = `https://identitytoolkit.googleapis.com/v1/accounts:lookup?key=${FIREBASE_KEY}`;\r\n\r\nconst MemberList = () => {\r\n  const [members, setMembers] = useState();\r\n  \r\n\r\n  // TODO: 抓取會員的資料 -> GET/MemberData\r\n  const fetchMemberData = useCallback(() => {\r\n    fetch(MEMBER_URL)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        const memberData = [];\r\n        for (const key in data) {\r\n          memberData.push({\r\n            key: key,\r\n            id: data[key].name,\r\n            name: data[key].username,\r\n            level: data[key].level,\r\n            time: data[key].register_time,\r\n            status: data[key].status,\r\n            email: data[key].email,\r\n          });\r\n        }\r\n        setMembers(memberData);\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n  }, [setMembers]);\r\n\r\n  useEffect(() => {\r\n    fetchMemberData();\r\n  }, [fetchMemberData]);\r\n\r\n  const TABLE_COLUMN = [\r\n    {\r\n      title: '名稱',\r\n      key: 'name',\r\n      dataIndex: 'name',\r\n      width: '10%',\r\n    },\r\n    {\r\n      title: '權限',\r\n      key: 'level',\r\n      dataIndex: 'level',\r\n      width: '10%',\r\n    },\r\n    {\r\n      title: '註冊時間',\r\n      key: 'time',\r\n      dataIndex: 'time',\r\n      width: '20%',\r\n    },\r\n    {\r\n      title: '信箱',\r\n      key: 'email',\r\n      dataIndex: 'email',\r\n      render: (text) => {\r\n        return <Link to='/members/checking'>{text}</Link>;\r\n      },\r\n    },\r\n    {\r\n      title: '狀態',\r\n      key: 'status',\r\n      dataIndex: 'status',\r\n      render: (status) => {\r\n        // -> 更新資料庫會員的狀態\r\n        const onToggle = (checked) => {\r\n          status = checked;\r\n        };\r\n        return (\r\n          <Space>\r\n            <Switch defaultChecked onChange={onToggle} />\r\n          </Space>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className={classes.members}>\r\n      <div>\r\n        <Table\r\n          scroll={{ x: 1000, y: 400 }}\r\n          pagination={false}\r\n          columns={TABLE_COLUMN}\r\n          dataSource={members}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MemberList;\r\n","import { useHistory, useRouteMatch } from 'react-router-dom';\r\n\r\nimport { Layout, Button } from 'antd';\r\nimport classes from '../../../styles/Panel/Projects/ProjectContent.module.css';\r\n\r\nimport MemberList from './MemberList';\r\n\r\nconst MemberContent = () => {\r\n  const { Content } = Layout;\r\n  const { url } = useRouteMatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const newMemberHandler = () => {\r\n    history.push(`${url}/new-member`);\r\n  };\r\n\r\n  return (\r\n    <Layout style={{ backgroundColor: '#fff' }}>\r\n      <Content style={{ margin: '0 30px' }}>\r\n        <div className={classes.title}>\r\n          <h3>Members</h3>\r\n          <Button\r\n            type='primary'\r\n            style={{ fontWeight: '700' }}\r\n            onClick={newMemberHandler}>\r\n            +新成員\r\n          </Button>\r\n        </div>\r\n        <MemberList />\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default MemberContent;\r\n","import PanelLayout from '../../UI/Layout/PanelLayout';\r\nimport MemberContent from './MemberContent';\r\n\r\nconst Panel = () => {\r\n  return (\r\n    <PanelLayout>\r\n      <MemberContent />\r\n    </PanelLayout>\r\n  );\r\n};\r\n\r\nexport default Panel;\r\n","import { useHistory, useParams } from 'react-router-dom';\r\n\r\nimport { Form, Input, Checkbox, Button, Select } from 'antd';\r\nimport classes from '../../../styles/Panel/Member/NewMember.module.css';\r\n\r\nimport NavHeader from '../../UI/Layout/Header';\r\n\r\n// 目前使用 Firebase Realtime Database 模擬會員資料\r\nconst MEMBER_URL = 'https://aiwinops-default-rtdb.firebaseio.com/members.json';\r\n\r\n// const FIREBASE_KEY = 'AIzaSyAaf6guV8zB9_4R5xwuDDiQM0zaNzQWuWA';\r\n// const SIGN_UP_API = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${FIREBASE_KEY}`;\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 16,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n    },\r\n  },\r\n};\r\n\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nconst NewMember = () => {\r\n  const [form] = Form.useForm();\r\n  const { uid } = useParams();\r\n  const history = useHistory();\r\n\r\n  const { Option } = Select;\r\n\r\n  // TODO: 新增會員資料 -> POST/MemberData\r\n  const registerNewMember = (values) => {\r\n    console.log('Received values of form: ', values);\r\n    fetch(MEMBER_URL, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        register_time: new Date().toISOString().toString().slice(0, -5),\r\n        email: values.email,\r\n        password: values.password,\r\n        username: values.username,\r\n        level: values.level,\r\n        status: true,\r\n        agreement: values.agreement,\r\n        returnSecureToken: true,\r\n      }),\r\n      headers: { 'Content-Type': 'application/json' },\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n    history.replace(`/members/${uid}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavHeader />\r\n      <section className={classes.form}>\r\n        <h2>New Member</h2>\r\n        <Form\r\n          {...formItemLayout}\r\n          form={form}\r\n          name='register'\r\n          onFinish={registerNewMember}\r\n          scrollToFirstError>\r\n          <Form.Item\r\n            name='username'\r\n            label='Username'\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please enter username!',\r\n              },\r\n            ]}>\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name='email'\r\n            label='E-mail'\r\n            rules={[\r\n              {\r\n                type: 'email',\r\n                message: 'The email format is invalid!',\r\n              },\r\n              {\r\n                required: true,\r\n                message: 'Please enter email!',\r\n              },\r\n            ]}>\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name='password'\r\n            label='Password'\r\n            hasFeedback\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your password!',\r\n              },\r\n            ]}>\r\n            <Input.Password autoComplete='password' />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name='confirm'\r\n            label='Confirm Password'\r\n            dependencies={['password']}\r\n            hasFeedback\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your password!',\r\n              },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (!value || getFieldValue('password') === value) {\r\n                    return Promise.resolve();\r\n                  }\r\n                  return Promise.reject(new Error('Passwords are not match!'));\r\n                },\r\n              }),\r\n            ]}>\r\n            <Input.Password autoComplete='confirm' />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name='level'\r\n            label='Level'\r\n            initialValue='Owner'\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please provide authorization to the member!',\r\n              },\r\n            ]}>\r\n            <Select>\r\n              <Option value='Owner'>Owner</Option>\r\n              <Option value='Manager'>Manager</Option>\r\n              {/* 其他的權限設定 */}\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            {...tailFormItemLayout}\r\n            name='agreement'\r\n            valuePropName='checked'\r\n            rules={[\r\n              {\r\n                validator: (_, value) =>\r\n                  value\r\n                    ? Promise.resolve()\r\n                    : Promise.reject(new Error('Please read the agreement!')),\r\n              },\r\n            ]}>\r\n            <Checkbox>\r\n              我已經閱讀\r\n              <a\r\n                href='https://www.zerodimension.com.tw/html/HDUT%20PBL%20PRIVACY.htm'\r\n                target='_blank'\r\n                rel='noreferrer'>\r\n                相關聲明\r\n              </a>\r\n            </Checkbox>\r\n          </Form.Item>\r\n          <Form.Item {...tailFormItemLayout}>\r\n            <Button type='primary' htmlType='submit'>\r\n              新增會員\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewMember;\r\n","import { useContext } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport classes from '../../../styles/Panel/Member/Settings.module.css';\r\nimport { Avatar, Button, Form, Input, Upload, message } from 'antd';\r\nimport {\r\n  ArrowLeftOutlined,\r\n  UploadOutlined,\r\n  UserOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport NavHeader from '../../UI/Layout/Header';\r\n\r\nimport AuthContext from '../../../store/auth-context';\r\n\r\n// 目前使用 Firebase Authentication模擬修改使用者資訊\r\nconst FIREBASE_KEY = 'AIzaSyAaf6guV8zB9_4R5xwuDDiQM0zaNzQWuWA';\r\nconst UPDATE_API = `https://identitytoolkit.googleapis.com/v1/accounts:update?key=${FIREBASE_KEY}`;\r\n\r\nconst Settings = () => {\r\n  const [form] = Form.useForm();\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  const avatarFile = (e) => {\r\n    return e && e.fileList;\r\n  };\r\n\r\n  // TODO: 更新使用者資訊 POST/uid/uinfo\r\n  const updateProfile = (values) => {\r\n    fetch(UPDATE_API, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        idToken: authCtx.token,\r\n        displayName: values.username,\r\n        photoUrl: values.avatar,\r\n        email: values.email,\r\n      }),\r\n      headers: { 'Content-Type': 'application/json'}\r\n    }).then(response => {\r\n      if(response.ok){\r\n        message.success('成功更新個人資訊!');\r\n      } else {\r\n        message.error('無法更新個人資訊!');\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavHeader />\r\n      <section className={classes.settings}>\r\n        <h2>個人設定</h2>\r\n        <Form\r\n          form={form}\r\n          name='settings'\r\n          onFinish={updateProfile}\r\n          scrollToFirstError>\r\n          <div className={classes.avatar}>\r\n            <section className='left'>\r\n              <h3>大頭照</h3>\r\n              <p>\r\n                上傳新的照片或移除當前的照片\r\n              </p>\r\n            </section>\r\n\r\n            <section className='right'>\r\n              <Avatar size={80} icon={<UserOutlined />} style={{marginBottom: '1rem'}}/>\r\n              <Form.Item\r\n                name='upload'\r\n                valuePropName='fileList'\r\n                getValueFromEvent={avatarFile}>\r\n                <Upload\r\n                  name='avatar'\r\n                  action='/upload.do'\r\n                  listType='picture'\r\n                  maxCount={1}>\r\n                  <Button icon={<UploadOutlined />}>上傳</Button>\r\n                </Upload>\r\n              </Form.Item>\r\n            </section>\r\n          </div>\r\n          <div className={classes.main}>\r\n            <section className='left'>\r\n              <h3>主設定</h3>\r\n              <p>資訊將會顯示在人物簡介中</p>\r\n            </section>\r\n            <section className='right'>\r\n              <Form.Item name='username' label='Username'>\r\n                <Input />\r\n              </Form.Item>\r\n              <Form.Item name='email' label='E-mail'>\r\n                <Input />\r\n              </Form.Item>\r\n            </section>\r\n          </div>\r\n          <div className={classes.password}>\r\n            <section className='left'>\r\n              <h3>更換密碼</h3>\r\n              <p>\r\n                成功更新密碼後將返回登入頁面\r\n              </p>\r\n            </section>\r\n            <section className='right'>\r\n              <Form.Item name='current_password' label='Current Password'>\r\n                <Input.Password />\r\n              </Form.Item>\r\n              <Form.Item name='password' label='New Password'>\r\n                <Input.Password />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name='confirm'\r\n                label='Confirm Password'\r\n                dependencies={['password']}\r\n                hasFeedback\r\n                rules={[\r\n                  ({ getFieldValue }) => ({\r\n                    validator(_, value) {\r\n                      if (!value || getFieldValue('password') === value) {\r\n                        return Promise.resolve();\r\n                      }\r\n                      return Promise.reject(\r\n                        new Error('New Passwords are not match!'),\r\n                      );\r\n                    },\r\n                  }),\r\n                ]}>\r\n                <Input.Password />\r\n              </Form.Item>\r\n            </section>\r\n          </div>\r\n          <section className={classes.btn}>\r\n            <Form.Item>\r\n              <Link to={`/project/${authCtx.userInfo.email}`}>\r\n                <Button\r\n                  type='link'\r\n                  style={{ color: '#000', border: '1px solid #555' }}>\r\n                  <ArrowLeftOutlined />\r\n                  返回專案\r\n                </Button>\r\n              </Link>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button\r\n                type='primary'\r\n                htmlType='submit'\r\n                style={{ fontWeight: '600' }}>\r\n                更新個人資料\r\n              </Button>\r\n            </Form.Item>\r\n          </section>\r\n        </Form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import { Route, Switch, useRouteMatch } from 'react-router-dom';\r\n\r\nimport MemberPanel from '../components/Panel/Members/MemberPanel';\r\nimport NewMember from '../components/Panel/Members/NewMember';\r\nimport Settings from '../components/Panel/Members/Settings';\r\n\r\nconst MemberPage = () => {\r\n  const { path } = useRouteMatch();\r\n  return (\r\n    <Switch>\r\n      <Route path={`${path}`} exact>\r\n        <MemberPanel />\r\n      </Route>\r\n      <Route path={`${path}/new-member`}>\r\n        <NewMember />\r\n      </Route>\r\n      <Route path={`${path}/settings`}>\r\n        <Settings />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default MemberPage;\r\n","import { Descriptions, Card, Badge, Progress, Tooltip } from 'antd';\r\n\r\nconst QuotaList = () => {\r\n  return (\r\n    <Card\r\n      style={{\r\n        width: '100%',\r\n        height: '500px',\r\n        overflowY: 'scroll',\r\n        marginTop: '1rem',\r\n      }}>\r\n      <Descriptions title='Your Solution' layout='vertical' bordered>\r\n        <Descriptions.Item label='Product'>Cloud Database</Descriptions.Item>\r\n        <Descriptions.Item label='Billing Mode'>Paid</Descriptions.Item>\r\n        <Descriptions.Item label='Automatic Renewal'>YES</Descriptions.Item>\r\n        <Descriptions.Item label='Build time'>\r\n          2018-04-24 18:00:00\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Status' span={3}>\r\n          <Badge status='processing' text='Running' />\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Member' span={3}>\r\n          <Tooltip title='專案成員額度'>\r\n            <span>In used: 4</span>\r\n          </Tooltip>\r\n          <Progress percent={40} />\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Disk' span={3}>\r\n          <Tooltip title='專案硬碟使用率'>\r\n            <span>In used: 6GB</span>\r\n          </Tooltip>\r\n          <Progress percent={60} />\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='GPU' span={3}>\r\n          <Tooltip title='專案GPU使用率'>\r\n            <span>Average Usage: 82%</span>\r\n          </Tooltip>\r\n          <Progress percent={82} />\r\n        </Descriptions.Item>\r\n      </Descriptions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default QuotaList;\r\n","import { Fragment } from 'react';\r\nimport { useRouteMatch, useHistory } from 'react-router-dom';\r\n\r\nimport classes from '../../../styles/Panel/Projects/ProjectContent.module.css';\r\nimport { Layout, Button } from 'antd';\r\n\r\n\r\nimport QuotaList from './QuotaList';\r\n\r\nconst QuotaContent = () => {\r\n  const { Content } = Layout;\r\n\r\n  const { url } = useRouteMatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const quotaUpgrade = () => {\r\n    console.log(url);\r\n    history.push(`${url}/quota-upgrade`);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Content style={{ margin: '0 30px' }}>\r\n        <div className={classes.title}>\r\n          <h3>Quota</h3>\r\n          <Button\r\n            type='primary'\r\n            onClick={quotaUpgrade}\r\n            style={{ fontWeight: '700' }}>\r\n            Upgrade\r\n          </Button>\r\n        </div>\r\n        <QuotaList />\r\n      </Content>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuotaContent;\r\n","import PanelLayout from '../../UI/Layout/PanelLayout';\r\nimport QuotaContent from './QuotaContent';\r\n\r\nconst QuotaPanel = () => {\r\n  return (\r\n    <PanelLayout>\r\n      <QuotaContent />\r\n    </PanelLayout>\r\n  );\r\n};\r\n\r\nexport default QuotaPanel;\r\n","import { useHistory } from 'react-router-dom';\r\n\r\nimport classes from '../../../styles/Panel/Projects/NewProject.module.css';\r\n\r\nimport NavHeader from '../../UI/Layout/Header';\r\n\r\nconst QuotaUpgrade = () => {\r\n  const history = useHistory();\r\n  console.log(history);\r\n  return (\r\n    <div>\r\n      <NavHeader />\r\n      <section className={classes.project}>\r\n        <h2>調整專案額度</h2>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuotaUpgrade;\r\n","import { Route, Switch, useRouteMatch } from 'react-router-dom';\r\n\r\nimport QuotaPanel from '../components/Panel/Quota/QuotaPanel';\r\nimport QuotaUpgrade from '../components/Panel/Quota/QuotaUpgrade';\r\n\r\nconst QuotaPage = () => {\r\n  const { path } = useRouteMatch();\r\n  return (\r\n    <Switch>\r\n      <Route path={`${path}`} exact>\r\n        <QuotaPanel />\r\n      </Route>\r\n      <Route path={`${path}/quota-upgrade`}>\r\n        <QuotaUpgrade />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default QuotaPage;\r\n","import { Pie } from '@ant-design/charts';\r\n\r\nconst ModelPie = () => {\r\n    // 資料數據比例\r\n    let data = [\r\n    {\r\n      type: 'Data',\r\n      value: 60,\r\n    },\r\n    {\r\n      type: 'Model',\r\n      value: 30,\r\n    },\r\n    {\r\n      type: '限度邏輯',\r\n      value: 10,\r\n    },\r\n  ];\r\n\r\n  let config = {\r\n    appendPadding: 10,\r\n    data: data,\r\n    angleField: 'value',\r\n    colorField: 'type',\r\n    radius: 1,\r\n    innerRadius: 0.4,\r\n    label: {\r\n      type: 'inner',\r\n      offset: '-50%',\r\n      content: '{value}%',\r\n      style: {\r\n        textAlign: 'center',\r\n        fontSize: 12,\r\n      },\r\n    },\r\n    interactions: [{ type: 'element-selected' }, { type: 'element-active' }],\r\n    statistic: {\r\n      title: false,\r\n      content: {\r\n        style: {\r\n          whiteSpace: 'pre-wrap',\r\n          overflow: 'hidden',\r\n          textOverflow: 'ellipsis',\r\n        },\r\n        formatter: function formatter() {\r\n          return 'Data Model';\r\n        },\r\n      },\r\n    },\r\n  };\r\n  return <Pie {...config} />;\r\n};\r\n\r\nexport default ModelPie;","import { Card, Descriptions, Progress, Tooltip } from 'antd';\r\nimport ModelPie from './ModelPie';\r\n\r\nconst DashboardGraph = () => {\r\n  return (\r\n    <Card\r\n      style={{\r\n        width: '100%',\r\n        height: '600px',\r\n        overflowY: 'scroll'\r\n      }}>\r\n      <Card>\r\n        <Descriptions title='Training Process' layout='horizontal' bordered>\r\n          <Descriptions.Item\r\n            label='Data'\r\n            span={1}\r\n            style={{ textAlign: 'center' }}>\r\n            <Tooltip title='已訓練資料集'>\r\n              <Progress type='circle' percent={60} />\r\n            </Tooltip>\r\n          </Descriptions.Item>\r\n          <Descriptions.Item\r\n            label='Model'\r\n            span={1}\r\n            style={{ textAlign: 'center' }}>\r\n            <Tooltip title='模型訓練進度'>\r\n              <Progress type='circle' percent={70} />\r\n            </Tooltip>\r\n          </Descriptions.Item>\r\n          <Descriptions.Item\r\n            label='Logic'\r\n            span={1}\r\n            style={{ textAlign: 'center' }}>\r\n            <Tooltip title='限度邏輯'>\r\n              <Progress type='circle' percent={15} />\r\n            </Tooltip>\r\n          </Descriptions.Item>\r\n        </Descriptions>\r\n      </Card>\r\n      <Card>\r\n        <Descriptions title='Indicators' layout='vertical' bordered>\r\n          <Descriptions.Item label='Graph'>\r\n            <ModelPie />\r\n          </Descriptions.Item>\r\n        </Descriptions>\r\n      </Card>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DashboardGraph;\r\n","import { Fragment } from 'react';\r\nimport { useRouteMatch, useHistory } from 'react-router-dom';\r\n\r\nimport classes from '../../../styles/Panel/Projects/ProjectContent.module.css';\r\nimport { Layout } from 'antd';\r\n\r\nimport DashboardGraph from './DashboardGraph';\r\n\r\nconst DashboardContent = () => {\r\n  const { Content } = Layout;\r\n\r\n  const { url } = useRouteMatch();\r\n\r\n  const history = useHistory();\r\n  console.log(url);\r\n  console.log(history);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Content style={{ margin: '0 30px' }}>\r\n        <div className={classes.title}>\r\n          <h3>Dashboard</h3>\r\n        </div>\r\n        <DashboardGraph />\r\n      </Content>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default DashboardContent;\r\n","import PanelLayout from '../../UI/Layout/PanelLayout';\r\nimport DashboardContent from './DashboardContent';\r\n\r\nconst QuotaPanel = () => {\r\n  return (\r\n    <PanelLayout>\r\n      <DashboardContent />\r\n    </PanelLayout>\r\n  );\r\n};\r\n\r\nexport default QuotaPanel;\r\n","import { Route, Switch, useRouteMatch } from 'react-router-dom';\r\nimport DashboardPanel from '../components/Panel/Dashboard/DashboardPanel';\r\n\r\nconst DashboardPage = () => {\r\n  const { path } = useRouteMatch();\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path={`${path}`} exact>\r\n        <DashboardPanel />;\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;\r\n","import { Card, Descriptions, Tooltip } from 'antd';\r\n\r\n\r\nconst columns = { xs: 8, sm: 12, md: 12};\r\n\r\nconst ReportGraph = () => {\r\n  // Dummy Data\r\n  const data = {\r\n    batch: 3,\r\n    label: 750,\r\n    reviewed: 0,\r\n    total: 900,\r\n    unlabel: 150,\r\n    unreviewed: 900,\r\n    completed: 300,\r\n  };\r\n\r\n  const model = {\r\n    name: 'Model001',\r\n    state: 'Training',\r\n    task: 'Object Detection',\r\n    data_source: 'Weld1',\r\n    model_type: 'RefineDet',\r\n    manager: 'Chris',\r\n    metrics: '0.7',\r\n    training_time: {\r\n      start: '2020-12-11 08:10:23',\r\n      end: '2020-12-11 11:20:23',\r\n      take: '03:10:00'\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      style={{\r\n        width: '100%',\r\n        height: '450px',\r\n        overflowY: 'scroll',\r\n      }}>\r\n      {/* 傳入專案數據 */}\r\n      <Descriptions\r\n        title='Data'\r\n        layout='vertical'\r\n        bordered\r\n        style={{ marginBottom: '1rem' }}>\r\n        <Descriptions.Item label='#Batch' span={1}>\r\n          <Tooltip title='資料批次量'>{data.batch}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='#Label' span={1}>\r\n          <Tooltip title='資料標籤量'>{data.label}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='#UnLabled' span={1}>\r\n          <Tooltip title='資料未標籤量'>{data.unlabel}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='#Total' span={1}>\r\n          <Tooltip title='資料總量'>{data.total}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='#Reviewed' span={1}>\r\n          <Tooltip title='資料審核量'>{data.reviewed}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='#Unreviewed' span={1}>\r\n          <Tooltip title='資料未審核量'>{data.unreviewed}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='#Complete' span={1}>\r\n          <Tooltip title='資料完成量'>{data.completed}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='#Completed Ratio' span={1}>\r\n          <Tooltip title='資料完成比'>\r\n            {((data.completed / data.total) * 100).toFixed(2)}\r\n          </Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='#Label Ratio' span={1}>\r\n          <Tooltip title='資料標籤比'>\r\n            {((data.unlabel / data.label) * 100).toFixed(2)}\r\n          </Tooltip>\r\n        </Descriptions.Item>\r\n      </Descriptions>\r\n      {/* 需要再另外寫成一個組件 */}\r\n      <Descriptions column={columns} title='Model' layout='vertical' bordered>\r\n        <Descriptions.Item label='Models' span={1}>\r\n          <Tooltip title='模型名稱'>{model.name}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='State' span={1}>\r\n          <Tooltip title='模型狀態'>{model.state}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Task' span={1}>\r\n          <Tooltip title='模型任務'>{model.task}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Data Source' span={1}>\r\n          <Tooltip title='模型資料源'>{model.data_source}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Model Type' span={1}>\r\n          <Tooltip title='模型類型'>{model.model_type}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Manager' span={1}>\r\n          <Tooltip title='模型管理者'>{model.manager}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Metrics' span={1}>\r\n          <Tooltip title='模型測量'>{model.metrics}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Start Time' span={2}>\r\n          <Tooltip title='開始時間'>{model.training_time.start}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='End Time' span={2}>\r\n          <Tooltip title='結束時間'>{model.training_time.end}</Tooltip>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Take' span={1}>\r\n          <Tooltip title='訓練時間'>{model.training_time.take}</Tooltip>\r\n        </Descriptions.Item>\r\n      </Descriptions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ReportGraph;\r\n","import { Fragment } from 'react';\r\n// import { useRouteMatch, useHistory } from 'react-router-dom';\r\n\r\nimport classes from '../../../styles/Panel/Projects/ProjectContent.module.css';\r\nimport { Layout, Cascader } from 'antd';\r\n\r\nimport ReportGraph from './ReportGraph';\r\n\r\nconst ReportContent = () => {\r\n  const { Content } = Layout;\r\n\r\n  // const { url } = useRouteMatch();\r\n\r\n  // const history = useHistory();\r\n\r\n  // 各專案名稱 -> 需傳入專案名\r\n  const options = [\r\n    {\r\n      value: 'project1',\r\n      label: 'Project1',\r\n    },\r\n    {\r\n      value: 'project2',\r\n      label: 'Project2',\r\n    },\r\n    {\r\n      value: 'project3',\r\n      label: 'Project3',\r\n    },\r\n  ];\r\n\r\n  // 更改專案\r\n  const chooseProject = (value) => {\r\n    \r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Content style={{ margin: '0 30px' }}>\r\n        <div className={classes.title}>\r\n          <h3>Report</h3>\r\n        </div>\r\n        <Cascader\r\n          defaultValue={['project1']}\r\n          options={options}\r\n          onChange={chooseProject}\r\n          allowClear={false}\r\n          bordered={false}\r\n          style={{ \r\n            border: '1px solid #000',\r\n            margin: '5px 0'\r\n          }}\r\n        />\r\n        <ReportGraph />\r\n      </Content>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ReportContent;\r\n","import PanelLayout from '../../UI/Layout/PanelLayout';\r\nimport ReportContent from './ReportContent';\r\n\r\nconst ReportPanel = () => {\r\n  return (\r\n    <PanelLayout>\r\n      <ReportContent />\r\n    </PanelLayout>\r\n  );\r\n};\r\n\r\nexport default ReportPanel;\r\n","import { Route, Switch, useRouteMatch } from 'react-router-dom';\r\n\r\nimport ReportPanel from '../components/Panel/Report/ReportPanel';\r\n\r\nconst ReportPage = () => {\r\n  const { path } = useRouteMatch();\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path={`${path}`} exact>\r\n        <ReportPanel />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default ReportPage;\r\n","import PanelLayout from '../components/UI/Layout/PanelLayout';\r\n\r\nconst AboutPage = () => {\r\n  return (\r\n    <PanelLayout>\r\n      \r\n    </PanelLayout>\r\n  )\r\n};\r\n\r\nexport default AboutPage;","import PanelLayout from '../components/UI/Layout/PanelLayout';\r\n\r\nconst TutorialsPage = () => {\r\n  return <PanelLayout></PanelLayout>;\r\n};\r\n\r\nexport default TutorialsPage;\r\n","import PanelLayout from '../components/UI/Layout/PanelLayout';\r\n\r\nconst HelpPage = () => {\r\n  return <PanelLayout></PanelLayout>;\r\n};\r\n\r\nexport default HelpPage;\r\n","import { useContext } from 'react';\r\nimport { Link, Route, Switch, BrowserRouter, Redirect } from 'react-router-dom';\r\n\r\nimport { Button, Result } from 'antd';\r\n\r\nimport LoginForm from '../components/Login/LoginForm';\r\nimport ResetForm from '../components/Login/ResetForm';\r\n\r\nimport ProjectPage from './ProjectPage';\r\nimport MemberPage from './MemberPage';\r\nimport QuotaPage from './QuotaPage';\r\nimport DashboardPage from './DashboardPage';\r\nimport ReportPage from './ReportPage';\r\nimport AboutPage from './AboutPage';\r\nimport TutorialsPage from './TutorialsPage';\r\nimport HelpPage from './HelpPage';\r\n\r\nimport AuthContext from '../store/auth-context';\r\n\r\nconst LoginPage = () => {\r\n  const authCtx = useContext(AuthContext);\r\n  console.log(authCtx);\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n        <Route path='/' exact>\r\n          <LoginForm />\r\n        </Route>\r\n        <Route path='/reset'>\r\n          <ResetForm />\r\n        </Route>\r\n        <Route path='/project/:uid'>\r\n          {localStorage.getItem('uid') !== '' ? (\r\n            <ProjectPage />\r\n          ) : (\r\n            <Result\r\n              status='404'\r\n              title='404'\r\n              subTitle='Sorry, the page does not exist.'\r\n              extra={\r\n                <Link to={`/project/${authCtx.userInfo.email}`}>\r\n                {/* // <Link to='/'> */}\r\n                  <Button type='primary'>Back</Button>\r\n                </Link>\r\n              }\r\n            />\r\n          )}\r\n        </Route>\r\n        <Route path='/members/:uid'>\r\n          {localStorage.getItem('token') ? <MemberPage /> : <Redirect to='/' />}\r\n        </Route>\r\n        <Route path='/quota/:uid'>\r\n          {localStorage.getItem('token') ? <QuotaPage /> : <Redirect to='/' />}\r\n        </Route>\r\n        <Route path='/dashboard/:uid'>\r\n          {localStorage.getItem('token') ? (\r\n            <DashboardPage />\r\n          ) : (\r\n            <Redirect to='/' />\r\n          )}\r\n        </Route>\r\n        <Route path='/report/:uid'>\r\n          {localStorage.getItem('token') ? <ReportPage /> : <Redirect to='/' />}\r\n        </Route>\r\n        <Route path='/about/:uid'>\r\n          {localStorage.getItem('token') ? <AboutPage /> : <Redirect to='/' />}\r\n        </Route>\r\n        <Route path='/tutorials/:uid'>\r\n          {localStorage.getItem('token') ? (\r\n            <TutorialsPage />\r\n          ) : (\r\n            <Redirect to='/' />\r\n          )}\r\n        </Route>\r\n        <Route path='/help/:uid'>\r\n          {localStorage.getItem('token') ? <HelpPage /> : <Redirect to='/' />}\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import LoginPage from './pages/LoginPage';\n\nfunction App() {\n  return <LoginPage />\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport {AuthContextProvider} from './store/auth-context';\n\nReactDOM.render(\n  <AuthContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthContextProvider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
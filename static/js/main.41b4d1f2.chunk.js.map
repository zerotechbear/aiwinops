{"version":3,"sources":["styles/ProjectPanel/Projects/NewProject.module.css","styles/Login/ResetForm.module.css","styles/UI/Modal/Error.module.css","styles/UI/Layout/Card.module.css","styles/UI/Modal/Backdrop.module.css","styles/UI/Layout/Sidebar.module.css","styles/UI/Modal/Message.module.css","styles/ProjectPanel/Member/NewMember.module.css","components/UI/Layout/Card.js","components/UI/Modal/Backdrop.js","components/UI/Modal/Error.js","store/auth-context.js","components/Login/LoginForm.js","pages/LoginPage.js","components/UI/Layout/Header.js","components/UI/Layout/Sidebar.js","components/UI/Layout/PanelLayout.js","components/ProjectPanel/Projects/ProjectList.js","components/ProjectPanel/Projects/ProjectContent.js","components/ProjectPanel/Projects/ProjectPanel.js","pages/ProjectPage.js","components/UI/Modal/Message.js","components/Login/ResetForm.js","components/ProjectPanel/Projects/NewProject.js","components/ProjectPanel/Members/MemberList.js","components/ProjectPanel/Members/MemberContent.js","components/ProjectPanel/Members/MemberPanel.js","components/ProjectPanel/Members/NewMember.js","components/ProjectPanel/Members/Settings.js","App.js","reportWebVitals.js","index.js","styles/UI/Layout/Header.module.css","styles/ProjectPanel/Projects/ProjectContent.module.css","styles/Login/LoginForm.module.css","styles/ProjectPanel/Member/Settings.module.css"],"names":["module","exports","Card","props","className","classes","card","children","Backdrop","backdrop","onClick","onCloseModal","Error","Fragment","main","btn","type","AuthContext","React","createContext","token","isLoggedIn","login","logout","AuthContextProvider","tokenData","localStorage","getItem","useState","setToken","contextValue","setItem","useCallback","removeItem","Provider","value","SIGN_IN_API","LoginForm","isLoginFail","setIsLoginFail","Form","useForm","form","authCtx","useContext","history","useHistory","logo","name","onFinish","values","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","response","ok","json","data","idToken","replace","catch","scrollToFirstError","Item","rules","message","required","prefix","MailOutlined","placeholder","Password","LockOutlined","submit","htmlType","help","href","target","rel","to","LoginPage","navLinks","title","path","menu","NavHeader","Header","Layout","Search","Input","header","nav","onSearch","console","log","search","map","link","index","activeClassName","active","avatar","overlay","placement","arrow","size","icon","UserOutlined","NavLeft","Sider","collapsed","setCollapsed","width","foldBtn","MenuUnfoldOutlined","MenuFoldOutlined","mode","theme","defaultSelectedKeys","style","height","borderRight","PieChartOutlined","DesktopOutlined","ContainerOutlined","PanelLayout","position","top","Sidebar","TABLE_COLUMN","key","dataIndex","ProjectList","projectData","setProjectData","fetchProjectData","storeData","push","status","manager","build_time","modify_time","editable","modifiable","error","useEffect","scroll","x","y","pagination","columns","dataSource","ProjectContent","Content","backgroundColor","content","fontWeight","Panel","ProjectPage","ProjectPanel","Message","RESET_API","ResetForm","isReset","setIsReset","isExist","setIsExist","reset","onValuesChange","requestType","setTimeout","validator","_","a","send","NewProject","TextArea","projectColor","setProjectColor","project","Date","toISOString","toString","project_name","project_manager","color","project_color","hex","description","project_description","info","allowClear","onChangeComplete","rows","maxLength","showCount","marginBottom","valuePropName","Promise","resolve","reject","protocol","borderColor","danger","marginLeft","MemberList","members","setMembers","fetchMemberData","memberData","id","username","level","MemberContent","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","NewMember","agreement","label","hasFeedback","dependencies","getFieldValue","UPDATE_API","Settings","settings","displayName","photoUrl","getValueFromEvent","e","fileList","action","listType","UploadOutlined","update","App","process","basename","exact","MemberPanel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.41b4d1f2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"project\":\"NewProject_project__xw8NH\",\"info\":\"NewProject_info__1X_02\",\"protocol\":\"NewProject_protocol__3jbMz\",\"btn\":\"NewProject_btn__jOPGh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reset\":\"ResetForm_reset__8lEB-\",\"form\":\"ResetForm_form__8S0V3\",\"send\":\"ResetForm_send__1AgrR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Error_main__izgaW\",\"btn\":\"Error_btn__1D755\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3BB1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Backdrop_backdrop__ls6ah\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"foldBtn\":\"Sidebar_foldBtn__CB8qk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2rg14\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewMember_form__3VfVt\",\"control\":\"NewMember_control__xKszx\",\"action\":\"NewMember_action__3vYp8\"};","import classes from '../../../styles/UI/Layout/Card.module.css';\r\n\r\nconst Card = (props) => {\r\n  return <div className={classes.card}>{props.children}</div>\r\n}\r\n\r\nexport default Card;","import classes from '../../../styles/UI/Modal/Backdrop.module.css';\r\n\r\nconst Backdrop = (props) => {\r\n  return <div className={classes.backdrop} onClick={props.onCloseModal}/>\r\n};\r\n\r\nexport default Backdrop;","import React from \"react\";\r\n\r\nimport classes from '../../../styles/UI/Modal/Error.module.css';\r\nimport Backdrop from './Backdrop';\r\nconst Error = (props) => {\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Backdrop onCloseModal={props.onCloseModal} />\r\n      <div className={classes.main}>\r\n        <h2>An Error Occurred</h2>\r\n        <p>{props.children}</p>\r\n        <div className={classes.btn}>\r\n          <button type='button' onClick={props.onCloseModal}>\r\n            Okay\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Error;","import React, { useState, useCallback } from 'react';\r\n\r\nconst AuthContext = React.createContext({\r\n  token: '',\r\n  isLoggedIn: false,\r\n  login: token => {},\r\n  logout: () => {},\r\n});\r\n\r\nconst retrieveToken = () => {\r\n  const storedToken = localStorage.getItem('token');\r\n\r\n  return {\r\n    token: storedToken,\r\n  };\r\n};\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const tokenData = retrieveToken();\r\n\r\n  const [token, setToken] = useState(tokenData);\r\n\r\n  const userIsLoggedIn = !!token;\r\n\r\n  const loginHandler = (token) => {\r\n    setToken(token);\r\n    localStorage.setItem('token', token);\r\n  };\r\n  \r\n  const logoutHandler = useCallback(() => {\r\n    setToken(null);\r\n    localStorage.removeItem('token');\r\n  }, []);\r\n\r\n  const contextValue = {\r\n    token: token,\r\n    isLoggedIn: userIsLoggedIn,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n","import { useState, useContext } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport classes from '../../styles/Login/LoginForm.module.css';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { MailOutlined, LockOutlined } from '@ant-design/icons';\r\n\r\nimport Card from '../UI/Layout/Card';\r\nimport Error from '../UI/Modal/Error';\r\nimport AuthContext from '../../store/auth-context';\r\n\r\n// 目前使用 Firebase Authentication模擬登入\r\nconst FIREBASE_KEY = 'AIzaSyAaf6guV8zB9_4R5xwuDDiQM0zaNzQWuWA';\r\nconst SIGN_IN_API = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${FIREBASE_KEY}`;\r\n\r\nconst LoginForm = (props) => {\r\n  const [isLoginFail, setIsLoginFail] = useState(false);\r\n  const [form] = Form.useForm();\r\n\r\n  const authCtx = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  // TODO: 驗證USER登入 -> POST/auth/login\r\n  const loginAuthHandler = (values) => {\r\n    fetch(SIGN_IN_API, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        email: values.email,\r\n        password: values.password,\r\n        returnSecureToken: true,\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          setIsLoginFail(true);\r\n        }\r\n      })\r\n      .then((data) => {\r\n        authCtx.login(data.idToken);\r\n        history.replace('/home');\r\n      })\r\n      .catch(() => {\r\n        setIsLoginFail(true);\r\n      });\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsLoginFail(false);\r\n  };\r\n\r\n  return (\r\n    <section className={classes.login}>\r\n      <Card>\r\n        <span className={classes.logo} />\r\n        <section className={classes.form}>\r\n          <h2>Member Login</h2>\r\n          <Form\r\n            form={form}\r\n            name='login'\r\n            onFinish={loginAuthHandler}\r\n            scrollToFirstError>\r\n            <Form.Item\r\n              name='email'\r\n              rules={[\r\n                {\r\n                  type: 'email',\r\n                  message: 'The email format is invalid!',\r\n                },\r\n                {\r\n                  required: true,\r\n                  message: 'The email is empty!',\r\n                },\r\n              ]}>\r\n              <Input prefix={<MailOutlined />} placeholder='Email@domain.com' />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name='password'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'The password is empty!',\r\n                },\r\n              ]}>\r\n              <Input.Password\r\n                placeholder='Password'\r\n                prefix={<LockOutlined />}\r\n              />\r\n            </Form.Item>\r\n            <div className={classes.submit}>\r\n              <Button type='primary' htmlType='submit'>\r\n                LOGIN\r\n              </Button>\r\n            </div>\r\n            <div className={classes.help}>\r\n              <a\r\n                href='https://www.zerodimension.com.tw/default.aspx#contact'\r\n                target='_blank'\r\n                rel='noreferrer'>\r\n                <Button type='default'>Help</Button>\r\n              </a>\r\n              <Button type='default'>\r\n                <Link to='/reset'>Forget Password?</Link>\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n          {isLoginFail && (\r\n            <Error onCloseModal={closeModal}>\r\n              The email or password is invalid{' '}\r\n            </Error>\r\n          )}\r\n        </section>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import LoginForm from '../components/Login/LoginForm';\r\n\r\n\r\nconst LoginPage = (props) => {\r\n  return <LoginForm />;\r\n};\r\n\r\nexport default LoginPage;\r\n","import { Link, NavLink } from 'react-router-dom';\r\nimport { Input, Avatar, Layout, Menu, Dropdown } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\n\r\nimport classes from '../../../styles/UI/Layout/Header.module.css';\r\n\r\nconst navLinks = [\r\n  {\r\n    title: 'Home',\r\n    path: '/home',\r\n  },\r\n  {\r\n    title: 'About',\r\n    path: '/about',\r\n  },\r\n  {\r\n    title: 'Tutorials',\r\n    path: '/tutorials',\r\n  },\r\n  {\r\n    title: 'Help',\r\n    path: '/help',\r\n  },\r\n];\r\n\r\nconst menu = (\r\n  <Menu>\r\n    <Menu.Item>\r\n      {/* 導向個人資訊頁面 -> /uid/settings */}\r\n      <Link to='/settings'>Setting</Link>\r\n    </Menu.Item>\r\n    <Menu.Item>\r\n      {/* 確認登出後刪除Token資訊 */}\r\n      <Link to='/'>Logout</Link>\r\n    </Menu.Item>\r\n  </Menu>\r\n);\r\n\r\nconst NavHeader = () => {\r\n  const { Header } = Layout;\r\n  const { Search } = Input;\r\n\r\n  // 搜尋專案 -> 可能透過Antd Table Column Filter\r\n  const searchProjectHandler = (value) => {\r\n    console.log(value);\r\n  };\r\n\r\n  return (\r\n    <Header className={classes.header}>\r\n      <span className={classes.logo}>\r\n        <NavLink to='/home'>AIWinOps</NavLink>\r\n      </span>\r\n      <nav className={classes.nav}>\r\n        <div className={classes.menu}>\r\n          <ul>\r\n            <Search\r\n              placeholder='Search Project'\r\n              onSearch={searchProjectHandler}\r\n              className={classes.search}\r\n            />\r\n            {navLinks.map((link, index) => (\r\n              <li key={index}>\r\n                <NavLink to={link.path} activeClassName={classes.active}>\r\n                  {link.title}\r\n                </NavLink>\r\n              </li>\r\n            ))}\r\n            <span className={classes.avatar}>\r\n              <Dropdown overlay={menu} placement='bottomRight' arrow>\r\n                <Avatar size={50} icon={<UserOutlined />}></Avatar>\r\n              </Dropdown>\r\n            </span>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default NavHeader;\r\n","import { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Layout, Menu, Button } from 'antd';\r\nimport {\r\n  PieChartOutlined,\r\n  DesktopOutlined,\r\n  ContainerOutlined,\r\n  UserOutlined,\r\n  MenuFoldOutlined,\r\n  MenuUnfoldOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport classes from '../../../styles/UI/Layout/Sidebar.module.css';\r\n\r\n\r\nconst NavLeft = () => {\r\n  const { Sider } = Layout;\r\n\r\n  const [collapsed, setCollapsed] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    setCollapsed((collapsed) => !collapsed);\r\n  };\r\n\r\n  return (\r\n    <Sider width={200} collapsed={collapsed}>\r\n      <Button type='primary' onClick={toggleMenu} className={classes.foldBtn}>\r\n        {collapsed ? <MenuUnfoldOutlined /> : <MenuFoldOutlined />}\r\n      </Button>\r\n      <Menu\r\n        mode='inline'\r\n        theme='dark'\r\n        defaultSelectedKeys={['1']}\r\n        style={{ height: '100%', borderRight: 0 }}>\r\n        <Menu.Item key='1' icon={<PieChartOutlined />}>\r\n          <Link to='/home'>Project</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key='2' icon={<DesktopOutlined />}>\r\n          Dashboard\r\n        </Menu.Item>\r\n        <Menu.Item key='3' icon={<ContainerOutlined />}>\r\n          Quota\r\n        </Menu.Item>\r\n        <Menu.Item key='4' icon={<UserOutlined />}>\r\n          <Link to='/members'>Members</Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Sider>\r\n  );\r\n};\r\n\r\nexport default NavLeft;\r\n","import { Layout } from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport Header from './Header';\r\nimport Sidebar from './Sidebar';\r\n\r\nconst PanelLayout = (props) => {\r\n  return (\r\n    <Layout>\r\n      <Header />\r\n      <Layout style={{ position: 'fixed', width: '100%', height: '100%', top: '5rem' }}>\r\n        <Sidebar />\r\n        {props.children}\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default PanelLayout;\r\n","import { useState, useEffect, useCallback } from 'react';\r\nimport { Table } from 'antd';\r\n\r\nconst PROJECT_URL =\r\n  'https://aiwinops-default-rtdb.firebaseio.com/projects.json';\r\n\r\nconst TABLE_COLUMN = [\r\n  {\r\n    title: '專案名稱',\r\n    key: 'name',\r\n    dataIndex: 'name',\r\n  },\r\n  {\r\n    title: '狀態',\r\n    key: 'status',\r\n    dataIndex: 'status',\r\n  },\r\n  {\r\n    title: '管理者',\r\n    key: 'manager',\r\n    dataIndex: 'manager',\r\n  },\r\n  {\r\n    title: '建立日期',\r\n    key: 'build_time',\r\n    dataIndex: 'build_time',\r\n  },\r\n  {\r\n    title: '修改日期',\r\n    key: 'modify_time',\r\n    dataIndex: 'modify_time',\r\n  },\r\n  {\r\n    title: '其他操作',\r\n    key: 'action',\r\n    dataIndex: 'action',\r\n    type: 'Action',\r\n  },\r\n];\r\n\r\nconst ProjectList = (props) => {\r\n  const [projectData, setProjectData] = useState();\r\n\r\n  // 抓取使用者專案的資料 -> GET/ProjectData\r\n  const fetchProjectData = useCallback(() => {\r\n    fetch(PROJECT_URL)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        const storeData = [];\r\n        for (const key in data) {\r\n          storeData.push({\r\n            key: key,\r\n            name: data[key].name,\r\n            status: data[key].status,\r\n            manager: data[key].manager,\r\n            build_time: data[key].build_time,\r\n            modify_time: data[key].modify_time,\r\n            editable: data[key].editable,\r\n            modifiable: data[key].modifiable,\r\n          });\r\n        }\r\n        setProjectData(storeData);\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchProjectData();\r\n  }, [fetchProjectData]);\r\n\r\n  return (\r\n    <div>\r\n      <Table\r\n        scroll={{ x: '1000', y: '500' }}\r\n        pagination={false}\r\n        columns={TABLE_COLUMN}\r\n        dataSource={projectData}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import { useHistory } from 'react-router-dom';\r\n\r\nimport classes from '../../../styles/ProjectPanel/Projects/ProjectContent.module.css';\r\nimport { Layout, Button } from 'antd';\r\n\r\nimport ProjectList from './ProjectList';\r\n\r\nconst ProjectContent = () => {\r\n  const { Content } = Layout;\r\n\r\n  const history = useHistory();\r\n\r\n  const newProjectHandler = () => {\r\n    history.push('/new-project');\r\n  };\r\n\r\n  return (\r\n    <Layout style={{ backgroundColor: '#fff'}} >\r\n      <Content className={classes.content} style={{ width: '100%'}}>\r\n        <div className={classes.title}>\r\n          <h3>Projects</h3>\r\n          <Button\r\n            type='primary'\r\n            onClick={newProjectHandler}\r\n            style={{ fontWeight: '700' }}>\r\n            +新專案\r\n          </Button>\r\n        </div>\r\n        <ProjectList />\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ProjectContent;\r\n","import PanelLayout from '../../UI/Layout/PanelLayout';\r\nimport ProjectContent from './ProjectContent';\r\n\r\nconst Panel = () => {\r\n  return (\r\n    <PanelLayout>\r\n      <ProjectContent />\r\n    </PanelLayout>\r\n  );\r\n}\r\n\r\nexport default Panel;","import ProjectPanel from '../components/ProjectPanel/Projects/ProjectPanel';\r\n\r\nconst ProjectPage = () => {\r\n  return (\r\n    <ProjectPanel />\r\n  )\r\n};\r\n\r\nexport default ProjectPage;","import classes from '../../../styles/UI/Modal/Message.module.css';\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={classes.message}>\r\n      <h3>Message</h3>\r\n      <p>{props.children}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;","import { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { Form, Input, Button } from 'antd';\r\nimport { MailOutlined } from '@ant-design/icons';\r\nimport classes from '../../styles/Login/ResetForm.module.css';\r\n\r\nimport Card from '../UI/Layout/Card';\r\nimport Message from '../UI/Modal/Message';\r\n\r\n// 目前使用 Firebase Authentication模擬登出\r\nconst FIREBASE_KEY = 'AIzaSyAaf6guV8zB9_4R5xwuDDiQM0zaNzQWuWA';\r\nconst RESET_API = `https://identitytoolkit.googleapis.com/v1/accounts:sendOobCode?key=${FIREBASE_KEY}`;\r\n\r\nconst ResetForm = (props) => {\r\n  const [form] = Form.useForm();\r\n  const history = useHistory();\r\n\r\n  const [isReset, setIsReset] = useState(false);\r\n  const [isExist, setIsExist] = useState(true);\r\n\r\n  // TODO: 驗證USER登入 -> POST/auth/reset -> 發送重設密碼信件給已註冊的使用者\r\n  const resetPasswordHandler = (values) => {\r\n    fetch(RESET_API, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        email: values.email,\r\n        requestType: 'PASSWORD_RESET',\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          setIsReset(true);\r\n          setTimeout(() => {   \r\n            history.push('/');\r\n          }, 2000);\r\n        } else {\r\n          setIsExist(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n  };\r\n\r\n  const emailEnter = () => {\r\n    setIsExist(true);\r\n  };\r\n\r\n  return (\r\n    <section className={classes.reset}>\r\n      {!isExist && <Message>Email does not exist!</Message>}\r\n      {isReset && <Message>Reset email is sent!</Message>}\r\n      <Card>\r\n        <section className={classes.form}>\r\n          <Form\r\n            form={form}\r\n            onValuesChange={emailEnter}\r\n            onFinish={resetPasswordHandler}>\r\n            <h3>Reset Password</h3>\r\n            <Form.Item\r\n              name='email'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please enter your email to reset!',\r\n                },\r\n                {\r\n                  type: 'email',\r\n                  message: 'The email format is invalid!',\r\n                },\r\n                {\r\n                  validator: async (_, value) => {\r\n                    if (!isExist) {\r\n                      throw new Error('Email does not exist!');\r\n                    }\r\n                  },\r\n                },\r\n              ]}>\r\n              <Input prefix={<MailOutlined />} placeholder='name@domain.com' />\r\n            </Form.Item>\r\n            <div className={classes.send}>\r\n              <Form.Item>\r\n                <Button type='primary' htmlType='submit'>\r\n                  Send\r\n                </Button>\r\n              </Form.Item>\r\n            </div>\r\n          </Form>\r\n        </section>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ResetForm;\r\n","import { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport { CirclePicker } from 'react-color';\r\nimport classes from '../../../styles/ProjectPanel/Projects/NewProject.module.css';\r\n\r\nimport NavHeader from '../../UI/Layout/Header';\r\n\r\nconst PROJECT_URL = 'https://aiwinops-default-rtdb.firebaseio.com/projects.json';\r\n\r\nconst NewProject = () => {\r\n  const { TextArea } = Input;\r\n  const [form] = Form.useForm();\r\n  const history = useHistory();\r\n\r\n  const [projectColor, setProjectColor] = useState('#fff');\r\n\r\n  const getColor = (color) => {\r\n    setProjectColor(color.hex);\r\n  };\r\n\r\n  // 將新專案新增至資料庫 /PUSH/New-Project\r\n  const registerNewProject = (values) => {\r\n    fetch(PROJECT_URL, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        build_time: new Date().toISOString().toString(),\r\n        name: values.project_name,\r\n        manager: values.project_manager,\r\n        color: values.project_color.hex,\r\n        description: values.project_description,\r\n      }),\r\n      headers: { 'Content-Type': 'application/json'}\r\n    }).then(response => {\r\n      return response.json();\r\n    }).catch((error) => {\r\n      throw new Error(error);\r\n    });\r\n    history.push('/home');\r\n  };\r\n\r\n  const cancleProjectHandler = () => {\r\n    history.push('/home');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavHeader />\r\n      <section className={classes.project}>\r\n        <h2>新專案</h2>\r\n        <Form\r\n          form={form}\r\n          name='project'\r\n          onFinish={registerNewProject}\r\n          scrollToFirstError>\r\n          <div className={classes.info}>\r\n            <h4>專案名稱</h4>\r\n            <Form.Item\r\n              name='project_name'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Project name should not be empty!',\r\n                },\r\n              ]}>\r\n              <Input placeholder='Project Name' allowClear />\r\n            </Form.Item>\r\n            <h4>管理者</h4>\r\n            <Form.Item\r\n              name='project_manager'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Project manager should be provided!',\r\n                },\r\n              ]}>\r\n              <Input placeholder='Project Manager' allowClear />\r\n            </Form.Item>\r\n            <h4>專案顏色</h4>\r\n            <Form.Item\r\n              name='project_color'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Choose color for new project!',\r\n                },\r\n              ]}>\r\n              <CirclePicker\r\n                width={300}\r\n                color={projectColor}\r\n                onChangeComplete={getColor}\r\n              />\r\n            </Form.Item>\r\n            <h4>專案描述(Optional)</h4>\r\n            <Form.Item name='project_description'>\r\n              <TextArea\r\n                placeholder='Project Description'\r\n                rows={5}\r\n                maxLength={300}\r\n                showCount\r\n                allowClear\r\n                style={{ marginBottom: '2.5rem' }}\r\n              />\r\n            </Form.Item>\r\n          </div>\r\n          <Form.Item\r\n            name='agreement'\r\n            valuePropName='checked'\r\n            rules={[\r\n              {\r\n                validator: (_, value) =>\r\n                  value\r\n                    ? Promise.resolve()\r\n                    : Promise.reject(new Error('使用服務前請先閱讀說明')),\r\n              },\r\n            ]}>\r\n            <div className={classes.protocol}>\r\n              <h1>資料協議</h1>\r\n              <section>\r\n                請您在開始使用AIWin系列產品(以下簡稱\"本產品\")前，務必仔細閱讀並同意《用戶協議》(以下簡稱\"本協議\")\r\n                中規定的所有權利和限制。\r\n              </section>\r\n              <Checkbox>Accept</Checkbox>\r\n            </div>\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <div className={classes.btn}>\r\n              <Button\r\n                type='primary'\r\n                htmlType='submit'\r\n                style={{\r\n                  fontWeight: '600',\r\n                  backgroundColor: '#096dd9',\r\n                  borderColor: '#096dd9',\r\n                }}>\r\n                建立專案\r\n              </Button>\r\n              <Button\r\n                type='default'\r\n                danger\r\n                onClick={cancleProjectHandler}\r\n                style={{ marginLeft: '1rem' }}>\r\n                取消\r\n              </Button>\r\n            </div>\r\n          </Form.Item>\r\n        </Form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewProject;\r\n","import { useState, useEffect, useCallback } from 'react';\r\n\r\nimport { Table } from 'antd';\r\n\r\nimport classes from '../../../styles/ProjectPanel/Member/MemberList.module.css';\r\n\r\n// 目前使用 Firebase Realtime Database 模擬會員資料\r\nconst MEMBER_URL = 'https://aiwinops-default-rtdb.firebaseio.com/members.json';\r\n\r\n// Firebase Authentication模擬GET會員API串接\r\n// const FIREBASE_KEY = 'AIzaSyAaf6guV8zB9_4R5xwuDDiQM0zaNzQWuWA';\r\n// const MEMBER_LIST_API = `https://identitytoolkit.googleapis.com/v1/accounts:lookup?key=${FIREBASE_KEY}`;\r\n\r\nconst TABLE_COLUMN = [\r\n  {\r\n    title: '名稱',\r\n    key: 'name',\r\n    dataIndex: 'name',\r\n    width: '20%',\r\n  },\r\n  {\r\n    title: '權限',\r\n    key: 'level',\r\n    dataIndex: 'level',\r\n    width: '20%',\r\n  },\r\n  {\r\n    title: '信箱',\r\n    key: 'email',\r\n    dataIndex: 'email',\r\n  },\r\n  {\r\n    title: '狀態',\r\n    key: 'status',\r\n    dataIndex: 'status',\r\n  },\r\n];\r\n\r\nconst MemberList = () => {\r\n  const [members, setMembers] = useState();\r\n\r\n  // TODO: 抓取會員的資料 -> GET/MemberData\r\n  const fetchMemberData = useCallback(() => {\r\n    fetch(MEMBER_URL)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        const memberData = [];\r\n        for (const key in data) {\r\n          memberData.push({\r\n            key: key,\r\n            id: data[key].name,\r\n            name: data[key].username,\r\n            level: data[key].level,\r\n            status: data[key].status,\r\n            email: data[key].email,\r\n          });\r\n        }\r\n        setMembers(memberData);\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n  }, [setMembers]);\r\n\r\n  useEffect(() => {\r\n    fetchMemberData();\r\n\r\n    return () => {\r\n      fetchMemberData();\r\n    }\r\n  }, [fetchMemberData]);\r\n\r\n  return (\r\n    <div className={classes.members}>\r\n      <div>\r\n        <Table\r\n          scroll={{ x: 1000, y: 500 }}\r\n          pagination={false}\r\n          columns={TABLE_COLUMN}\r\n          dataSource={members}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MemberList;\r\n","import { useHistory } from 'react-router-dom';\r\n\r\nimport { Layout, Button } from 'antd';\r\nimport classes from '../../../styles/ProjectPanel/Projects/ProjectContent.module.css';\r\n\r\nimport MemberList from './MemberList';\r\n\r\nconst MemberContent = () => {\r\n  const { Content } = Layout;\r\n\r\n  const history = useHistory();\r\n\r\n  const newMemberHandler = () => {\r\n    history.push('/new-member');\r\n  };\r\n\r\n  return (\r\n    <Layout style={{ backgroundColor: '#fff' }}>\r\n      <Content className={classes.content} style={{ width: '100%' }}>\r\n        <div className={classes.title}>\r\n          <h3>Members</h3>\r\n          <Button\r\n            type='primary'\r\n            style={{ fontWeight: '700' }}\r\n            onClick={newMemberHandler}>\r\n            +新成員\r\n          </Button>\r\n        </div>\r\n        <MemberList />\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default MemberContent;\r\n","import PanelLayout from '../../UI/Layout/PanelLayout';\r\nimport MemberContent from './MemberContent';\r\n\r\nconst Panel = () => {\r\n  return (\r\n    <PanelLayout>\r\n      <MemberContent />\r\n    </PanelLayout>\r\n  );\r\n};\r\n\r\nexport default Panel;\r\n","import { useHistory } from 'react-router-dom';\r\n\r\nimport { Form, Input, Checkbox, Button } from 'antd';\r\nimport classes from '../../../styles/ProjectPanel/Member/NewMember.module.css';\r\n\r\nimport NavHeader from '../../UI/Layout/Header';\r\n\r\n// 目前使用 Firebase Realtime Database 模擬會員資料\r\nconst MEMBER_URL = 'https://aiwinops-default-rtdb.firebaseio.com/members.json';\r\n\r\n// const FIREBASE_KEY = 'AIzaSyAaf6guV8zB9_4R5xwuDDiQM0zaNzQWuWA';\r\n// const SIGN_UP_API = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${FIREBASE_KEY}`;\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 16,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n    },\r\n  },\r\n};\r\n\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nconst NewMember = () => {\r\n  const [form] = Form.useForm();\r\n  const history = useHistory();\r\n\r\n  // TODO: 新增會員資料 -> POST/MemberData\r\n  const registerNewMember = (values) => {\r\n    console.log('Received values of form: ', values);\r\n    fetch(MEMBER_URL, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        email: values.email,\r\n        password: values.password,\r\n        username: values.username,\r\n        level: 'Annotator',\r\n        status: 'Active',\r\n        agreement: values.agreement,\r\n        returnSecureToken: true,\r\n      }),\r\n      headers: { 'Content-Type': 'application/json' },\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n    history.replace('/members');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavHeader />\r\n      <section className={classes.form}>\r\n        <h2>New Member</h2>\r\n        <Form\r\n          {...formItemLayout}\r\n          form={form}\r\n          name='register'\r\n          onFinish={registerNewMember}\r\n          scrollToFirstError>\r\n          <Form.Item\r\n            name='username'\r\n            label='Username'\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please enter username!',\r\n              },\r\n            ]}>\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name='email'\r\n            label='E-mail'\r\n            rules={[\r\n              {\r\n                type: 'email',\r\n                message: 'The email format is invalid!',\r\n              },\r\n              {\r\n                required: true,\r\n                message: 'Please enter email!',\r\n              },\r\n            ]}>\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name='password'\r\n            label='Password'\r\n            hasFeedback\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your password!',\r\n              },\r\n            ]}>\r\n            <Input.Password />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name='confirm'\r\n            label='Confirm Password'\r\n            dependencies={['password']}\r\n            hasFeedback\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your password!',\r\n              },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (!value || getFieldValue('password') === value) {\r\n                    return Promise.resolve();\r\n                  }\r\n                  return Promise.reject(new Error('Passwords are not match!'));\r\n                },\r\n              }),\r\n            ]}>\r\n            <Input.Password />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            {...tailFormItemLayout}\r\n            name='agreement'\r\n            valuePropName='checked'\r\n            rules={[\r\n              {\r\n                validator: (_, value) =>\r\n                  value\r\n                    ? Promise.resolve()\r\n                    : Promise.reject(new Error('Please read the agreement!')),\r\n              },\r\n            ]}>\r\n            <Checkbox>\r\n              我已經閱讀\r\n              <a href='https://www.cathaysite.com.tw/uploads/11datademand/02/1816_1.pdf'>\r\n                相關聲明\r\n              </a>\r\n            </Checkbox>\r\n          </Form.Item>\r\n          <Form.Item {...tailFormItemLayout}>\r\n            <Button type='primary' htmlType='submit'>\r\n              新增會員\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewMember;\r\n","import { useContext } from 'react';\r\n\r\nimport classes from '../../../styles/ProjectPanel/Member/Settings.module.css';\r\nimport { Form, Upload, Input, Avatar, Button } from 'antd';\r\nimport { UploadOutlined, UserOutlined } from '@ant-design/icons';\r\n\r\nimport NavHeader from '../../UI/Layout/Header';\r\nimport AuthContext from '../../../store/auth-context';\r\n\r\n// 目前使用 Firebase Authentication模擬修改使用者資訊\r\nconst FIREBASE_KEY = 'AIzaSyAaf6guV8zB9_4R5xwuDDiQM0zaNzQWuWA';\r\nconst UPDATE_API = `https://identitytoolkit.googleapis.com/v1/accounts:update?key=${FIREBASE_KEY}`;\r\n\r\nconst Settings = () => {\r\n  const [form] = Form.useForm();\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  const avatarFile = (e) => {\r\n    return e && e.fileList;\r\n  };\r\n\r\n  // TODO: 更新使用者資訊 POST/uid/uinfo\r\n  const updateProfile = (values) => {\r\n    fetch(UPDATE_API, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        idToken: authCtx.token,\r\n        displayName: values.username,\r\n        photoUrl: values.avatar,\r\n        email: values.email\r\n      })\r\n    })\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavHeader />\r\n      <section className={classes.settings}>\r\n        <h2>Settings</h2>\r\n        <Form\r\n          form={form}\r\n          name='settings'\r\n          onFinish={updateProfile}\r\n          scrollToFirstError>\r\n          <div className={classes.avatar}>\r\n            <section className='left'>\r\n              <h3>Public Avatar</h3>\r\n              <p>\r\n                You can change your avatar here or remove the current avatar to\r\n                revert to UserOutlined.\r\n              </p>\r\n            </section>\r\n\r\n            <section className='right'>\r\n              <Avatar size={90} icon={<UserOutlined />} />\r\n              <Form.Item\r\n                name='upload'\r\n                label='Upload Avatar'\r\n                valuePropName='fileList'\r\n                getValueFromEvent={avatarFile}>\r\n                <Upload name='avatar' action='/upload.do' listType='picture'>\r\n                  <Button icon={<UploadOutlined />}>Upload</Button>\r\n                </Upload>\r\n              </Form.Item>\r\n            </section>\r\n          </div>\r\n          <div className={classes.main}>\r\n            <section className='left'>\r\n              <h3>Main Settings</h3>\r\n              <p>This information will appear on your profile</p>\r\n            </section>\r\n            <section className='right'>\r\n              <Form.Item name='username' label='Username'>\r\n                <Input />\r\n              </Form.Item>\r\n              <Form.Item name='email' label='E-mail'>\r\n                <Input />\r\n              </Form.Item>\r\n            </section>\r\n          </div>\r\n          <div className={classes.password}>\r\n            <section className='left'>\r\n              <h3>Change Password</h3>\r\n              <p>\r\n                You will be directed to the login page after you update your\r\n                password\r\n              </p>\r\n            </section>\r\n            <section className='right'>\r\n              <Form.Item name='current_password' label='Current Password'>\r\n                <Input.Password />\r\n              </Form.Item>\r\n              <Form.Item name='password' label='New Password'>\r\n                <Input.Password />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name='confirm'\r\n                label='Confirm Password'\r\n                dependencies={['password']}\r\n                hasFeedback\r\n                rules={[\r\n                  ({ getFieldValue }) => ({\r\n                    validator(_, value) {\r\n                      if (!value || getFieldValue('password') === value) {\r\n                        return Promise.resolve();\r\n                      }\r\n                      return Promise.reject(\r\n                        new Error('New Passwords are not match!'),\r\n                      );\r\n                    },\r\n                  }),\r\n                ]}>\r\n                <Input.Password />\r\n              </Form.Item>\r\n            </section>\r\n          </div>\r\n          <section className={classes.update}>\r\n            <Form.Item>\r\n              <Button type='primary' htmlType='submit'>\r\n                更新個人資料\r\n              </Button>\r\n            </Form.Item>\r\n          </section>\r\n        </Form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import { Route, Switch, BrowserRouter } from 'react-router-dom';\n\nimport LoginPage from './pages/LoginPage';\nimport ProjectPage from './pages/ProjectPage';\n\nimport ResetForm from './components/Login/ResetForm';\nimport NewProject from './components/ProjectPanel/Projects/NewProject';\nimport MemberPanel from './components/ProjectPanel/Members/MemberPanel';\nimport NewMember from './components/ProjectPanel/Members/NewMember';\nimport Settings from './components/ProjectPanel/Members/Settings';\n\n\n\nfunction App() {\n  console.log(process.env.PUBLIC_URL);\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path='/' exact>\n          <LoginPage />\n        </Route>\n        <Route path='/reset'>\n          <ResetForm />\n        </Route>\n        <Route path='/home'>\n          <ProjectPage />\n        </Route>\n        <Route path='/new-project'>\n          <NewProject />\n        </Route>\n        <Route path='/members'>\n          <MemberPanel />\n        </Route>\n        <Route path='/new-member'>\n          <NewMember />\n        </Route>\n        <Route path='/settings'>\n          <Settings />\n        </Route>\n        <Route path='/about'>\n          <ProjectPage />\n        </Route>\n        <Route path='/tutorials'>\n          <ProjectPage />\n        </Route>\n        <Route path='/help'>\n          <ProjectPage />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n\n/* \n        <Route path='/profile'></Route>\n        \n        \n         */\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport {AuthContextProvider} from './store/auth-context';\n\nReactDOM.render(\n  <AuthContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthContextProvider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__5yFbd\",\"logo\":\"Header_logo__2c0cK\",\"search\":\"Header_search__1_QZM\",\"nav\":\"Header_nav__2qdsB\",\"active\":\"Header_active__1GP9E\",\"avatar\":\"Header_avatar__12YV_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProjectContent_content__1nvbD\",\"title\":\"ProjectContent_title__3GEmq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"LoginForm_login__2ISZM\",\"logo\":\"LoginForm_logo__1Go5w\",\"form\":\"LoginForm_form__3RZXX\",\"submit\":\"LoginForm_submit__Lzs9_\",\"help\":\"LoginForm_help__450w0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__3mdv8\",\"avatar\":\"Settings_avatar__2ArMw\",\"main\":\"Settings_main__3tQ2w\",\"password\":\"Settings_password__1nCZ9\",\"update\":\"Settings_update__2gBs5\"};"],"sourceRoot":""}